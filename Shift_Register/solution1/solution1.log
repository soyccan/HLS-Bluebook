==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
WARNING: [HLS 200-40] In file included from Shift_Register/shift_reg_template.cpp:2:
Shift_Register/shift_reg_tmpl.h:11:9: warning: 'N_REGS0' macro redefined
#define N_REGS0 8
        ^
Shift_Register/shift_reg.h:12:9: note: previous definition is here
#define N_REGS0 16
        ^
In file included from Shift_Register/shift_reg_template.cpp:2:
Shift_Register/shift_reg_tmpl.h:12:9: warning: 'N_REGS1' macro redefined
#define N_REGS1 4
        ^
Shift_Register/shift_reg.h:13:9: note: previous definition is here
#define N_REGS1 16
        ^
2 warnings generated.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from Shift_Register/shift_reg_class.cpp:1:
In file included from Shift_Register/shift_reg_class.cpp:1:
Shift_Register/shift_class.h:15:69: error: use of undeclared identifier 'nullptr'
    shift_class() : en(true), sync_rst(false), ld(false), load_data(nullptr) {}
                                                                    ^
1 error generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from Shift_Register/shift_reg_class.cpp:1:
In file included from Shift_Register/shift_reg_class.cpp:1:
Shift_Register/shift_class.h:15:69: error: use of undeclared identifier 'NULL'
    shift_class() : en(true), sync_rst(false), ld(false), load_data(NULL) {}
                                                                    ^
1 error generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:51 . Memory (MB): peak = 176.391 ; gain = 85.895
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:51 . Memory (MB): peak = 176.391 ; gain = 85.895
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:52 . Memory (MB): peak = 176.391 ; gain = 85.895
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:52 . Memory (MB): peak = 176.391 ; gain = 85.895
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<ap_int<8>, 8>::operator<<' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<ap_int<8>, 8>::operator<<' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<ap_int<8>, 4>::operator<<' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<ap_int<8>, 4>::operator<<' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs.V' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs.V' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_cla==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:52 . Memory (MB): peak = 176.352 ; gain = 108.164
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:52 . Memory (MB): peak = 176.352 ; gain = 108.164
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:52 . Memory (MB): peak = 176.352 ; gain = 108.164
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:52 . Memory (MB): peak = 176.352 ; gain = 108.164
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<ap_int<8>, 8>::operator<<' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<ap_int<8>, 8>::operator<<' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<ap_int<8>, 4>::operator<<' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<ap_int<8>, 4>::operator<<' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs.V' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs.V' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<ap_int<8>, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:52 . Memory (MB): peak = 175.723 ; gain = 85.598
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:52 . Memory (MB): peak = 175.723 ; gain = 85.598
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:53 . Memory (MB): peak = 175.723 ; gain = 85.598
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:53 . Memory (MB): peak = 175.723 ; gain = 85.598
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:18) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [XFORM 203-102] Partitioning array 'regs.V' automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:53 . Memory (MB): peak = 175.723 ; gain = 85.598
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:53 . Memory (MB): peak = 175.723 ; gain = 85.598
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_basic' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 52.928 seconds; current allocated memory: 98.242 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.058 seconds; current allocated memory: 98.406 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_basic/din_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_basic/dout_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_basic' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_V_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_basic'.
INFO: [HLS 200-111]  Elapsed time: 0.183 seconds; current allocated memory: 98.659 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 1369.86 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 175.723 ; gain = 85.598
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_basic.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_basic.
INFO: [HLS 200-112] Total elapsed time: 54.702 seconds; peak allocated memory: 98.659 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:50 . Memory (MB): peak = 175.848 ; gain = 86.688
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:50 . Memory (MB): peak = 175.848 ; gain = 86.688
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:51 . Memory (MB): peak = 175.848 ; gain = 86.688
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:51 . Memory (MB): peak = 175.848 ; gain = 86.688
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:20) in function 'shift_reg_en' completely with a factor of 12.
INFO: [XFORM 203-102] Partitioning array 'regs.V' automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:51 . Memory (MB): peak = 175.848 ; gain = 86.688
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:51 . Memory (MB): peak = 175.848 ; gain = 86.688
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_en' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 50.815 seconds; current allocated memory: 98.572 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.076 seconds; current allocated memory: 98.805 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_en/din_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_en/dout_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_en/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_en' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_V_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_V_11' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_en'.
INFO: [HLS 200-111]  Elapsed time: 0.117 seconds; current allocated memory: 99.116 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 682.13 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:52 . Memory (MB): peak = 175.848 ; gain = 86.688
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_en.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_en.
INFO: [HLS 200-112] Total elapsed time: 52.265 seconds; peak allocated memory: 99.116 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:50 . Memory (MB): peak = 175.953 ; gain = 86.535
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:50 . Memory (MB): peak = 175.953 ; gain = 86.535
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:51 . Memory (MB): peak = 175.953 ; gain = 86.535
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:51 . Memory (MB): peak = 175.953 ; gain = 86.535
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, char, 4>' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, char, 4>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<2, char, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, int, 8>' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, int, 8>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<1, int, 8>' completely with a factor of 8.
INFO: [XFORM 203-102] Partitioning array 'regs.1' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, int, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, char, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:51 . Memory (MB): peak = 175.953 ; gain = 86.535
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:51 . Memory (MB): peak = 175.953 ; gain = 86.535
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_template' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 51.25 seconds; current allocated memory: 97.280 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.065 seconds; current allocated memory: 97.444 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_template' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_1_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_template'.
INFO: [HLS 200-111]  Elapsed time: 0.135 seconds; current allocated memory: 97.700 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 1369.86 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:53 . Memory (MB): peak = 175.953 ; gain = 86.535
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_template.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_template.
INFO: [HLS 200-112] Total elapsed time: 52.72 seconds; peak allocated memory: 97.700 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:49 . Memory (MB): peak = 176.359 ; gain = 86.246
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:49 . Memory (MB): peak = 176.359 ; gain = 86.246
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:50 . Memory (MB): peak = 176.359 ; gain = 86.246
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:50 . Memory (MB): peak = 176.359 ; gain = 86.246
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, char, 4>' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, char, 4>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<2, char, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, int, 8>' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, int, 8>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<1, int, 8>' completely with a factor of 8.
INFO: [XFORM 203-102] Partitioning array 'regs.1' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, int, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, char, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:50 . Memory (MB): peak = 176.359 ; gain = 86.246
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:50 . Memory (MB): peak = 176.359 ; gain = 86.246
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_template' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 50.309 seconds; current allocated memory: 97.282 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.054 seconds; current allocated memory: 97.462 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_template' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_1_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_template'.
INFO: [HLS 200-111]  Elapsed time: 0.084 seconds; current allocated memory: 97.749 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 1369.86 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:52 . Memory (MB): peak = 176.359 ; gain = 86.246
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_template.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_template.
INFO: [HLS 200-112] Total elapsed time: 51.623 seconds; peak allocated memory: 97.749 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:49 . Memory (MB): peak = 176.559 ; gain = 86.965
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:49 . Memory (MB): peak = 176.559 ; gain = 86.965
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:50 . Memory (MB): peak = 176.559 ; gain = 86.965
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:50 . Memory (MB): peak = 176.559 ; gain = 86.965
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<2, char, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<1, int, 8>' completely with a factor of 8.
INFO: [XFORM 203-102] Automatically partitioning small array 'regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, int, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:50 . Memory (MB): peak = 176.559 ; gain = 86.965
WARNING: [XFORM 203-631] Renaming function 'shift_reg<2, char, 4>' to 'shift_reg' (Shift_Register/shift_reg_tmpl.h:10:13)
INFO: [HLS 200-472] Inferring partial write operation for 'regs' (Shift_Register/shift_reg_tmpl.h:14:13)
INFO: [HLS 200-472] Inferring partial write operation for 'regs' (Shift_Register/shift_reg_tmpl.h:16:13)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:51 . Memory (MB): peak = 176.559 ; gain = 86.965
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_template' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'SHIFT'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 50.607 seconds; current allocated memory: 107.971 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.052 seconds; current allocated memory: 108.155 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'SHIFT'.
WARNING: [SCHED 204-68] The II Violation in module 'shift_reg_template' (Loop: SHIFT): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1)
   between 'store' operation ('regs_addr_1_write_ln16', Shift_Register/shift_reg_tmpl.h:16->Shift_Register/shift_reg_template.cpp:9) of variable 'regs_load_8', Shift_Register/shift_reg_tmpl.h:16->Shift_Register/shift_reg_template.cpp:9 on array 'regs' and 'store' operation ('0_write_ln14', Shift_Register/shift_reg_tmpl.h:14->Shift_Register/shift_reg_template.cpp:9) of variable 'din0', Shift_Register/shift_reg_template.cpp:4 on array 'regs'.
INFO: [SCHED 204-61] Pipelining result : Target II = 1, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.077 seconds; current allocated memory: 108.318 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.068 seconds; current allocated memory: 108.498 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_16' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_3' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_template_mux_42_8_1_1' to 'shift_reg_templatbkb' due to the length limit 20
INFO: [RTGEN 206-100] Generating core module 'shift_reg_templatbkb': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.092 seconds; current allocated memory: 108.774 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_template' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'shift_reg_template_regs' to 'shift_reg_templatcud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_template'.
INFO: [HLS 200-111]  Elapsed time: 0.634 seconds; current allocated memory: 109.173 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 649.77 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_templatcud_ram (RAM)' using distributed RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:52 . Memory (MB): peak = 176.559 ; gain = 86.965
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_template.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_template.
INFO: [HLS 200-112] Total elapsed time: 52.466 seconds; peak allocated memory: 109.173 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:47 . Memory (MB): peak = 177.070 ; gain = 87.195
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:47 . Memory (MB): peak = 177.070 ; gain = 87.195
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:48 . Memory (MB): peak = 177.070 ; gain = 87.195
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:48 . Memory (MB): peak = 177.070 ; gain = 87.195
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, char, 4>' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, char, 4>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<2, char, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, int, 8>' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, int, 8>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<1, int, 8>' completely with a factor of 8.
INFO: [XFORM 203-102] Partitioning array 'regs.1' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, int, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, char, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:48 . Memory (MB): peak = 177.070 ; gain = 87.195
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:48 . Memory (MB): peak = 177.070 ; gain = 87.195
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_template' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 48.254 seconds; current allocated memory: 97.298 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.044 seconds; current allocated memory: 97.478 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_template/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_template' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_1_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_template'.
INFO: [HLS 200-111]  Elapsed time: 0.081 seconds; current allocated memory: 97.765 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 1369.86 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:50 . Memory (MB): peak = 177.070 ; gain = 87.195
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_template.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_template.
INFO: [HLS 200-112] Total elapsed time: 49.598 seconds; peak allocated memory: 97.765 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim file generation failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 176.605 ; gain = 85.316
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 176.605 ; gain = 85.316
INFO: [HLS 200-10] Starting code transformations ...
ERROR: [SYNCHK 200-79] Cannot find the top function 'shift_reg_template' in the design. Possible causes are: (1) the top function name is misspelled; (2) the top function is nonexistent or declared as static.
ERROR: [HLS 200-70] Synthesizability check failed.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:10 . Memory (MB): peak = 175.941 ; gain = 85.684
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:10 . Memory (MB): peak = 175.941 ; gain = 85.684
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 175.941 ; gain = 85.684
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:28) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:45) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:11 . Memory (MB): peak = 175.941 ; gain = 85.684
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_class<signed char, 8>::operator<<' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_class<signed char, 4>::operator<<' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:40) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:45) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:28) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.430 ; gain = 86.098
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.430 ; gain = 86.098
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.430 ; gain = 86.098
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.430 ; gain = 86.098
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_class<signed char, 8>::operator<<' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_class<signed char, 4>::operator<<' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining func==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.473 ; gain = 86.391
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.473 ; gain = 86.391
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.473 ; gain = 86.391
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
WARNING: [SYNCHK 200-77] The top function 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:4) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.473 ; gain = 86.391
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.473 ; gain = 86.391
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.473 ; gain = 86.391
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_class' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 55.932 seconds; current allocated memory: 94.437 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.038 seconds; current allocated memory: 94.480 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/din' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_class' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/din' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/srst' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/en' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.185 seconds; current allocated memory: 94.654 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 0.00 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 176.473 ; gain = 86.391
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_class.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_class.
INFO: [HLS 200-112] Total elapsed time: 57.427 seconds; peak allocated memory: 94.654 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.324 ; gain = 86.289
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.324 ; gain = 86.289
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.324 ; gain = 86.289
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
WARNING: [SYNCHK 200-77] The top function 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:4) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.324 ; gain = 86.289
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.324 ; gain = 86.289
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.324 ; gain = 86.289
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_class' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 56.145 seconds; current allocated memory: 94.499 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.026 seconds; current allocated memory: 94.542 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/din' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_class' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/din' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout0_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout0_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/dout1_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/dout1_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/srst' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/en' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.237 seconds; current allocated memory: 94.731 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 0.00 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.324 ; gain = 86.289
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_class.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_class.
INFO: [HLS 200-112] Total elapsed time: 57.676 seconds; peak allocated memory: 94.731 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.480 ; gain = 86.309
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.480 ; gain = 86.309
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.480 ; gain = 86.309
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.480 ; gain = 86.309
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.480 ; gain = 86.309
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.480 ; gain = 86.309
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_class' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 55.841 seconds; current allocated memory: 94.561 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.041 seconds; current allocated memory: 94.670 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/din' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_class' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/din' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/srst' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/en' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.104 seconds; current allocated memory: 94.913 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 1369.86 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:57 . Memory (MB): peak = 176.480 ; gain = 86.309
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_class.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_class.
INFO: [HLS 200-112] Total elapsed time: 57.203 seconds; peak allocated memory: 94.913 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.230 ; gain = 86.672
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.230 ; gain = 86.672
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.230 ; gain = 86.672
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.230 ; gain = 86.672
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_class<signed char, 8>::operator<<' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:47:22) to (Shift_Register/shift_class.h:47:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:47:22) to (Shift_Register/shift_cl==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from Shift_Register/shift_reg_class.cpp:1:
In file included from Shift_Register/shift_reg_class.cpp:1:
Shift_Register/shift_class.h:55:5: error: expected statement
    }
    ^
1 error generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.586 ; gain = 86.547
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.586 ; gain = 86.547
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.586 ; gain = 86.547
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.586 ; gain = 86.547
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.586 ; gain = 86.547
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.586 ; gain = 86.547
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_class' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 55.933 seconds; current allocated memory: 94.576 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.038 seconds; current allocated memory: 94.685 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/din' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_class' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/din' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/srst' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/en' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.107 seconds; current allocated memory: 94.928 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 1369.86 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:57 . Memory (MB): peak = 176.586 ; gain = 86.547
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_class.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_class.
INFO: [HLS 200-112] Total elapsed time: 57.278 seconds; peak allocated memory: 94.928 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.750 ; gain = 86.352
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.750 ; gain = 86.352
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.750 ; gain = 86.352
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.750 ; gain = 86.352
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.750 ; gain = 86.352
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:46:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.750 ; gain = 86.352
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_class' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 55.899 seconds; current allocated memory: 95.405 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 95.614 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/din' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_class' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'shift_reg_class_shift_reg0_regs' to 'shift_reg_class_sbkb' due to the length limit 20
WARNING: [RTGEN 206-101] Port 'shift_reg_class/din' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.193 seconds; current allocated memory: 95.963 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 684.93 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_class_sbkb_ram (RAM)' using distributed RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:57 . Memory (MB): peak = 176.750 ; gain = 86.352
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_class.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_class.
INFO: [HLS 200-112] Total elapsed time: 57.451 seconds; peak allocated memory: 95.963 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.859 ; gain = 107.344
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.859 ; gain = 107.344
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:59 . Memory (MB): peak = 176.859 ; gain = 107.344
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:59 . Memory (MB): peak = 176.859 ; gain = 107.344
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:59 . Memory (MB): peak = 176.859 ; gain = 107.344
WARNING: [XFORM 203-631] Renaming function 'shift_class<signed char, 8>::operator<<' to 'operator<<' (Shift_Register/shift_class.h:37)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:45:21)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:49:21)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:51:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:59 . Memory (MB): peak = 176.859 ; gain = 107.344
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_class' ...
WARNING: [SYN 201-103] Legalizing function name 'operator<<' to 'operator_ls'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'operator_ls' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 59.303 seconds; current allocated memory: 105.219 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.046 seconds; current allocated memory: 105.337 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.056 seconds; current allocated memory: 105.466 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.053 seconds; current allocated memory: 105.616 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'operator_ls' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'operator_ls'.
INFO: [HLS 200-111]  Elapsed time: 0.079 seconds; current allocated memory: 105.795 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/din' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_class' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'shift_reg0_en' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_sync_rst' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_class_shift_reg0_regs' to 'shift_reg_class_sbkb' due to the length limit 20
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.693 seconds; current allocated memory: 106.186 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 649.77 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_class_sbkb_ram (RAM)' using distributed RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:01:01 . Memory (MB): peak = 176.859 ; gain = 107.344
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_class.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_class.
INFO: [HLS 200-112] Total elapsed time: 61.453 seconds; peak allocated memory: 106.186 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.355 ; gain = 85.984
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.355 ; gain = 85.984
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.355 ; gain = 85.984
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.355 ; gain = 85.984
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:51:21) to (Shift_Register/shift_class.h:51:21) in function 'shift_class<signed char, 4>::operator<<'... converting 5 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 176.355 ; gain = 85.984
WARNING: [XFORM 203-631] Renaming function 'shift_class<signed char, 8>::operator<<' to 'operator<<' (Shift_Register/shift_class.h:37)
WARNING: [XFORM 203-631] Renaming function 'shift_class<signed char, 4>::operator<<' to 'operator<<.1' (Shift_Register/shift_class.h:40:21)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:45:21)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:49:21)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:51:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 176.355 ; gain = 85.984
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_class' ...
WARNING: [SYN 201-103] Legalizing function name 'operator<<.1' to 'operator_1'.
WARNING: [SYN 201-103] Legalizing function name 'operator<<' to 'operator_ls'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'operator_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 56.679 seconds; current allocated memory: 115.017 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.037 seconds; current allocated memory: 115.158 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'operator_ls' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.051 seconds; current allocated memory: 115.316 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 115.429 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.059 seconds; current allocated memory: 115.558 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.062 seconds; current allocated memory: 115.731 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'operator_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'operator_1'.
INFO: [HLS 200-111]  Elapsed time: 0.073 seconds; current allocated memory: 115.944 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'operator_ls' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'operator_ls'.
INFO: [HLS 200-111]  Elapsed time: 0.354 seconds; current allocated memory: 116.188 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/din' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_class' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'shift_reg0_en' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_sync_rst' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_en' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_class_shift_reg0_regs' to 'shift_reg_class_sbkb' due to the length limit 20
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.174 seconds; current allocated memory: 116.613 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 649.77 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_class_sbkb_ram (RAM)' using distributed RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:59 . Memory (MB): peak = 178.230 ; gain = 87.859
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_class.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_class.
INFO: [HLS 200-112] Total elapsed time: 58.576 seconds; peak allocated memory: 116.613 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.914 ; gain = 87.477
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.914 ; gain = 87.477
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.914 ; gain = 87.477
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.914 ; gain = 87.477
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shif==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.484 ; gain = 86.875
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.484 ; gain = 86.875
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.484 ; gain = 86.875
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.484 ; gain = 86.875
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.484 ; gain = 86.875
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:44:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.484 ; gain = 86.875
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_class' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 55.804 seconds; current allocated memory: 95.149 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.059 seconds; current allocated memory: 95.354 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/din' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_class' to 'ap_ctrl_hs'.
INFO: [SYN 201-210] Renamed object name 'shift_reg_class_shift_reg0_regs' to 'shift_reg_class_sbkb' due to the length limit 20
WARNING: [RTGEN 206-101] Port 'shift_reg_class/din' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.129 seconds; current allocated memory: 95.726 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 684.93 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_class_sbkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:57 . Memory (MB): peak = 176.484 ; gain = 86.875
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_class.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_class.
INFO: [HLS 200-112] Total elapsed time: 57.251 seconds; peak allocated memory: 95.726 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.195 ; gain = 85.648
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.195 ; gain = 85.648
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.195 ; gain = 85.648
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.195 ; gain = 85.648
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Ti==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.246 ; gain = 85.996
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.246 ; gain = 85.996
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.246 ; gain = 85.996
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.246 ; gain = 85.996
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.246 ; gain = 85.996
WARNING: [XFORM 203-631] Renaming function 'shift_class<signed char, 8>::operator<<' to 'operator<<' (Shift_Register/shift_class.h:37)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:44:21)
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:48:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.246 ; gain = 85.996
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg_class' ...
WARNING: [SYN 201-103] Legalizing function name 'operator<<' to 'operator_ls'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'operator_ls' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 55.688 seconds; current allocated memory: 105.005 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 105.121 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 105.278 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.058 seconds; current allocated memory: 105.451 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'operator_ls' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'operator_ls'.
INFO: [HLS 200-111]  Elapsed time: 0.072 seconds; current allocated memory: 105.685 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/din' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg_class/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg_class' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'shift_reg0_en' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_sync_rst' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_class_shift_reg0_regs' to 'shift_reg_class_sbkb' due to the length limit 20
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d0' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_address1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_address1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_ce1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_ce1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_we1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_we1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_d1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'shift_reg_class/load_data_d1' to 0.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load_data_q1' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg_class/load' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.543 seconds; current allocated memory: 106.137 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 455.37 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_class_sbkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:58 . Memory (MB): peak = 176.246 ; gain = 85.996
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg_class.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg_class.
INFO: [HLS 200-112] Total elapsed time: 57.532 seconds; peak allocated memory: 106.137 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim file generation failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim file generation failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim file generation failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim file generation failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim file generation failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim file generation done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:54 . Memory (MB): peak = 176.113 ; gain = 86.195
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:54 . Memory (MB): peak = 176.113 ; gain = 86.195
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.113 ; gain = 86.195
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:35) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.113 ; gain = 86.195
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:22) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:25) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:20) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:18) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:15) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:35) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_reg_load.cpp:3:27) to (Shift_Register/shift_reg_load.cpp:29:1) in function 'shift_reg_load'... converting 26 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:23) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.113 ; gain = 86.195
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.113 ; gain = 86.195
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 55.849 seconds; current allocated memory: 99.358 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.207 seconds; current allocated memory: 100.541 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_load_data' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.472 seconds; current allocated memory: 102.125 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 349.77 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:04 ; elapsed = 00:00:58 . Memory (MB): peak = 176.113 ; gain = 86.195
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 58.363 seconds; peak allocated memory: 102.125 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.488 ; gain = 86.273
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.488 ; gain = 86.273
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.488 ; gain = 86.273
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:35) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.488 ; gain = 86.273
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:22) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:25) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:20) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:18) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:32) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:39) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:15) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:35) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_reg_load.cpp:3:27) to (Shift_Register/shift_reg_load.cpp:29:1) in function 'shift_reg_load'... converting 26 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:23) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.488 ; gain = 86.273
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:46:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.488 ; gain = 86.273
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 56.222 seconds; current allocated memory: 108.346 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.095 seconds; current allocated memory: 108.653 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.193 seconds; current allocated memory: 109.436 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.172 seconds; current allocated memory: 110.403 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'shift_reg0_load_data' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_class_shift_reg0_regs' to 'shift_reg_class_sbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 111.029 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.827 seconds; current allocated memory: 112.490 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 349.77 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_class_sbkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:04 ; elapsed = 00:00:59 . Memory (MB): peak = 179.176 ; gain = 88.961
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 59.199 seconds; peak allocated memory: 112.490 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:54 . Memory (MB): peak = 176.574 ; gain = 86.477
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:54 . Memory (MB): peak = 176.574 ; gain = 86.477
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.574 ; gain = 86.477
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:35) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.574 ; gain = 86.477
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:22) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:25) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:20) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:18) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:15) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:35) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_reg_load.cpp:3:27) to (Shift_Register/shift_reg_load.cpp:29:1) in function 'shift_reg_load'... converting 26 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:45:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:45:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:43:17) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:21) to (Shift_Register/shift_class.h:58:9) in function 'shift_class<signed char, 8>::operator<<'... converting 3 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:23) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:31) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.574 ; gain = 86.477
WARNING: [XFORM 203-631] Renaming function 'shift_class<signed char, 8>::operator<<' to 'operator<<' (Shift_Register/shift_class.h:37)
WARNING: [XFORM 203-631] Renaming function 'operator<<' to 'operator<<.1' (Shift_Register/shift_class.h:59:5)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:00:56 . Memory (MB): peak = 176.574 ; gain = 86.477
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 56.079 seconds; current allocated memory: 98.829 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.192 seconds; current allocated memory: 99.854 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_shift_reg0_regs' to 'shift_reg_shift_rbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.505 seconds; current allocated memory: 101.333 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 537.63 MHz
WARNING: [RTMG 210-274] Memory 'shift_reg_shift_rbkb' is read-only, switch it to a ROM.
INFO: [RTMG 210-279] Implementing memory 'shift_reg_shift_rbkb_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:04 ; elapsed = 00:00:59 . Memory (MB): peak = 176.574 ; gain = 86.477
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 58.784 seconds; peak allocated memory: 101.333 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xcvu9p-flgb2104-1-i'
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.742 ; gain = 87.090
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.742 ; gain = 87.090
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 176.742 ; gain = 87.090
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:35) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 176.742 ; gain = 87.090
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:20) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:22) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:25) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:20) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
WARNING: [XFORM 203-505] Pipeline directive for loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' has been removed because the loop is unrolled completely.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:18) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:15) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:35) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_reg_load.cpp:3:27) to (Shift_Register/shift_reg_load.cpp:29:1) in function 'shift_reg_load'... converting 26 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:45:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:45:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:43:17) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:21) to (Shift_Register/shift_class.h:58:9) in function 'shift_class<signed char, 8>::operator<<'... converting 3 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:23) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:31) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.742 ; gain = 87.090
WARNING: [XFORM 203-631] Renaming function 'shift_class<signed char, 8>::operator<<' to 'operator<<' (Shift_Register/shift_class.h:37)
WARNING: [XFORM 203-631] Renaming function 'operator<<' to 'operator<<.1' (Shift_Register/shift_class.h:59:5)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:00:58 . Memory (MB): peak = 176.742 ; gain = 87.090
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 58.168 seconds; current allocated memory: 98.917 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.221 seconds; current allocated memory: 99.979 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_shift_reg0_regs' to 'shift_reg_shift_rbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.448 seconds; current allocated memory: 101.421 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 169.72 MHz
WARNING: [RTMG 210-274] Memory 'shift_reg_shift_rbkb' is read-only, switch it to a ROM.
INFO: [RTMG 210-279] Implementing memory 'shift_reg_shift_rbkb_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:04 ; elapsed = 00:01:01 . Memory (MB): peak = 176.742 ; gain = 87.090
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 60.818 seconds; peak allocated memory: 101.421 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.563 ; gain = 87.301
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.563 ; gain = 87.301
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.563 ; gain = 87.301
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:35) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.563 ; gain = 87.301
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:21) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:24) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:19) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:17) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:15) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:35) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_reg_load.cpp:3:27) to (Shift_Register/shift_reg_load.cpp:28:1) in function 'shift_reg_load'... converting 26 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:45:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:45:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:43:17) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:21) to (Shift_Register/shift_class.h:58:9) in function 'shift_class<signed char, 8>::operator<<'... converting 3 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:23) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:31) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.563 ; gain = 87.301
WARNING: [XFORM 203-631] Renaming function 'shift_class<signed char, 8>::operator<<' to 'operator<<' (Shift_Register/shift_class.h:37)
WARNING: [XFORM 203-631] Renaming function 'operator<<' to 'operator<<.1' (Shift_Register/shift_class.h:59:5)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.563 ; gain = 87.301
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 56.222 seconds; current allocated memory: 98.891 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.297 seconds; current allocated memory: 99.932 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_shift_reg0_regs' to 'shift_reg_shift_rbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.474 seconds; current allocated memory: 101.396 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 169.72 MHz
WARNING: [RTMG 210-274] Memory 'shift_reg_shift_rbkb' is read-only, switch it to a ROM.
INFO: [RTMG 210-279] Implementing memory 'shift_reg_shift_rbkb_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:04 ; elapsed = 00:00:59 . Memory (MB): peak = 176.563 ; gain = 87.301
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 59.027 seconds; peak allocated memory: 101.396 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
ERROR: [HLS 214-124] use of undeclared identifier 'dout0'; did you mean 'dout'?: D:\Repo\hls\labA\Shift_Register\shift_reg_tmpl.h:7
ERROR: [HLS 214-124] use of undeclared identifier 'dout1'; did you mean 'dout'?: D:\Repo\hls\labA\Shift_Register\shift_reg_tmpl.h:7
ERROR: [HLS 214-124] use of undeclared identifier 'load_data': D:\Repo\hls\labA\Shift_Register\shift_reg_tmpl.h:7
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 176.613 ; gain = 87.309
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 176.613 ; gain = 87.309
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.613 ; gain = 87.309
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:59 . Memory (MB): peak = 176.613 ; gain = 87.309
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:21) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:24) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:19) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:17) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
WARNING: [XFORM 203-105] Cannot partition array 'load_data' (Shift_Register/shift_reg.cpp:5): unsupported array access (Shift_Register/shift_class.h:19:9) (reinterpret, etc.).
WARNING: [XFORM 203-105] Cannot partition array 'load_data' (Shift_Register/shift_reg.cpp:5): unsupported array access (Shift_Register/shift_class.h:19:9) (reinterpret, etc.).
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:30) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_reg_load.cpp:3:27) to (Shift_Register/shift_reg_load.cpp:28:1) in function 'shift_reg_load'... converting 26 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:45:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:45:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:43:17) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:21) to (Shift_Register/shift_class.h:58:9) in function 'shift_class<signed char, 8>::operator<<'... converting 3 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:26) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:00:59 . Memory (MB): peak = 176.613 ; gain = 87.309
WARNING: [XFORM 203-631] Renaming function 'shift_class<signed char, 8>::operator<<' to 'operator<<' (Shift_Register/shift_class.h:37)
WARNING: [XFORM 203-631] Renaming function 'operator<<' to 'operator<<.1' (Shift_Register/shift_class.h:59:5)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:00 . Memory (MB): peak = 176.613 ; gain = 87.309
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 59.669 seconds; current allocated memory: 98.852 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.172 seconds; current allocated memory: 99.719 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_shift_reg0_regs' to 'shift_reg_shift_rbkb' due to the length limit 20
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_4' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_5' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_6' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_7' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_8' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_9' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_10' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_11' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.7 seconds; current allocated memory: 100.886 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 280.11 MHz
WARNING: [RTMG 210-274] Memory 'shift_reg_shift_rbkb' is read-only, switch it to a ROM.
INFO: [RTMG 210-279] Implementing memory 'shift_reg_shift_rbkb_rom' using distributed ROMs.
ERROR: [HLS 200-446] Unexpected problem deleting file from disk: "D:/Repo/hls/labA/Shift_Register/solution1/impl\ip\hdl": file already exists
INFO: [HLS 200-112] Total elapsed time: 61.772 seconds; peak allocated memory: 100.886 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
ERROR: [COSIM 212-366] Cannot delete directory  'sim/verilog': it is being used by another program. Please close the program and try again.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
ERROR: [COSIM 212-366] Cannot delete directory  'sim/verilog': it is being used by another program. Please close the program and try again.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.672 ; gain = 86.840
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.672 ; gain = 86.840
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.672 ; gain = 86.840
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:59 . Memory (MB): peak = 176.672 ; gain = 86.840
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:21) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:24) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:19) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:17) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
WARNING: [XFORM 203-105] Cannot partition array 'load_data' (Shift_Register/shift_reg.cpp:5): unsupported array access (Shift_Register/shift_class.h:19:9) (reinterpret, etc.).
WARNING: [XFORM 203-105] Cannot partition array 'load_data' (Shift_Register/shift_reg.cpp:5): unsupported array access (Shift_Register/shift_class.h:19:9) (reinterpret, etc.).
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:30) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_reg_load.cpp:3:27) to (Shift_Register/shift_reg_load.cpp:28:1) in function 'shift_reg_load'... converting 26 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:45:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:45:22) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:45:22) to (Shift_Register/shift_class.h:43:17) in function 'shift_class<signed char, 8>::operator<<'... converting 4 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:21) to (Shift_Register/shift_class.h:58:9) in function 'shift_class<signed char, 8>::operator<<'... converting 3 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:26) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:59 . Memory (MB): peak = 176.672 ; gain = 86.840
WARNING: [XFORM 203-631] Renaming function 'shift_class<signed char, 8>::operator<<' to 'operator<<' (Shift_Register/shift_class.h:37)
WARNING: [XFORM 203-631] Renaming function 'operator<<' to 'operator<<.1' (Shift_Register/shift_class.h:59:5)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:00 . Memory (MB): peak = 176.672 ; gain = 86.840
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 59.655 seconds; current allocated memory: 98.821 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.187 seconds; current allocated memory: 99.688 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_shift_reg0_regs' to 'shift_reg_shift_rbkb' due to the length limit 20
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_4' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_5' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_6' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_7' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_8' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_9' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_10' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_11' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.568 seconds; current allocated memory: 100.854 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 280.11 MHz
WARNING: [RTMG 210-274] Memory 'shift_reg_shift_rbkb' is read-only, switch it to a ROM.
INFO: [RTMG 210-279] Implementing memory 'shift_reg_shift_rbkb_rom' using distributed ROMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:04 ; elapsed = 00:01:03 . Memory (MB): peak = 176.672 ; gain = 86.840
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 62.557 seconds; peak allocated memory: 100.854 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 176.543 ; gain = 86.348
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 176.543 ; gain = 86.348
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.543 ; gain = 86.348
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:29) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:33) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:46) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 176.543 ; gain = 86.348
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:45) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:45) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:21) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:24) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:19) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:17) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:41) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:46) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:29) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:33) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:33) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:46) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 's==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.730 ; gain = 86.555
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.730 ; gain = 86.555
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.730 ; gain = 86.555
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:29) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:33) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:33) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:46) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.730 ; gain = 86.555
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:45) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:45) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 3.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:21) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:24) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:19) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:17) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:41) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:46) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:29) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:33) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator<<' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:41) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:46) automatically.
INFO: [XFORM 203-602] Inlining functio==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from Shift_Register/shift_reg_class.cpp:1:
Shift_Register/shift_reg_class.cpp:16:34: error: no matching constructor for initialization of 'shift_class<dType, 8>'
    static shift_class<dType, 8> shift_reg0(
                                 ^
Shift_Register/shift_class.h:5:7: note: candidate constructor (the implicit copy constructor) not viable: cannot convert argument of incomplete type 'shift_class<dType, 8>::loadDataType *' to 'const shift_class<signed char, 8>'
class shift_class
      ^
Shift_Register/shift_class.h:23:5: note: candidate constructor not viable: cannot convert argument of incomplete type 'shift_class<dType, 8>::loadDataType *' to 'signed char *'
    shift_class(dataType din[NUM_REGS]) : en(true), sync_rst(false), ld(false)
    ^
Shift_Register/shift_class.h:21:5: note: candidate constructor not viable: requires 0 arguments, but 1 was provided
    shift_class() : en(true), sync_rst(false), ld(false) {}
    ^
1 error generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 177.297 ; gain = 87.238
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 177.297 ; gain = 87.238
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:58 . Memory (MB): peak = 177.297 ; gain = 87.238
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
ERROR: [SYNCHK 200-11] Shift_Register/shift_class.h:53: Constant 'shift_reg0.load_data' has an unsynthesizable type 'i8P*' (possible cause(s): pointer to pointer or global pointer).
ERROR: [SYNCHK 200-61] Shift_Register/shift_class.h:53: unsupported memory access on variable 'shift_reg0.load_data' which is (or contains) an array with unknown size at compile time.
INFO: [SYNCHK 200-10] 2 error(s), 0 warning(s).
ERROR: [HLS 200-70] Synthesizability check failed.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.750 ; gain = 86.480
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 176.750 ; gain = 86.480
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.750 ; gain = 86.480
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.750 ; gain = 86.480
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:46) in function 'shift_class<signed char, 8>::operator<<' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:46) in function 'shift_class<signed char, 4>::operator<<' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:21) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:24) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:19) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:17) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:39) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:44) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:44) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_templ==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 177.109 ; gain = 86.395
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:55 . Memory (MB): peak = 177.109 ; gain = 86.395
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 177.109 ; gain = 86.395
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:28) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:47) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 177.109 ; gain = 86.395
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::shift' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::shift' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:21) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:24) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:19) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:17) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:42) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:47) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:28) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:47) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:26) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:30) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:17) to (Shift_Register/shift_class.h:52:13) in function 'shift_class<signed char, 8>::shift'... converting 3 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::shift' into 'shift_reg' (Shift_Register/shift_reg_class.cpp:35->Shift_Register/shift_reg.cpp:34) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 177.109 ; gain = 86.395
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:45:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:00:57 . Memory (MB): peak = 177.109 ; gain = 86.395
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 57.02 seconds; current allocated memory: 99.344 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.154 seconds; current allocated memory: 100.310 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_shift_reg0_regs' to 'shift_reg_shift_rbkb' due to the length limit 20
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_4' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_5' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_6' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_7' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_8' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_9' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_10' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'shift_reg/dout1_11' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.533 seconds; current allocated memory: 101.662 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 280.11 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_shift_rbkb_ram (RAM)' using block RAMs with power-on initialization.
ERROR: [HLS 200-446] Unexpected problem deleting file from disk: "D:/Repo/hls/labA/Shift_Register/solution1/impl\ip\hdl": file already exists
INFO: [HLS 200-112] Total elapsed time: 59.052 seconds; peak allocated memory: 101.662 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
ERROR: [COSIM 212-366] Cannot delete directory  'sim/verilog': it is being used by another program. Please close the program and try again.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
ERROR: [COSIM 212-366] Cannot delete directory  'sim/verilog': it is being used by another program. Please close the program and try again.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
ERROR: [COSIM 212-366] Cannot delete directory  'sim/verilog': it is being used by another program. Please close the program and try again.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
ERROR: [COSIM 212-366] Cannot delete directory  'sim/verilog': it is being used by another program. Please close the program and try again.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.777 ; gain = 87.250
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.777 ; gain = 87.250
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.777 ; gain = 87.250
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:28) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:47) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:56 . Memory (MB): peak = 176.777 ; gain = 87.250
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::shift' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::shift' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:21) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:24) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:19) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:17) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:42) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:47) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:28) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:47) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:26) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:30) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:17) to (Shift_Register/shift_class.h:52:13) in function 'shift_class<signed char, 8>::shift'... converting 3 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::shift' into 'shift_reg' (Shift_Register/shift_reg_class.cpp:35->Shift_Register/shift_reg.cpp:34) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:57 . Memory (MB): peak = 176.777 ; gain = 87.250
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:45:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:00:57 . Memory (MB): peak = 176.777 ; gain = 87.250
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 57.524 seconds; current allocated memory: 99.278 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.155 seconds; current allocated memory: 100.217 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_shift_reg0_regs' to 'shift_reg_shift_rbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.457 seconds; current allocated memory: 101.563 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 280.11 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_shift_rbkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:05 ; elapsed = 00:01:00 . Memory (MB): peak = 176.777 ; gain = 87.250
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 60.204 seconds; peak allocated memory: 101.563 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:59 . Memory (MB): peak = 176.781 ; gain = 87.059
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:59 . Memory (MB): peak = 176.781 ; gain = 87.059
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:01:00 . Memory (MB): peak = 176.781 ; gain = 87.059
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:28) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:47) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:01:00 . Memory (MB): peak = 176.781 ; gain = 87.059
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::shift' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::shift' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:21) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:24) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:19) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:17) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:42) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:47) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:28) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:47) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:26) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:30) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:17) to (Shift_Register/shift_class.h:52:13) in function 'shift_class<signed char, 8>::shift'... converting 3 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::shift' into 'shift_reg' (Shift_Register/shift_reg_class.cpp:35->Shift_Register/shift_reg.cpp:34) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:01:01 . Memory (MB): peak = 176.781 ; gain = 87.059
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:45:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:01 . Memory (MB): peak = 176.781 ; gain = 87.059
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 61.198 seconds; current allocated memory: 99.275 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.212 seconds; current allocated memory: 100.213 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_shift_reg0_regs' to 'shift_reg_shift_rbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.499 seconds; current allocated memory: 101.560 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 280.11 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_shift_rbkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:05 ; elapsed = 00:01:04 . Memory (MB): peak = 176.781 ; gain = 87.059
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 63.948 seconds; peak allocated memory: 101.560 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:01:04 . Memory (MB): peak = 176.516 ; gain = 87.188
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:01:04 . Memory (MB): peak = 176.516 ; gain = 87.188
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:01:05 . Memory (MB): peak = 176.516 ; gain = 87.188
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:28) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:47) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_ip' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:42) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:01:05 . Memory (MB): peak = 176.516 ; gain = 87.188
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_ip.cpp:23) in function 'shift_reg_ip' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::shift' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::shift' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:8) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:21) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:11) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:24) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:8) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:19) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:8) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:17) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:42) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:47) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:19) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:28) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:47) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:9) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_basic' into 'shift_reg' (Shift_Register/shift_reg.cpp:18) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_en' into 'shift_reg' (Shift_Register/shift_reg.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_load' into 'shift_reg' (Shift_Register/shift_reg.cpp:26) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_sreset' into 'shift_reg' (Shift_Register/shift_reg.cpp:30) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_class' into 'shift_reg' (Shift_Register/shift_reg.cpp:34) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_ip' into 'shift_reg' (Shift_Register/shift_reg.cpp:38) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg_template' into 'shift_reg' (Shift_Register/shift_reg.cpp:42) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:17) to (Shift_Register/shift_class.h:52:13) in function 'shift_class<signed char, 8>::shift'... converting 3 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::shift' into 'shift_reg' (Shift_Register/shift_reg_class.cpp:35->Shift_Register/shift_reg.cpp:34) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:01:06 . Memory (MB): peak = 176.516 ; gain = 87.188
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:45:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:06 . Memory (MB): peak = 176.516 ; gain = 87.188
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 66.337 seconds; current allocated memory: 100.074 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.166 seconds; current allocated memory: 101.140 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_shift_reg0_regs' to 'shift_reg_shift_rbkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'shift_reg_Sreg_Array' to 'shift_reg_Sreg_Arcud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.535 seconds; current allocated memory: 102.723 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 280.11 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_shift_rbkb_ram (RAM)' using block RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:05 ; elapsed = 00:01:09 . Memory (MB): peak = 176.516 ; gain = 87.188
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 69.296 seconds; peak allocated memory: 102.723 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:01:05 . Memory (MB): peak = 176.148 ; gain = 85.613
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:01:05 . Memory (MB): peak = 176.148 ; gain = 85.613
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:01:06 . Memory (MB): peak = 176.148 ; gain = 85.613
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:29) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:35) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:48) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:01:06 . Memory (MB): peak = 176.148 ; gain = 85.613
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_ip.cpp:24) in function 'shift_reg_ip' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::shift' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::shift' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:10) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:23) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:13) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:26) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:10) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:21) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:10) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:19) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:43) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:48) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-102] Automatically partitioning small array 'shift_reg1.regs' completely based on array size.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs' in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:29) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:35) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:35) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:48) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:11) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:17) to (Shift_Register/shift_class.h:52:13) in function 'shift_class<signed char, 8>::shift'... converting 3 basic blocks.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:36) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:07 . Memory (MB): peak = 176.148 ; gain = 85.613
INFO: [HLS 200-472] Inferring partial write operation for 'shift_reg0.regs' (Shift_Register/shift_class.h:45:21)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:08 . Memory (MB): peak = 218.609 ; gain = 128.074
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 67.889 seconds; current allocated memory: 167.566 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.054 seconds; current allocated memory: 167.723 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.077 seconds; current allocated memory: 167.985 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.076 seconds; current allocated memory: 168.237 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.095 seconds; current allocated memory: 168.394 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.048 seconds; current allocated memory: 168.547 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.066 seconds; current allocated memory: 168.693 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.052 seconds; current allocated memory: 168.884 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.069 seconds; current allocated memory: 169.042 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.047 seconds; current allocated memory: 169.226 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.056 seconds; current allocated memory: 169.299 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.043 seconds; current allocated memory: 169.405 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.051 seconds; current allocated memory: 169.483 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.043 seconds; current allocated memory: 169.588 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.074 seconds; current allocated memory: 170.029 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.159 seconds; current allocated memory: 170.767 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'shift_reg_ip_Sreg_Array' to 'shift_reg_ip_Sregbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_ip'.
INFO: [HLS 200-111]  Elapsed time: 0.166 seconds; current allocated memory: 171.549 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
INFO: [SYN 201-210] Renamed object name 'shift_reg_class_shift_reg0_regs' to 'shift_reg_class_scud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.773 seconds; current allocated memory: 172.473 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_sreset'.
INFO: [HLS 200-111]  Elapsed time: 0.275 seconds; current allocated memory: 173.233 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_load'.
INFO: [HLS 200-111]  Elapsed time: 0.252 seconds; current allocated memory: 173.959 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_en'.
INFO: [HLS 200-111]  Elapsed time: 0.235 seconds; current allocated memory: 174.704 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_basic'.
INFO: [HLS 200-111]  Elapsed time: 0.195 seconds; current allocated memory: 175.295 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_template'.
INFO: [HLS 200-111]  Elapsed time: 0.189 seconds; current allocated memory: 175.874 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.375 seconds; current allocated memory: 178.294 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 280.11 MHz
INFO: [RTMG 210-278] Implementing memory 'shift_reg_class_scud_ram (RAM)' using block RAMs with power-on initialization.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:07 ; elapsed = 00:01:13 . Memory (MB): peak = 250.309 ; gain = 159.773
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 73.305 seconds; peak allocated memory: 178.294 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
ERROR: [HLS 214-122] '#pragma HLS' is only allowed in function scope: D:\Repo\hls\labA\Shift_Register\shift_class.h:9
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
ERROR: [HLS 214-122] '#pragma HLS' is only allowed in function scope: D:\Repo\hls\labA\Shift_Register\shift_class.h:7
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:01:05 . Memory (MB): peak = 177.168 ; gain = 87.273
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:01:05 . Memory (MB): peak = 177.168 ; gain = 87.273
INFO: [HLS 200-10] Starting code transformations ...
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:35).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:43).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:48).
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:01:05 . Memory (MB): peak = 177.168 ; gain = 87.273
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:29) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:01:05 . Memory (MB): peak = 177.168 ; gain = 87.273
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_ip.cpp:25) in function 'shift_reg_ip' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 8>::shift' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:40) in function 'shift_class<signed char, 4>::shift' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:10) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:23) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:13) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:26) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:10) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:21) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:10) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:19) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:43) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:48) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'shift_reg1.regs' automatically.
INFO: [XFORM 203-102] Partitioning array 'shift_reg0.regs' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:29) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:35) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:11) automatically.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:06 . Memory (MB): peak = 177.168 ; gain = 87.273
WARNING: [XFORM 203-631] Renaming function 'shift_class<signed char, 8>::shift' to 'shift' (Shift_Register/shift_class.h:37)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:07 . Memory (MB): peak = 228.488 ; gain = 138.594
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 66.954 seconds; current allocated memory: 177.119 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.107 seconds; current allocated memory: 177.277 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.061 seconds; current allocated memory: 177.425 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.049 seconds; current allocated memory: 177.594 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.064 seconds; current allocated memory: 177.726 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.046 seconds; current allocated memory: 177.903 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.063 seconds; current allocated memory: 178.023 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.049 seconds; current allocated memory: 178.176 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.068 seconds; current allocated memory: 178.359 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.052 seconds; current allocated memory: 178.550 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.072 seconds; current allocated memory: 178.655 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.049 seconds; current allocated memory: 178.839 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.058 seconds; current allocated memory: 178.913 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.043 seconds; current allocated memory: 179.018 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.053 seconds; current allocated memory: 179.096 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.044 seconds; current allocated memory: 179.201 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.074 seconds; current allocated memory: 179.643 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.133 seconds; current allocated memory: 180.368 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'shift_reg_ip_Sreg_Array' to 'shift_reg_ip_Sregbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_ip'.
INFO: [HLS 200-111]  Elapsed time: 0.151 seconds; current allocated memory: 181.150 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift'.
INFO: [HLS 200-111]  Elapsed time: 0.463 seconds; current allocated memory: 181.437 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'shift_reg0_en' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_sync_rst' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_ld' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.208 seconds; current allocated memory: 182.241 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_sreset'.
INFO: [HLS 200-111]  Elapsed time: 0.184 seconds; current allocated memory: 182.901 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_load'.
INFO: [HLS 200-111]  Elapsed time: 0.267 seconds; current allocated memory: 183.681 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_en'.
INFO: [HLS 200-111]  Elapsed time: 0.242 seconds; current allocated memory: 184.410 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_basic'.
INFO: [HLS 200-111]  Elapsed time: 0.241 seconds; current allocated memory: 185.008 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_template'.
INFO: [HLS 200-111]  Elapsed time: 0.182 seconds; current allocated memory: 185.579 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.327 seconds; current allocated memory: 188.037 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 331.46 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:07 ; elapsed = 00:01:12 . Memory (MB): peak = 259.609 ; gain = 169.715
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 72.056 seconds; peak allocated memory: 188.037 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:01:02 . Memory (MB): peak = 177.293 ; gain = 86.797
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:01:02 . Memory (MB): peak = 177.293 ; gain = 86.797
INFO: [HLS 200-10] Starting code transformations ...
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:35).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:43).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:35).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:36).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:48).
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:01:03 . Memory (MB): peak = 177.293 ; gain = 86.797
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:29) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:01:03 . Memory (MB): peak = 177.293 ; gain = 86.797
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_ip.cpp:25) in function 'shift_reg_ip' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:10) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:23) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:13) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:26) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:10) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:21) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:10) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:19) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_reg_class' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:43) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:48) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'shift_reg1.regs' automatically.
INFO: [XFORM 203-102] Partitioning array 'shift_reg0.regs' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:20) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:21) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:22) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:29) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:11) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:44:17) to (Shift_Register/shift_class.h:52:13) in function 'shift_reg_class'... converting 17 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:01:04 . Memory (MB): peak = 177.293 ; gain = 86.797
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:04 . Memory (MB): peak = 218.746 ; gain = 128.250
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 64.471 seconds; current allocated memory: 167.527 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.049 seconds; current allocated memory: 167.685 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.066 seconds; current allocated memory: 167.879 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.056 seconds; current allocated memory: 168.156 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.077 seconds; current allocated memory: 168.276 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.046 seconds; current allocated memory: 168.466 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.065 seconds; current allocated memory: 168.612 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 168.803 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.067 seconds; current allocated memory: 168.924 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.046 seconds; current allocated memory: 169.108 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.055 seconds; current allocated memory: 169.182 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.041 seconds; current allocated memory: 169.288 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 169.365 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.042 seconds; current allocated memory: 169.470 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.073 seconds; current allocated memory: 169.912 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.215 seconds; current allocated memory: 170.699 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'shift_reg_ip_Sreg_Array' to 'shift_reg_ip_Sregbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_ip'.
INFO: [HLS 200-111]  Elapsed time: 0.148 seconds; current allocated memory: 171.481 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.474 seconds; current allocated memory: 172.314 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_sreset'.
INFO: [HLS 200-111]  Elapsed time: 0.224 seconds; current allocated memory: 173.070 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_load'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 173.796 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_en'.
INFO: [HLS 200-111]  Elapsed time: 0.201 seconds; current allocated memory: 174.525 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_basic'.
INFO: [HLS 200-111]  Elapsed time: 0.187 seconds; current allocated memory: 175.115 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_template'.
INFO: [HLS 200-111]  Elapsed time: 0.151 seconds; current allocated memory: 175.693 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.303 seconds; current allocated memory: 178.134 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 331.46 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:06 ; elapsed = 00:01:09 . Memory (MB): peak = 250.117 ; gain = 159.621
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 68.98 seconds; peak allocated memory: 178.134 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:01:05 . Memory (MB): peak = 176.957 ; gain = 86.527
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:01:05 . Memory (MB): peak = 176.957 ; gain = 86.527
INFO: [HLS 200-10] Starting code transformations ...
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:37).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:45).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:37).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:38).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:50).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:22).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:23).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:24).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:31).
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:01:06 . Memory (MB): peak = 176.957 ; gain = 86.527
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:01:06 . Memory (MB): peak = 176.957 ; gain = 86.527
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_ip.cpp:25) in function 'shift_reg_ip' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:10) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:23) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:13) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:26) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:10) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:21) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:10) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:19) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:41) in function 'shift_reg_class' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:45) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:50) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'shift_reg1.regs' automatically.
INFO: [XFORM 203-102] Partitioning array 'shift_reg0.regs' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:11) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:51:21) to (Shift_Register/shift_class.h:52:13) in function 'shift_reg_class'... converting 15 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:07 . Memory (MB): peak = 176.957 ; gain = 86.527
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:08 . Memory (MB): peak = 218.539 ; gain = 128.109
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 67.844 seconds; current allocated memory: 167.508 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.072 seconds; current allocated memory: 167.666 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.067 seconds; current allocated memory: 167.858 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.058 seconds; current allocated memory: 168.134 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.077 seconds; current allocated memory: 168.270 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.046 seconds; current allocated memory: 168.460 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.065 seconds; current allocated memory: 168.606 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 168.797 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.069 seconds; current allocated memory: 168.902 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.047 seconds; current allocated memory: 169.086 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.055 seconds; current allocated memory: 169.160 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.041 seconds; current allocated memory: 169.265 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.051 seconds; current allocated memory: 169.359 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.043 seconds; current allocated memory: 169.464 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.074 seconds; current allocated memory: 169.905 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.153 seconds; current allocated memory: 170.677 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'shift_reg_ip_Sreg_Array' to 'shift_reg_ip_Sregbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_ip'.
INFO: [HLS 200-111]  Elapsed time: 0.162 seconds; current allocated memory: 171.459 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.594 seconds; current allocated memory: 172.304 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_sreset'.
INFO: [HLS 200-111]  Elapsed time: 0.234 seconds; current allocated memory: 173.068 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_load'.
INFO: [HLS 200-111]  Elapsed time: 0.184 seconds; current allocated memory: 173.778 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_en'.
INFO: [HLS 200-111]  Elapsed time: 0.258 seconds; current allocated memory: 174.523 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_basic'.
INFO: [HLS 200-111]  Elapsed time: 0.177 seconds; current allocated memory: 175.113 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_template'.
INFO: [HLS 200-111]  Elapsed time: 0.204 seconds; current allocated memory: 175.691 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.328 seconds; current allocated memory: 178.116 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 331.46 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:07 ; elapsed = 00:01:13 . Memory (MB): peak = 249.516 ; gain = 159.086
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 73.001 seconds; peak allocated memory: 178.116 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:01:03 . Memory (MB): peak = 176.430 ; gain = 86.719
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:01:03 . Memory (MB): peak = 176.430 ; gain = 86.719
INFO: [HLS 200-10] Starting code transformations ...
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:25).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:26).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:40).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:48).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:40).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:41).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:53).
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:01:04 . Memory (MB): peak = 176.430 ; gain = 86.719
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:01:04 . Memory (MB): peak = 176.430 ; gain = 86.719
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_ip.cpp:25) in function 'shift_reg_ip' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:10) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:23) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:13) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:26) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:10) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:21) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:10) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:19) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:46) in function 'shift_reg_class' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:48) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:53) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'shift_reg1.regs' automatically.
INFO: [XFORM 203-102] Partitioning array 'shift_reg0.regs' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:11) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:56:21) to (Shift_Register/shift_class.h:57:13) in function 'shift_reg_class'... converting 15 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:04 . Memory (MB): peak = 176.430 ; gain = 86.719
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:05 . Memory (MB): peak = 218.742 ; gain = 129.031
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 65.009 seconds; current allocated memory: 167.510 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.043 seconds; current allocated memory: 167.667 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.067 seconds; current allocated memory: 167.859 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.058 seconds; current allocated memory: 168.135 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.079 seconds; current allocated memory: 168.271 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.046 seconds; current allocated memory: 168.461 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.065 seconds; current allocated memory: 168.607 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.051 seconds; current allocated memory: 168.798 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.071 seconds; current allocated memory: 168.903 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.047 seconds; current allocated memory: 169.087 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.057 seconds; current allocated memory: 169.161 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.043 seconds; current allocated memory: 169.266 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 169.360 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.043 seconds; current allocated memory: 169.465 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.072 seconds; current allocated memory: 169.906 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 170.678 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'shift_reg_ip_Sreg_Array' to 'shift_reg_ip_Sregbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_ip'.
INFO: [HLS 200-111]  Elapsed time: 0.153 seconds; current allocated memory: 171.460 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.482 seconds; current allocated memory: 172.305 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_sreset'.
INFO: [HLS 200-111]  Elapsed time: 0.291 seconds; current allocated memory: 173.069 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_load'.
INFO: [HLS 200-111]  Elapsed time: 0.203 seconds; current allocated memory: 173.779 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_en'.
INFO: [HLS 200-111]  Elapsed time: 0.236 seconds; current allocated memory: 174.524 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_basic'.
INFO: [HLS 200-111]  Elapsed time: 0.339 seconds; current allocated memory: 175.114 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_template'.
INFO: [HLS 200-111]  Elapsed time: 0.168 seconds; current allocated memory: 175.692 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.336 seconds; current allocated memory: 178.117 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 331.46 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:07 ; elapsed = 00:01:10 . Memory (MB): peak = 249.379 ; gain = 159.668
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 69.933 seconds; peak allocated memory: 178.117 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-483] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release. Use 'config_export -vivado_optimization_level' as its replacement.
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
WARNING: [HLS 200-484] The 'config_sdx -optimization_level' command is deprecated and will be removed in a future release.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_basic.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_class.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_en.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_load.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_sreset.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Shift_Register/shift_reg_template.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:01:03 . Memory (MB): peak = 177.152 ; gain = 86.652
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:01:03 . Memory (MB): peak = 177.152 ; gain = 86.652
INFO: [HLS 200-10] Starting code transformations ...
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:25).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::set_sync_rst' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:26).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::load' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:27).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::set_enable' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:34).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:40).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:48).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:40).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 8>::shift' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:41).
INFO: [XFORM 203-603] Inlining function 'shift_class<signed char, 4>::operator[]' into 'shift_reg_class' (Shift_Register/shift_reg_class.cpp:53).
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:01:04 . Memory (MB): peak = 177.152 ; gain = 86.652
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:01:04 . Memory (MB): peak = 177.152 ; gain = 86.652
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<2, int, 4>' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_tmpl.h:10) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_tmpl.h:19) in function 'shift_reg<1, signed char, 8>' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_ip.cpp:25) in function 'shift_reg_ip' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_sreset.cpp:10) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_sreset.cpp:23) in function 'shift_reg_sreset' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_load.cpp:13) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_load.cpp:26) in function 'shift_reg_load' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_en.cpp:10) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_en.cpp:21) in function 'shift_reg_en' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_reg_basic.cpp:10) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'WRITE' (Shift_Register/shift_reg_basic.cpp:19) in function 'shift_reg_basic' completely with a factor of 12.
INFO: [HLS 200-489] Unrolling loop 'SHIFT' (Shift_Register/shift_class.h:47) in function 'shift_reg_class' completely with a factor of 4.
INFO: [HLS 200-489] Unrolling loop 'WRITE0' (Shift_Register/shift_reg_class.cpp:48) in function 'shift_reg_class' completely with a factor of 8.
INFO: [HLS 200-489] Unrolling loop 'WRITE1' (Shift_Register/shift_reg_class.cpp:53) in function 'shift_reg_class' completely with a factor of 4.
INFO: [XFORM 203-102] Partitioning array 'regs.9' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.8' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.7' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.6' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs.5' automatically.
INFO: [XFORM 203-102] Partitioning array 'regs' automatically.
INFO: [XFORM 203-101] Partitioning array 'dout1' (Shift_Register/shift_reg.cpp:7) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'dout0' (Shift_Register/shift_reg.cpp:6) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'load_data' (Shift_Register/shift_reg.cpp:5) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg0.regs'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'shift_reg1.regs'  in dimension 1 completely.
INFO: [XFORM 203-602] Inlining function 'shift_reg<1, signed char, 8>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:10) automatically.
INFO: [XFORM 203-602] Inlining function 'shift_reg<2, int, 4>' into 'shift_reg_template' (Shift_Register/shift_reg_template.cpp:11) automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Shift_Register/shift_class.h:57:21) to (Shift_Register/shift_class.h:58:13) in function 'shift_reg_class'... converting 15 basic blocks.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:05 . Memory (MB): peak = 177.152 ; gain = 86.652
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:01:05 . Memory (MB): peak = 218.641 ; gain = 128.141
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'shift_reg' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 65.429 seconds; current allocated memory: 167.531 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.043 seconds; current allocated memory: 167.689 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.075 seconds; current allocated memory: 167.880 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.056 seconds; current allocated memory: 168.156 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.078 seconds; current allocated memory: 168.292 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.047 seconds; current allocated memory: 168.482 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.067 seconds; current allocated memory: 168.628 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.051 seconds; current allocated memory: 168.819 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.068 seconds; current allocated memory: 168.925 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.046 seconds; current allocated memory: 169.108 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.056 seconds; current allocated memory: 169.182 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.043 seconds; current allocated memory: 169.288 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.056 seconds; current allocated memory: 169.381 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.044 seconds; current allocated memory: 169.486 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.075 seconds; current allocated memory: 169.928 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.167 seconds; current allocated memory: 170.700 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'shift_reg_ip_Sreg_Array' to 'shift_reg_ip_Sregbkb' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_ip'.
INFO: [HLS 200-111]  Elapsed time: 0.161 seconds; current allocated memory: 171.482 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_class' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg0_regs_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'shift_reg1_regs_3' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_class'.
INFO: [HLS 200-111]  Elapsed time: 0.495 seconds; current allocated memory: 172.327 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_sreset' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_8_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_8_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_sreset'.
INFO: [HLS 200-111]  Elapsed time: 0.258 seconds; current allocated memory: 173.090 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_load' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_7_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_7_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_load'.
INFO: [HLS 200-111]  Elapsed time: 0.212 seconds; current allocated memory: 173.801 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_en' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_6_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_6_11' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_en'.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 174.545 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_basic' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_5_10' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_9' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_8' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_7' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_5_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_basic'.
INFO: [HLS 200-111]  Elapsed time: 0.175 seconds; current allocated memory: 175.136 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg_template' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Register 'regs_9_6' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_5' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_4' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_3' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_9_0' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_2' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_1' is power-on initialization.
WARNING: [RTGEN 206-101] Register 'regs_0' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg_template'.
INFO: [HLS 200-111]  Elapsed time: 0.179 seconds; current allocated memory: 175.714 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'shift_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/din1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_1' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_2' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_3' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_4' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_5' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_6' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_7' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_8' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_9' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_10' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load_data_11' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_4' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_5' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_6' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_7' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_8' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_9' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_10' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout0_11' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_0' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_1' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_2' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/dout1_3' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/srst' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/load' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'shift_reg/select_V' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'shift_reg' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'shift_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.353 seconds; current allocated memory: 178.139 MB.
INFO: [HLS 200-789] **** Estimated Fmax: 331.46 MHz
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:07 ; elapsed = 00:01:10 . Memory (MB): peak = 249.371 ; gain = 158.871
INFO: [VHDL 208-304] Generating VHDL RTL for shift_reg.
INFO: [VLOG 209-307] Generating Verilog RTL for shift_reg.
INFO: [HLS 200-112] Total elapsed time: 70.244 seconds; peak allocated memory: 178.139 MB.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SYN 201-201] Setting up clock 'default' with an uncertainty of 1.25ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-435] Setting 'config_sdx -optimization_level' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: config_export -vivado_optimization_level=2
INFO: [HLS 200-435] Setting 'config_sdx -target' configuration: set_clock_uncertainty default
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
