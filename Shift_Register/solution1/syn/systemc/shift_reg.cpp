// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "shift_reg.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic shift_reg::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic shift_reg::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> shift_reg::ap_ST_fsm_state1 = "1";
const sc_lv<2> shift_reg::ap_ST_fsm_state2 = "10";
const sc_lv<32> shift_reg::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<3> shift_reg::ap_const_lv3_4 = "100";
const sc_lv<32> shift_reg::ap_const_lv32_1 = "1";
const sc_lv<3> shift_reg::ap_const_lv3_5 = "101";
const sc_lv<3> shift_reg::ap_const_lv3_1 = "1";
const bool shift_reg::ap_const_boolean_0 = false;
const sc_lv<3> shift_reg::ap_const_lv3_2 = "10";
const sc_lv<3> shift_reg::ap_const_lv3_3 = "11";
const sc_lv<3> shift_reg::ap_const_lv3_0 = "000";
const sc_lv<3> shift_reg::ap_const_lv3_7 = "111";
const sc_lv<3> shift_reg::ap_const_lv3_6 = "110";
const bool shift_reg::ap_const_boolean_1 = true;

shift_reg::shift_reg(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_shift_reg_class_fu_470 = new shift_reg_class("grp_shift_reg_class_fu_470");
    grp_shift_reg_class_fu_470->ap_clk(ap_clk);
    grp_shift_reg_class_fu_470->ap_rst(ap_rst);
    grp_shift_reg_class_fu_470->ap_start(grp_shift_reg_class_fu_470_ap_start);
    grp_shift_reg_class_fu_470->ap_done(grp_shift_reg_class_fu_470_ap_done);
    grp_shift_reg_class_fu_470->ap_idle(grp_shift_reg_class_fu_470_ap_idle);
    grp_shift_reg_class_fu_470->ap_ready(grp_shift_reg_class_fu_470_ap_ready);
    grp_shift_reg_class_fu_470->din(din0);
    grp_shift_reg_class_fu_470->load_data_0_read(load_data_0);
    grp_shift_reg_class_fu_470->load_data_1_read(load_data_1);
    grp_shift_reg_class_fu_470->load_data_2_read(load_data_2);
    grp_shift_reg_class_fu_470->load_data_3_read(load_data_3);
    grp_shift_reg_class_fu_470->load_data_4_read(load_data_4);
    grp_shift_reg_class_fu_470->load_data_5_read(load_data_5);
    grp_shift_reg_class_fu_470->load_data_6_read(load_data_6);
    grp_shift_reg_class_fu_470->load_data_7_read(load_data_7);
    grp_shift_reg_class_fu_470->srst(srst);
    grp_shift_reg_class_fu_470->load(load);
    grp_shift_reg_class_fu_470->en(en);
    grp_shift_reg_class_fu_470->ap_return_0(grp_shift_reg_class_fu_470_ap_return_0);
    grp_shift_reg_class_fu_470->ap_return_1(grp_shift_reg_class_fu_470_ap_return_1);
    grp_shift_reg_class_fu_470->ap_return_2(grp_shift_reg_class_fu_470_ap_return_2);
    grp_shift_reg_class_fu_470->ap_return_3(grp_shift_reg_class_fu_470_ap_return_3);
    grp_shift_reg_class_fu_470->ap_return_4(grp_shift_reg_class_fu_470_ap_return_4);
    grp_shift_reg_class_fu_470->ap_return_5(grp_shift_reg_class_fu_470_ap_return_5);
    grp_shift_reg_class_fu_470->ap_return_6(grp_shift_reg_class_fu_470_ap_return_6);
    grp_shift_reg_class_fu_470->ap_return_7(grp_shift_reg_class_fu_470_ap_return_7);
    grp_shift_reg_class_fu_470->ap_return_8(grp_shift_reg_class_fu_470_ap_return_8);
    grp_shift_reg_class_fu_470->ap_return_9(grp_shift_reg_class_fu_470_ap_return_9);
    grp_shift_reg_class_fu_470->ap_return_10(grp_shift_reg_class_fu_470_ap_return_10);
    grp_shift_reg_class_fu_470->ap_return_11(grp_shift_reg_class_fu_470_ap_return_11);
    grp_shift_reg_en_fu_522 = new shift_reg_en("grp_shift_reg_en_fu_522");
    grp_shift_reg_en_fu_522->ap_clk(ap_clk);
    grp_shift_reg_en_fu_522->ap_rst(ap_rst);
    grp_shift_reg_en_fu_522->ap_start(grp_shift_reg_en_fu_522_ap_start);
    grp_shift_reg_en_fu_522->ap_done(grp_shift_reg_en_fu_522_ap_done);
    grp_shift_reg_en_fu_522->ap_idle(grp_shift_reg_en_fu_522_ap_idle);
    grp_shift_reg_en_fu_522->ap_ready(grp_shift_reg_en_fu_522_ap_ready);
    grp_shift_reg_en_fu_522->din(din0);
    grp_shift_reg_en_fu_522->en(en);
    grp_shift_reg_en_fu_522->ap_return_0(grp_shift_reg_en_fu_522_ap_return_0);
    grp_shift_reg_en_fu_522->ap_return_1(grp_shift_reg_en_fu_522_ap_return_1);
    grp_shift_reg_en_fu_522->ap_return_2(grp_shift_reg_en_fu_522_ap_return_2);
    grp_shift_reg_en_fu_522->ap_return_3(grp_shift_reg_en_fu_522_ap_return_3);
    grp_shift_reg_en_fu_522->ap_return_4(grp_shift_reg_en_fu_522_ap_return_4);
    grp_shift_reg_en_fu_522->ap_return_5(grp_shift_reg_en_fu_522_ap_return_5);
    grp_shift_reg_en_fu_522->ap_return_6(grp_shift_reg_en_fu_522_ap_return_6);
    grp_shift_reg_en_fu_522->ap_return_7(grp_shift_reg_en_fu_522_ap_return_7);
    grp_shift_reg_en_fu_522->ap_return_8(grp_shift_reg_en_fu_522_ap_return_8);
    grp_shift_reg_en_fu_522->ap_return_9(grp_shift_reg_en_fu_522_ap_return_9);
    grp_shift_reg_en_fu_522->ap_return_10(grp_shift_reg_en_fu_522_ap_return_10);
    grp_shift_reg_en_fu_522->ap_return_11(grp_shift_reg_en_fu_522_ap_return_11);
    call_ret4_shift_reg_load_fu_554 = new shift_reg_load("call_ret4_shift_reg_load_fu_554");
    call_ret4_shift_reg_load_fu_554->ap_clk(ap_clk);
    call_ret4_shift_reg_load_fu_554->ap_rst(ap_rst);
    call_ret4_shift_reg_load_fu_554->ap_start(call_ret4_shift_reg_load_fu_554_ap_start);
    call_ret4_shift_reg_load_fu_554->ap_done(call_ret4_shift_reg_load_fu_554_ap_done);
    call_ret4_shift_reg_load_fu_554->ap_idle(call_ret4_shift_reg_load_fu_554_ap_idle);
    call_ret4_shift_reg_load_fu_554->ap_ready(call_ret4_shift_reg_load_fu_554_ap_ready);
    call_ret4_shift_reg_load_fu_554->din(din0);
    call_ret4_shift_reg_load_fu_554->load_data_0_read(load_data_0);
    call_ret4_shift_reg_load_fu_554->load_data_1_read(load_data_1);
    call_ret4_shift_reg_load_fu_554->load_data_2_read(load_data_2);
    call_ret4_shift_reg_load_fu_554->load_data_3_read(load_data_3);
    call_ret4_shift_reg_load_fu_554->load_data_4_read(load_data_4);
    call_ret4_shift_reg_load_fu_554->load_data_5_read(load_data_5);
    call_ret4_shift_reg_load_fu_554->load_data_6_read(load_data_6);
    call_ret4_shift_reg_load_fu_554->load_data_7_read(load_data_7);
    call_ret4_shift_reg_load_fu_554->load_data_8_read(load_data_8);
    call_ret4_shift_reg_load_fu_554->load_data_9_read(load_data_9);
    call_ret4_shift_reg_load_fu_554->load_data_10_read(load_data_10);
    call_ret4_shift_reg_load_fu_554->load_data_11_read(load_data_11);
    call_ret4_shift_reg_load_fu_554->load(load);
    call_ret4_shift_reg_load_fu_554->ap_return_0(call_ret4_shift_reg_load_fu_554_ap_return_0);
    call_ret4_shift_reg_load_fu_554->ap_return_1(call_ret4_shift_reg_load_fu_554_ap_return_1);
    call_ret4_shift_reg_load_fu_554->ap_return_2(call_ret4_shift_reg_load_fu_554_ap_return_2);
    call_ret4_shift_reg_load_fu_554->ap_return_3(call_ret4_shift_reg_load_fu_554_ap_return_3);
    call_ret4_shift_reg_load_fu_554->ap_return_4(call_ret4_shift_reg_load_fu_554_ap_return_4);
    call_ret4_shift_reg_load_fu_554->ap_return_5(call_ret4_shift_reg_load_fu_554_ap_return_5);
    call_ret4_shift_reg_load_fu_554->ap_return_6(call_ret4_shift_reg_load_fu_554_ap_return_6);
    call_ret4_shift_reg_load_fu_554->ap_return_7(call_ret4_shift_reg_load_fu_554_ap_return_7);
    call_ret4_shift_reg_load_fu_554->ap_return_8(call_ret4_shift_reg_load_fu_554_ap_return_8);
    call_ret4_shift_reg_load_fu_554->ap_return_9(call_ret4_shift_reg_load_fu_554_ap_return_9);
    call_ret4_shift_reg_load_fu_554->ap_return_10(call_ret4_shift_reg_load_fu_554_ap_return_10);
    call_ret4_shift_reg_load_fu_554->ap_return_11(call_ret4_shift_reg_load_fu_554_ap_return_11);
    call_ret5_shift_reg_sreset_fu_598 = new shift_reg_sreset("call_ret5_shift_reg_sreset_fu_598");
    call_ret5_shift_reg_sreset_fu_598->ap_clk(ap_clk);
    call_ret5_shift_reg_sreset_fu_598->ap_rst(ap_rst);
    call_ret5_shift_reg_sreset_fu_598->ap_start(call_ret5_shift_reg_sreset_fu_598_ap_start);
    call_ret5_shift_reg_sreset_fu_598->ap_done(call_ret5_shift_reg_sreset_fu_598_ap_done);
    call_ret5_shift_reg_sreset_fu_598->ap_idle(call_ret5_shift_reg_sreset_fu_598_ap_idle);
    call_ret5_shift_reg_sreset_fu_598->ap_ready(call_ret5_shift_reg_sreset_fu_598_ap_ready);
    call_ret5_shift_reg_sreset_fu_598->din(din0);
    call_ret5_shift_reg_sreset_fu_598->srst(srst);
    call_ret5_shift_reg_sreset_fu_598->ap_return_0(call_ret5_shift_reg_sreset_fu_598_ap_return_0);
    call_ret5_shift_reg_sreset_fu_598->ap_return_1(call_ret5_shift_reg_sreset_fu_598_ap_return_1);
    call_ret5_shift_reg_sreset_fu_598->ap_return_2(call_ret5_shift_reg_sreset_fu_598_ap_return_2);
    call_ret5_shift_reg_sreset_fu_598->ap_return_3(call_ret5_shift_reg_sreset_fu_598_ap_return_3);
    call_ret5_shift_reg_sreset_fu_598->ap_return_4(call_ret5_shift_reg_sreset_fu_598_ap_return_4);
    call_ret5_shift_reg_sreset_fu_598->ap_return_5(call_ret5_shift_reg_sreset_fu_598_ap_return_5);
    call_ret5_shift_reg_sreset_fu_598->ap_return_6(call_ret5_shift_reg_sreset_fu_598_ap_return_6);
    call_ret5_shift_reg_sreset_fu_598->ap_return_7(call_ret5_shift_reg_sreset_fu_598_ap_return_7);
    call_ret5_shift_reg_sreset_fu_598->ap_return_8(call_ret5_shift_reg_sreset_fu_598_ap_return_8);
    call_ret5_shift_reg_sreset_fu_598->ap_return_9(call_ret5_shift_reg_sreset_fu_598_ap_return_9);
    call_ret5_shift_reg_sreset_fu_598->ap_return_10(call_ret5_shift_reg_sreset_fu_598_ap_return_10);
    call_ret5_shift_reg_sreset_fu_598->ap_return_11(call_ret5_shift_reg_sreset_fu_598_ap_return_11);
    grp_shift_reg_ip_fu_626 = new shift_reg_ip("grp_shift_reg_ip_fu_626");
    grp_shift_reg_ip_fu_626->ap_clk(ap_clk);
    grp_shift_reg_ip_fu_626->ap_rst(ap_rst);
    grp_shift_reg_ip_fu_626->ap_start(grp_shift_reg_ip_fu_626_ap_start);
    grp_shift_reg_ip_fu_626->ap_done(grp_shift_reg_ip_fu_626_ap_done);
    grp_shift_reg_ip_fu_626->ap_idle(grp_shift_reg_ip_fu_626_ap_idle);
    grp_shift_reg_ip_fu_626->ap_ready(grp_shift_reg_ip_fu_626_ap_ready);
    grp_shift_reg_ip_fu_626->din(din0);
    grp_shift_reg_ip_fu_626->en(en);
    grp_shift_reg_ip_fu_626->ap_return_0(grp_shift_reg_ip_fu_626_ap_return_0);
    grp_shift_reg_ip_fu_626->ap_return_1(grp_shift_reg_ip_fu_626_ap_return_1);
    grp_shift_reg_ip_fu_626->ap_return_2(grp_shift_reg_ip_fu_626_ap_return_2);
    grp_shift_reg_ip_fu_626->ap_return_3(grp_shift_reg_ip_fu_626_ap_return_3);
    grp_shift_reg_ip_fu_626->ap_return_4(grp_shift_reg_ip_fu_626_ap_return_4);
    grp_shift_reg_ip_fu_626->ap_return_5(grp_shift_reg_ip_fu_626_ap_return_5);
    grp_shift_reg_ip_fu_626->ap_return_6(grp_shift_reg_ip_fu_626_ap_return_6);
    grp_shift_reg_ip_fu_626->ap_return_7(grp_shift_reg_ip_fu_626_ap_return_7);
    grp_shift_reg_ip_fu_626->ap_return_8(grp_shift_reg_ip_fu_626_ap_return_8);
    grp_shift_reg_ip_fu_626->ap_return_9(grp_shift_reg_ip_fu_626_ap_return_9);
    grp_shift_reg_ip_fu_626->ap_return_10(grp_shift_reg_ip_fu_626_ap_return_10);
    grp_shift_reg_ip_fu_626->ap_return_11(grp_shift_reg_ip_fu_626_ap_return_11);
    call_ret2_shift_reg_basic_fu_636 = new shift_reg_basic("call_ret2_shift_reg_basic_fu_636");
    call_ret2_shift_reg_basic_fu_636->ap_clk(ap_clk);
    call_ret2_shift_reg_basic_fu_636->ap_rst(ap_rst);
    call_ret2_shift_reg_basic_fu_636->ap_start(call_ret2_shift_reg_basic_fu_636_ap_start);
    call_ret2_shift_reg_basic_fu_636->ap_done(call_ret2_shift_reg_basic_fu_636_ap_done);
    call_ret2_shift_reg_basic_fu_636->ap_idle(call_ret2_shift_reg_basic_fu_636_ap_idle);
    call_ret2_shift_reg_basic_fu_636->ap_ready(call_ret2_shift_reg_basic_fu_636_ap_ready);
    call_ret2_shift_reg_basic_fu_636->din(din0);
    call_ret2_shift_reg_basic_fu_636->ap_return_0(call_ret2_shift_reg_basic_fu_636_ap_return_0);
    call_ret2_shift_reg_basic_fu_636->ap_return_1(call_ret2_shift_reg_basic_fu_636_ap_return_1);
    call_ret2_shift_reg_basic_fu_636->ap_return_2(call_ret2_shift_reg_basic_fu_636_ap_return_2);
    call_ret2_shift_reg_basic_fu_636->ap_return_3(call_ret2_shift_reg_basic_fu_636_ap_return_3);
    call_ret2_shift_reg_basic_fu_636->ap_return_4(call_ret2_shift_reg_basic_fu_636_ap_return_4);
    call_ret2_shift_reg_basic_fu_636->ap_return_5(call_ret2_shift_reg_basic_fu_636_ap_return_5);
    call_ret2_shift_reg_basic_fu_636->ap_return_6(call_ret2_shift_reg_basic_fu_636_ap_return_6);
    call_ret2_shift_reg_basic_fu_636->ap_return_7(call_ret2_shift_reg_basic_fu_636_ap_return_7);
    call_ret2_shift_reg_basic_fu_636->ap_return_8(call_ret2_shift_reg_basic_fu_636_ap_return_8);
    call_ret2_shift_reg_basic_fu_636->ap_return_9(call_ret2_shift_reg_basic_fu_636_ap_return_9);
    call_ret2_shift_reg_basic_fu_636->ap_return_10(call_ret2_shift_reg_basic_fu_636_ap_return_10);
    call_ret2_shift_reg_basic_fu_636->ap_return_11(call_ret2_shift_reg_basic_fu_636_ap_return_11);
    call_ret1_shift_reg_template_fu_663 = new shift_reg_template("call_ret1_shift_reg_template_fu_663");
    call_ret1_shift_reg_template_fu_663->ap_clk(ap_clk);
    call_ret1_shift_reg_template_fu_663->ap_rst(ap_rst);
    call_ret1_shift_reg_template_fu_663->ap_start(call_ret1_shift_reg_template_fu_663_ap_start);
    call_ret1_shift_reg_template_fu_663->ap_done(call_ret1_shift_reg_template_fu_663_ap_done);
    call_ret1_shift_reg_template_fu_663->ap_idle(call_ret1_shift_reg_template_fu_663_ap_idle);
    call_ret1_shift_reg_template_fu_663->ap_ready(call_ret1_shift_reg_template_fu_663_ap_ready);
    call_ret1_shift_reg_template_fu_663->din0(din0);
    call_ret1_shift_reg_template_fu_663->din1(din1);
    call_ret1_shift_reg_template_fu_663->ap_return_0(call_ret1_shift_reg_template_fu_663_ap_return_0);
    call_ret1_shift_reg_template_fu_663->ap_return_1(call_ret1_shift_reg_template_fu_663_ap_return_1);
    call_ret1_shift_reg_template_fu_663->ap_return_2(call_ret1_shift_reg_template_fu_663_ap_return_2);
    call_ret1_shift_reg_template_fu_663->ap_return_3(call_ret1_shift_reg_template_fu_663_ap_return_3);
    call_ret1_shift_reg_template_fu_663->ap_return_4(call_ret1_shift_reg_template_fu_663_ap_return_4);
    call_ret1_shift_reg_template_fu_663->ap_return_5(call_ret1_shift_reg_template_fu_663_ap_return_5);
    call_ret1_shift_reg_template_fu_663->ap_return_6(call_ret1_shift_reg_template_fu_663_ap_return_6);
    call_ret1_shift_reg_template_fu_663->ap_return_7(call_ret1_shift_reg_template_fu_663_ap_return_7);
    call_ret1_shift_reg_template_fu_663->ap_return_8(call_ret1_shift_reg_template_fu_663_ap_return_8);
    call_ret1_shift_reg_template_fu_663->ap_return_9(call_ret1_shift_reg_template_fu_663_ap_return_9);
    call_ret1_shift_reg_template_fu_663->ap_return_10(call_ret1_shift_reg_template_fu_663_ap_return_10);
    call_ret1_shift_reg_template_fu_663->ap_return_11(call_ret1_shift_reg_template_fu_663_ap_return_11);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2_on_subcall_done);
    sensitive << ( select_V );
    sensitive << ( grp_shift_reg_class_fu_470_ap_done );
    sensitive << ( grp_shift_reg_en_fu_522_ap_done );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_call_ret1_shift_reg_template_fu_663_ap_start);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_call_ret2_shift_reg_basic_fu_636_ap_start);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_call_ret4_shift_reg_load_fu_554_ap_start);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_call_ret5_shift_reg_sreset_fu_598_ap_start);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_0);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_0 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_0 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_0 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_0 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_0 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_0 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_0_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_1);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_1 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_1 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_1 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_1 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_1 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_1 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_10);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_10 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_10 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_10 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_10 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_10 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_10 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_10_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_11);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_11 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_11 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_11 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_11 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_11 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_11 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_11_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_1_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_2);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_2 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_2 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_2 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_2 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_2 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_2 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_2_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_3);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_3 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_3 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_3 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_3 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_3 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_3 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_3_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_4);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_4 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_4 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_4 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_4 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_4 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_4 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_4_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_5);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_5 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_5 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_5 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_5 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_5 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_5 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_5_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_6);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_6 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_6 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_6 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_6 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_6 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_6 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_6_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_7);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_7 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_7 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_7 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_7 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_7 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_7 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_7_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_8);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_8 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_8 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_8 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_8 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_8 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_8 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_8_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_9);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( grp_shift_reg_class_fu_470_ap_return_9 );
    sensitive << ( grp_shift_reg_en_fu_522_ap_return_9 );
    sensitive << ( call_ret4_shift_reg_load_fu_554_ap_return_9 );
    sensitive << ( call_ret5_shift_reg_sreset_fu_598_ap_return_9 );
    sensitive << ( grp_shift_reg_ip_fu_626_ap_return_9 );
    sensitive << ( call_ret2_shift_reg_basic_fu_636_ap_return_9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout0_9_ap_vld);
    sensitive << ( select_V );
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout1_0);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_8 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout1_0_ap_vld);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout1_1);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout1_1_ap_vld);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout1_2);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_10 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout1_2_ap_vld);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout1_3);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( call_ret1_shift_reg_template_fu_663_ap_return_11 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_dout1_3_ap_vld);
    sensitive << ( select_V_read_read_fu_250_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_METHOD(thread_grp_shift_reg_class_fu_470_ap_start);
    sensitive << ( grp_shift_reg_class_fu_470_ap_start_reg );

    SC_METHOD(thread_grp_shift_reg_en_fu_522_ap_start);
    sensitive << ( grp_shift_reg_en_fu_522_ap_start_reg );

    SC_METHOD(thread_grp_shift_reg_ip_fu_626_ap_start);
    sensitive << ( grp_shift_reg_ip_fu_626_ap_start_reg );

    SC_METHOD(thread_select_V_read_read_fu_250_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( select_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "01";
    grp_shift_reg_class_fu_470_ap_start_reg = SC_LOGIC_0;
    grp_shift_reg_en_fu_522_ap_start_reg = SC_LOGIC_0;
    grp_shift_reg_ip_fu_626_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "shift_reg_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, din0, "(port)din0");
    sc_trace(mVcdFile, din1, "(port)din1");
    sc_trace(mVcdFile, load_data_0, "(port)load_data_0");
    sc_trace(mVcdFile, load_data_1, "(port)load_data_1");
    sc_trace(mVcdFile, load_data_2, "(port)load_data_2");
    sc_trace(mVcdFile, load_data_3, "(port)load_data_3");
    sc_trace(mVcdFile, load_data_4, "(port)load_data_4");
    sc_trace(mVcdFile, load_data_5, "(port)load_data_5");
    sc_trace(mVcdFile, load_data_6, "(port)load_data_6");
    sc_trace(mVcdFile, load_data_7, "(port)load_data_7");
    sc_trace(mVcdFile, load_data_8, "(port)load_data_8");
    sc_trace(mVcdFile, load_data_9, "(port)load_data_9");
    sc_trace(mVcdFile, load_data_10, "(port)load_data_10");
    sc_trace(mVcdFile, load_data_11, "(port)load_data_11");
    sc_trace(mVcdFile, dout0_0, "(port)dout0_0");
    sc_trace(mVcdFile, dout0_0_ap_vld, "(port)dout0_0_ap_vld");
    sc_trace(mVcdFile, dout0_1, "(port)dout0_1");
    sc_trace(mVcdFile, dout0_1_ap_vld, "(port)dout0_1_ap_vld");
    sc_trace(mVcdFile, dout0_2, "(port)dout0_2");
    sc_trace(mVcdFile, dout0_2_ap_vld, "(port)dout0_2_ap_vld");
    sc_trace(mVcdFile, dout0_3, "(port)dout0_3");
    sc_trace(mVcdFile, dout0_3_ap_vld, "(port)dout0_3_ap_vld");
    sc_trace(mVcdFile, dout0_4, "(port)dout0_4");
    sc_trace(mVcdFile, dout0_4_ap_vld, "(port)dout0_4_ap_vld");
    sc_trace(mVcdFile, dout0_5, "(port)dout0_5");
    sc_trace(mVcdFile, dout0_5_ap_vld, "(port)dout0_5_ap_vld");
    sc_trace(mVcdFile, dout0_6, "(port)dout0_6");
    sc_trace(mVcdFile, dout0_6_ap_vld, "(port)dout0_6_ap_vld");
    sc_trace(mVcdFile, dout0_7, "(port)dout0_7");
    sc_trace(mVcdFile, dout0_7_ap_vld, "(port)dout0_7_ap_vld");
    sc_trace(mVcdFile, dout0_8, "(port)dout0_8");
    sc_trace(mVcdFile, dout0_8_ap_vld, "(port)dout0_8_ap_vld");
    sc_trace(mVcdFile, dout0_9, "(port)dout0_9");
    sc_trace(mVcdFile, dout0_9_ap_vld, "(port)dout0_9_ap_vld");
    sc_trace(mVcdFile, dout0_10, "(port)dout0_10");
    sc_trace(mVcdFile, dout0_10_ap_vld, "(port)dout0_10_ap_vld");
    sc_trace(mVcdFile, dout0_11, "(port)dout0_11");
    sc_trace(mVcdFile, dout0_11_ap_vld, "(port)dout0_11_ap_vld");
    sc_trace(mVcdFile, dout1_0, "(port)dout1_0");
    sc_trace(mVcdFile, dout1_0_ap_vld, "(port)dout1_0_ap_vld");
    sc_trace(mVcdFile, dout1_1, "(port)dout1_1");
    sc_trace(mVcdFile, dout1_1_ap_vld, "(port)dout1_1_ap_vld");
    sc_trace(mVcdFile, dout1_2, "(port)dout1_2");
    sc_trace(mVcdFile, dout1_2_ap_vld, "(port)dout1_2_ap_vld");
    sc_trace(mVcdFile, dout1_3, "(port)dout1_3");
    sc_trace(mVcdFile, dout1_3_ap_vld, "(port)dout1_3_ap_vld");
    sc_trace(mVcdFile, srst, "(port)srst");
    sc_trace(mVcdFile, load, "(port)load");
    sc_trace(mVcdFile, en, "(port)en");
    sc_trace(mVcdFile, select_V, "(port)select_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, select_V_read_read_fu_250_p2, "select_V_read_read_fu_250_p2");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_start, "grp_shift_reg_class_fu_470_ap_start");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_done, "grp_shift_reg_class_fu_470_ap_done");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_idle, "grp_shift_reg_class_fu_470_ap_idle");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_ready, "grp_shift_reg_class_fu_470_ap_ready");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_0, "grp_shift_reg_class_fu_470_ap_return_0");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_1, "grp_shift_reg_class_fu_470_ap_return_1");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_2, "grp_shift_reg_class_fu_470_ap_return_2");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_3, "grp_shift_reg_class_fu_470_ap_return_3");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_4, "grp_shift_reg_class_fu_470_ap_return_4");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_5, "grp_shift_reg_class_fu_470_ap_return_5");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_6, "grp_shift_reg_class_fu_470_ap_return_6");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_7, "grp_shift_reg_class_fu_470_ap_return_7");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_8, "grp_shift_reg_class_fu_470_ap_return_8");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_9, "grp_shift_reg_class_fu_470_ap_return_9");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_10, "grp_shift_reg_class_fu_470_ap_return_10");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_return_11, "grp_shift_reg_class_fu_470_ap_return_11");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_start, "grp_shift_reg_en_fu_522_ap_start");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_done, "grp_shift_reg_en_fu_522_ap_done");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_idle, "grp_shift_reg_en_fu_522_ap_idle");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_ready, "grp_shift_reg_en_fu_522_ap_ready");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_0, "grp_shift_reg_en_fu_522_ap_return_0");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_1, "grp_shift_reg_en_fu_522_ap_return_1");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_2, "grp_shift_reg_en_fu_522_ap_return_2");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_3, "grp_shift_reg_en_fu_522_ap_return_3");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_4, "grp_shift_reg_en_fu_522_ap_return_4");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_5, "grp_shift_reg_en_fu_522_ap_return_5");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_6, "grp_shift_reg_en_fu_522_ap_return_6");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_7, "grp_shift_reg_en_fu_522_ap_return_7");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_8, "grp_shift_reg_en_fu_522_ap_return_8");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_9, "grp_shift_reg_en_fu_522_ap_return_9");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_10, "grp_shift_reg_en_fu_522_ap_return_10");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_return_11, "grp_shift_reg_en_fu_522_ap_return_11");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_start, "call_ret4_shift_reg_load_fu_554_ap_start");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_done, "call_ret4_shift_reg_load_fu_554_ap_done");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_idle, "call_ret4_shift_reg_load_fu_554_ap_idle");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_ready, "call_ret4_shift_reg_load_fu_554_ap_ready");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_0, "call_ret4_shift_reg_load_fu_554_ap_return_0");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_1, "call_ret4_shift_reg_load_fu_554_ap_return_1");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_2, "call_ret4_shift_reg_load_fu_554_ap_return_2");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_3, "call_ret4_shift_reg_load_fu_554_ap_return_3");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_4, "call_ret4_shift_reg_load_fu_554_ap_return_4");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_5, "call_ret4_shift_reg_load_fu_554_ap_return_5");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_6, "call_ret4_shift_reg_load_fu_554_ap_return_6");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_7, "call_ret4_shift_reg_load_fu_554_ap_return_7");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_8, "call_ret4_shift_reg_load_fu_554_ap_return_8");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_9, "call_ret4_shift_reg_load_fu_554_ap_return_9");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_10, "call_ret4_shift_reg_load_fu_554_ap_return_10");
    sc_trace(mVcdFile, call_ret4_shift_reg_load_fu_554_ap_return_11, "call_ret4_shift_reg_load_fu_554_ap_return_11");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_start, "call_ret5_shift_reg_sreset_fu_598_ap_start");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_done, "call_ret5_shift_reg_sreset_fu_598_ap_done");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_idle, "call_ret5_shift_reg_sreset_fu_598_ap_idle");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_ready, "call_ret5_shift_reg_sreset_fu_598_ap_ready");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_0, "call_ret5_shift_reg_sreset_fu_598_ap_return_0");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_1, "call_ret5_shift_reg_sreset_fu_598_ap_return_1");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_2, "call_ret5_shift_reg_sreset_fu_598_ap_return_2");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_3, "call_ret5_shift_reg_sreset_fu_598_ap_return_3");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_4, "call_ret5_shift_reg_sreset_fu_598_ap_return_4");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_5, "call_ret5_shift_reg_sreset_fu_598_ap_return_5");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_6, "call_ret5_shift_reg_sreset_fu_598_ap_return_6");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_7, "call_ret5_shift_reg_sreset_fu_598_ap_return_7");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_8, "call_ret5_shift_reg_sreset_fu_598_ap_return_8");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_9, "call_ret5_shift_reg_sreset_fu_598_ap_return_9");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_10, "call_ret5_shift_reg_sreset_fu_598_ap_return_10");
    sc_trace(mVcdFile, call_ret5_shift_reg_sreset_fu_598_ap_return_11, "call_ret5_shift_reg_sreset_fu_598_ap_return_11");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_start, "grp_shift_reg_ip_fu_626_ap_start");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_done, "grp_shift_reg_ip_fu_626_ap_done");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_idle, "grp_shift_reg_ip_fu_626_ap_idle");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_ready, "grp_shift_reg_ip_fu_626_ap_ready");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_0, "grp_shift_reg_ip_fu_626_ap_return_0");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_1, "grp_shift_reg_ip_fu_626_ap_return_1");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_2, "grp_shift_reg_ip_fu_626_ap_return_2");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_3, "grp_shift_reg_ip_fu_626_ap_return_3");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_4, "grp_shift_reg_ip_fu_626_ap_return_4");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_5, "grp_shift_reg_ip_fu_626_ap_return_5");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_6, "grp_shift_reg_ip_fu_626_ap_return_6");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_7, "grp_shift_reg_ip_fu_626_ap_return_7");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_8, "grp_shift_reg_ip_fu_626_ap_return_8");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_9, "grp_shift_reg_ip_fu_626_ap_return_9");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_10, "grp_shift_reg_ip_fu_626_ap_return_10");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_return_11, "grp_shift_reg_ip_fu_626_ap_return_11");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_start, "call_ret2_shift_reg_basic_fu_636_ap_start");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_done, "call_ret2_shift_reg_basic_fu_636_ap_done");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_idle, "call_ret2_shift_reg_basic_fu_636_ap_idle");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_ready, "call_ret2_shift_reg_basic_fu_636_ap_ready");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_0, "call_ret2_shift_reg_basic_fu_636_ap_return_0");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_1, "call_ret2_shift_reg_basic_fu_636_ap_return_1");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_2, "call_ret2_shift_reg_basic_fu_636_ap_return_2");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_3, "call_ret2_shift_reg_basic_fu_636_ap_return_3");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_4, "call_ret2_shift_reg_basic_fu_636_ap_return_4");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_5, "call_ret2_shift_reg_basic_fu_636_ap_return_5");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_6, "call_ret2_shift_reg_basic_fu_636_ap_return_6");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_7, "call_ret2_shift_reg_basic_fu_636_ap_return_7");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_8, "call_ret2_shift_reg_basic_fu_636_ap_return_8");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_9, "call_ret2_shift_reg_basic_fu_636_ap_return_9");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_10, "call_ret2_shift_reg_basic_fu_636_ap_return_10");
    sc_trace(mVcdFile, call_ret2_shift_reg_basic_fu_636_ap_return_11, "call_ret2_shift_reg_basic_fu_636_ap_return_11");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_start, "call_ret1_shift_reg_template_fu_663_ap_start");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_done, "call_ret1_shift_reg_template_fu_663_ap_done");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_idle, "call_ret1_shift_reg_template_fu_663_ap_idle");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_ready, "call_ret1_shift_reg_template_fu_663_ap_ready");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_0, "call_ret1_shift_reg_template_fu_663_ap_return_0");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_1, "call_ret1_shift_reg_template_fu_663_ap_return_1");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_2, "call_ret1_shift_reg_template_fu_663_ap_return_2");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_3, "call_ret1_shift_reg_template_fu_663_ap_return_3");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_4, "call_ret1_shift_reg_template_fu_663_ap_return_4");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_5, "call_ret1_shift_reg_template_fu_663_ap_return_5");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_6, "call_ret1_shift_reg_template_fu_663_ap_return_6");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_7, "call_ret1_shift_reg_template_fu_663_ap_return_7");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_8, "call_ret1_shift_reg_template_fu_663_ap_return_8");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_9, "call_ret1_shift_reg_template_fu_663_ap_return_9");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_10, "call_ret1_shift_reg_template_fu_663_ap_return_10");
    sc_trace(mVcdFile, call_ret1_shift_reg_template_fu_663_ap_return_11, "call_ret1_shift_reg_template_fu_663_ap_return_11");
    sc_trace(mVcdFile, grp_shift_reg_class_fu_470_ap_start_reg, "grp_shift_reg_class_fu_470_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_block_state2_on_subcall_done, "ap_block_state2_on_subcall_done");
    sc_trace(mVcdFile, grp_shift_reg_en_fu_522_ap_start_reg, "grp_shift_reg_en_fu_522_ap_start_reg");
    sc_trace(mVcdFile, grp_shift_reg_ip_fu_626_ap_start_reg, "grp_shift_reg_ip_fu_626_ap_start_reg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("shift_reg.hdltvin.dat");
    mHdltvoutHandle.open("shift_reg.hdltvout.dat");
}

shift_reg::~shift_reg() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_shift_reg_class_fu_470;
    delete grp_shift_reg_en_fu_522;
    delete call_ret4_shift_reg_load_fu_554;
    delete call_ret5_shift_reg_sreset_fu_598;
    delete grp_shift_reg_ip_fu_626;
    delete call_ret2_shift_reg_basic_fu_636;
    delete call_ret1_shift_reg_template_fu_663;
}

void shift_reg::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_shift_reg_class_fu_470_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4))) {
            grp_shift_reg_class_fu_470_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_shift_reg_class_fu_470_ap_ready.read())) {
            grp_shift_reg_class_fu_470_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_shift_reg_en_fu_522_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1))) {
            grp_shift_reg_en_fu_522_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_shift_reg_en_fu_522_ap_ready.read())) {
            grp_shift_reg_en_fu_522_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_shift_reg_ip_fu_626_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
             esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5))) {
            grp_shift_reg_ip_fu_626_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_shift_reg_ip_fu_626_ap_ready.read())) {
            grp_shift_reg_ip_fu_626_ap_start_reg = ap_const_logic_0;
        }
    }
}

void shift_reg::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void shift_reg::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void shift_reg::thread_ap_block_state2_on_subcall_done() {
    ap_block_state2_on_subcall_done = ((esl_seteq<1,1,1>(ap_const_logic_0, grp_shift_reg_ip_fu_626_ap_done.read()) && 
  esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) || (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_shift_reg_class_fu_470_ap_done.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, grp_shift_reg_en_fu_522_ap_done.read()) && 
  esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)));
}

void shift_reg::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void shift_reg::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void shift_reg::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void shift_reg::thread_call_ret1_shift_reg_template_fu_663_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
         (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6)))) {
        call_ret1_shift_reg_template_fu_663_ap_start = ap_const_logic_1;
    } else {
        call_ret1_shift_reg_template_fu_663_ap_start = ap_const_logic_0;
    }
}

void shift_reg::thread_call_ret2_shift_reg_basic_fu_636_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
         esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0))) {
        call_ret2_shift_reg_basic_fu_636_ap_start = ap_const_logic_1;
    } else {
        call_ret2_shift_reg_basic_fu_636_ap_start = ap_const_logic_0;
    }
}

void shift_reg::thread_call_ret4_shift_reg_load_fu_554_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
         esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2))) {
        call_ret4_shift_reg_load_fu_554_ap_start = ap_const_logic_1;
    } else {
        call_ret4_shift_reg_load_fu_554_ap_start = ap_const_logic_0;
    }
}

void shift_reg::thread_call_ret5_shift_reg_sreset_fu_598_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
         esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3))) {
        call_ret5_shift_reg_sreset_fu_598_ap_start = ap_const_logic_1;
    } else {
        call_ret5_shift_reg_sreset_fu_598_ap_start = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if ((esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
             esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) {
            dout0_0 = call_ret1_shift_reg_template_fu_663_ap_return_0.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_0 = call_ret2_shift_reg_basic_fu_636_ap_return_0.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_0 = grp_shift_reg_en_fu_522_ap_return_0.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_0 = call_ret4_shift_reg_load_fu_554_ap_return_0.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_0 = call_ret5_shift_reg_sreset_fu_598_ap_return_0.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_0 = grp_shift_reg_class_fu_470_ap_return_0.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_0 = grp_shift_reg_ip_fu_626_ap_return_0.read();
        } else {
            dout0_0 = "XXXXXXXX";
        }
    } else {
        dout0_0 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_0_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
           esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_0_ap_vld = ap_const_logic_1;
    } else {
        dout0_0_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if ((esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
             esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) {
            dout0_1 = call_ret1_shift_reg_template_fu_663_ap_return_1.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_1 = call_ret2_shift_reg_basic_fu_636_ap_return_1.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_1 = grp_shift_reg_en_fu_522_ap_return_1.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_1 = call_ret4_shift_reg_load_fu_554_ap_return_1.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_1 = call_ret5_shift_reg_sreset_fu_598_ap_return_1.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_1 = grp_shift_reg_class_fu_470_ap_return_1.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_1 = grp_shift_reg_ip_fu_626_ap_return_1.read();
        } else {
            dout0_1 = "XXXXXXXX";
        }
    } else {
        dout0_1 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_10() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_10 = call_ret2_shift_reg_basic_fu_636_ap_return_10.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_10 = grp_shift_reg_en_fu_522_ap_return_10.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_10 = call_ret4_shift_reg_load_fu_554_ap_return_10.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_10 = call_ret5_shift_reg_sreset_fu_598_ap_return_10.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_10 = grp_shift_reg_class_fu_470_ap_return_10.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_10 = grp_shift_reg_ip_fu_626_ap_return_10.read();
        } else {
            dout0_10 = "XXXXXXXX";
        }
    } else {
        dout0_10 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_10_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_10_ap_vld = ap_const_logic_1;
    } else {
        dout0_10_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_11() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_11 = call_ret2_shift_reg_basic_fu_636_ap_return_11.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_11 = grp_shift_reg_en_fu_522_ap_return_11.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_11 = call_ret4_shift_reg_load_fu_554_ap_return_11.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_11 = call_ret5_shift_reg_sreset_fu_598_ap_return_11.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_11 = grp_shift_reg_class_fu_470_ap_return_11.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_11 = grp_shift_reg_ip_fu_626_ap_return_11.read();
        } else {
            dout0_11 = "XXXXXXXX";
        }
    } else {
        dout0_11 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_11_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_11_ap_vld = ap_const_logic_1;
    } else {
        dout0_11_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_1_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
           esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_1_ap_vld = ap_const_logic_1;
    } else {
        dout0_1_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if ((esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
             esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) {
            dout0_2 = call_ret1_shift_reg_template_fu_663_ap_return_2.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_2 = call_ret2_shift_reg_basic_fu_636_ap_return_2.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_2 = grp_shift_reg_en_fu_522_ap_return_2.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_2 = call_ret4_shift_reg_load_fu_554_ap_return_2.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_2 = call_ret5_shift_reg_sreset_fu_598_ap_return_2.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_2 = grp_shift_reg_class_fu_470_ap_return_2.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_2 = grp_shift_reg_ip_fu_626_ap_return_2.read();
        } else {
            dout0_2 = "XXXXXXXX";
        }
    } else {
        dout0_2 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_2_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
           esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_2_ap_vld = ap_const_logic_1;
    } else {
        dout0_2_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if ((esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
             esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) {
            dout0_3 = call_ret1_shift_reg_template_fu_663_ap_return_3.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_3 = call_ret2_shift_reg_basic_fu_636_ap_return_3.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_3 = grp_shift_reg_en_fu_522_ap_return_3.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_3 = call_ret4_shift_reg_load_fu_554_ap_return_3.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_3 = call_ret5_shift_reg_sreset_fu_598_ap_return_3.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_3 = grp_shift_reg_class_fu_470_ap_return_3.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_3 = grp_shift_reg_ip_fu_626_ap_return_3.read();
        } else {
            dout0_3 = "XXXXXXXX";
        }
    } else {
        dout0_3 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_3_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
           esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_3_ap_vld = ap_const_logic_1;
    } else {
        dout0_3_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if ((esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
             esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) {
            dout0_4 = call_ret1_shift_reg_template_fu_663_ap_return_4.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_4 = call_ret2_shift_reg_basic_fu_636_ap_return_4.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_4 = grp_shift_reg_en_fu_522_ap_return_4.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_4 = call_ret4_shift_reg_load_fu_554_ap_return_4.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_4 = call_ret5_shift_reg_sreset_fu_598_ap_return_4.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_4 = grp_shift_reg_class_fu_470_ap_return_4.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_4 = grp_shift_reg_ip_fu_626_ap_return_4.read();
        } else {
            dout0_4 = "XXXXXXXX";
        }
    } else {
        dout0_4 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_4_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
           esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_4_ap_vld = ap_const_logic_1;
    } else {
        dout0_4_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_5() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if ((esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
             esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) {
            dout0_5 = call_ret1_shift_reg_template_fu_663_ap_return_5.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_5 = call_ret2_shift_reg_basic_fu_636_ap_return_5.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_5 = grp_shift_reg_en_fu_522_ap_return_5.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_5 = call_ret4_shift_reg_load_fu_554_ap_return_5.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_5 = call_ret5_shift_reg_sreset_fu_598_ap_return_5.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_5 = grp_shift_reg_class_fu_470_ap_return_5.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_5 = grp_shift_reg_ip_fu_626_ap_return_5.read();
        } else {
            dout0_5 = "XXXXXXXX";
        }
    } else {
        dout0_5 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_5_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
           esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_5_ap_vld = ap_const_logic_1;
    } else {
        dout0_5_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if ((esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
             esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) {
            dout0_6 = call_ret1_shift_reg_template_fu_663_ap_return_6.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_6 = call_ret2_shift_reg_basic_fu_636_ap_return_6.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_6 = grp_shift_reg_en_fu_522_ap_return_6.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_6 = call_ret4_shift_reg_load_fu_554_ap_return_6.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_6 = call_ret5_shift_reg_sreset_fu_598_ap_return_6.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_6 = grp_shift_reg_class_fu_470_ap_return_6.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_6 = grp_shift_reg_ip_fu_626_ap_return_6.read();
        } else {
            dout0_6 = "XXXXXXXX";
        }
    } else {
        dout0_6 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_6_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
           esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_6_ap_vld = ap_const_logic_1;
    } else {
        dout0_6_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_7() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if ((esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
             esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) {
            dout0_7 = call_ret1_shift_reg_template_fu_663_ap_return_7.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_7 = call_ret2_shift_reg_basic_fu_636_ap_return_7.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_7 = grp_shift_reg_en_fu_522_ap_return_7.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_7 = call_ret4_shift_reg_load_fu_554_ap_return_7.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_7 = call_ret5_shift_reg_sreset_fu_598_ap_return_7.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_7 = grp_shift_reg_class_fu_470_ap_return_7.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_7 = grp_shift_reg_ip_fu_626_ap_return_7.read();
        } else {
            dout0_7 = "XXXXXXXX";
        }
    } else {
        dout0_7 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_7_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
           esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_7_ap_vld = ap_const_logic_1;
    } else {
        dout0_7_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_8 = call_ret2_shift_reg_basic_fu_636_ap_return_8.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_8 = grp_shift_reg_en_fu_522_ap_return_8.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_8 = call_ret4_shift_reg_load_fu_554_ap_return_8.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_8 = call_ret5_shift_reg_sreset_fu_598_ap_return_8.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_8 = grp_shift_reg_class_fu_470_ap_return_8.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_8 = grp_shift_reg_ip_fu_626_ap_return_8.read();
        } else {
            dout0_8 = "XXXXXXXX";
        }
    } else {
        dout0_8 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_8_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_8_ap_vld = ap_const_logic_1;
    } else {
        dout0_8_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout0_9() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) {
            dout0_9 = call_ret2_shift_reg_basic_fu_636_ap_return_9.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1)) {
            dout0_9 = grp_shift_reg_en_fu_522_ap_return_9.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) {
            dout0_9 = call_ret4_shift_reg_load_fu_554_ap_return_9.read();
        } else if (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) {
            dout0_9 = call_ret5_shift_reg_sreset_fu_598_ap_return_9.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4)) {
            dout0_9 = grp_shift_reg_class_fu_470_ap_return_9.read();
        } else if (esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5)) {
            dout0_9 = grp_shift_reg_ip_fu_626_ap_return_9.read();
        } else {
            dout0_9 = "XXXXXXXX";
        }
    } else {
        dout0_9 = "XXXXXXXX";
    }
}

void shift_reg::thread_dout0_9_ap_vld() {
    if (((esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_4) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_1) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,3,3>(select_V.read(), ap_const_lv3_5) && 
          esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0)))) {
        dout0_9_ap_vld = ap_const_logic_1;
    } else {
        dout0_9_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout1_0() {
    dout1_0 = call_ret1_shift_reg_template_fu_663_ap_return_8.read();
}

void shift_reg::thread_dout1_0_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
         (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6)))) {
        dout1_0_ap_vld = ap_const_logic_1;
    } else {
        dout1_0_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout1_1() {
    dout1_1 = call_ret1_shift_reg_template_fu_663_ap_return_9.read();
}

void shift_reg::thread_dout1_1_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
         (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6)))) {
        dout1_1_ap_vld = ap_const_logic_1;
    } else {
        dout1_1_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout1_2() {
    dout1_2 = call_ret1_shift_reg_template_fu_663_ap_return_10.read();
}

void shift_reg::thread_dout1_2_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
         (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6)))) {
        dout1_2_ap_vld = ap_const_logic_1;
    } else {
        dout1_2_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_dout1_3() {
    dout1_3 = call_ret1_shift_reg_template_fu_663_ap_return_11.read();
}

void shift_reg::thread_dout1_3_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0) && 
         (esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_7) || 
          esl_seteq<1,3,3>(select_V_read_read_fu_250_p2.read(), ap_const_lv3_6)))) {
        dout1_3_ap_vld = ap_const_logic_1;
    } else {
        dout1_3_ap_vld = ap_const_logic_0;
    }
}

void shift_reg::thread_grp_shift_reg_class_fu_470_ap_start() {
    grp_shift_reg_class_fu_470_ap_start = grp_shift_reg_class_fu_470_ap_start_reg.read();
}

void shift_reg::thread_grp_shift_reg_en_fu_522_ap_start() {
    grp_shift_reg_en_fu_522_ap_start = grp_shift_reg_en_fu_522_ap_start_reg.read();
}

void shift_reg::thread_grp_shift_reg_ip_fu_626_ap_start() {
    grp_shift_reg_ip_fu_626_ap_start = grp_shift_reg_ip_fu_626_ap_start_reg.read();
}

void shift_reg::thread_select_V_read_read_fu_250_p2() {
    select_V_read_read_fu_250_p2 = select_V.read();
}

void shift_reg::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void shift_reg::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"din0\" :  \"" << din0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"din1\" :  \"" << din1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_0\" :  \"" << load_data_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_1\" :  \"" << load_data_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_2\" :  \"" << load_data_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_3\" :  \"" << load_data_3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_4\" :  \"" << load_data_4.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_5\" :  \"" << load_data_5.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_6\" :  \"" << load_data_6.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_7\" :  \"" << load_data_7.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_8\" :  \"" << load_data_8.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_9\" :  \"" << load_data_9.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_10\" :  \"" << load_data_10.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load_data_11\" :  \"" << load_data_11.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_0\" :  \"" << dout0_0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_0_ap_vld\" :  \"" << dout0_0_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_1\" :  \"" << dout0_1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_1_ap_vld\" :  \"" << dout0_1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_2\" :  \"" << dout0_2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_2_ap_vld\" :  \"" << dout0_2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_3\" :  \"" << dout0_3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_3_ap_vld\" :  \"" << dout0_3_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_4\" :  \"" << dout0_4.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_4_ap_vld\" :  \"" << dout0_4_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_5\" :  \"" << dout0_5.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_5_ap_vld\" :  \"" << dout0_5_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_6\" :  \"" << dout0_6.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_6_ap_vld\" :  \"" << dout0_6_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_7\" :  \"" << dout0_7.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_7_ap_vld\" :  \"" << dout0_7_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_8\" :  \"" << dout0_8.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_8_ap_vld\" :  \"" << dout0_8_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_9\" :  \"" << dout0_9.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_9_ap_vld\" :  \"" << dout0_9_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_10\" :  \"" << dout0_10.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_10_ap_vld\" :  \"" << dout0_10_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_11\" :  \"" << dout0_11.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout0_11_ap_vld\" :  \"" << dout0_11_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout1_0\" :  \"" << dout1_0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout1_0_ap_vld\" :  \"" << dout1_0_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout1_1\" :  \"" << dout1_1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout1_1_ap_vld\" :  \"" << dout1_1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout1_2\" :  \"" << dout1_2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout1_2_ap_vld\" :  \"" << dout1_2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout1_3\" :  \"" << dout1_3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"dout1_3_ap_vld\" :  \"" << dout1_3_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"srst\" :  \"" << srst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"load\" :  \"" << load.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"en\" :  \"" << en.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"select_V\" :  \"" << select_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

