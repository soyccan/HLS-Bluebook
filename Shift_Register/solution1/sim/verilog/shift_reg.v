// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="shift_reg,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.017000,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1634,HLS_SYN_LUT=1862,HLS_VERSION=2019_2}" *)

module shift_reg (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        din0,
        din1,
        load_data_0,
        load_data_1,
        load_data_2,
        load_data_3,
        load_data_4,
        load_data_5,
        load_data_6,
        load_data_7,
        load_data_8,
        load_data_9,
        load_data_10,
        load_data_11,
        dout0_0,
        dout0_0_ap_vld,
        dout0_1,
        dout0_1_ap_vld,
        dout0_2,
        dout0_2_ap_vld,
        dout0_3,
        dout0_3_ap_vld,
        dout0_4,
        dout0_4_ap_vld,
        dout0_5,
        dout0_5_ap_vld,
        dout0_6,
        dout0_6_ap_vld,
        dout0_7,
        dout0_7_ap_vld,
        dout0_8,
        dout0_8_ap_vld,
        dout0_9,
        dout0_9_ap_vld,
        dout0_10,
        dout0_10_ap_vld,
        dout0_11,
        dout0_11_ap_vld,
        dout1_0,
        dout1_0_ap_vld,
        dout1_1,
        dout1_1_ap_vld,
        dout1_2,
        dout1_2_ap_vld,
        dout1_3,
        dout1_3_ap_vld,
        srst,
        load,
        en,
        select_V
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] din0;
input  [31:0] din1;
input  [7:0] load_data_0;
input  [7:0] load_data_1;
input  [7:0] load_data_2;
input  [7:0] load_data_3;
input  [7:0] load_data_4;
input  [7:0] load_data_5;
input  [7:0] load_data_6;
input  [7:0] load_data_7;
input  [7:0] load_data_8;
input  [7:0] load_data_9;
input  [7:0] load_data_10;
input  [7:0] load_data_11;
output  [7:0] dout0_0;
output   dout0_0_ap_vld;
output  [7:0] dout0_1;
output   dout0_1_ap_vld;
output  [7:0] dout0_2;
output   dout0_2_ap_vld;
output  [7:0] dout0_3;
output   dout0_3_ap_vld;
output  [7:0] dout0_4;
output   dout0_4_ap_vld;
output  [7:0] dout0_5;
output   dout0_5_ap_vld;
output  [7:0] dout0_6;
output   dout0_6_ap_vld;
output  [7:0] dout0_7;
output   dout0_7_ap_vld;
output  [7:0] dout0_8;
output   dout0_8_ap_vld;
output  [7:0] dout0_9;
output   dout0_9_ap_vld;
output  [7:0] dout0_10;
output   dout0_10_ap_vld;
output  [7:0] dout0_11;
output   dout0_11_ap_vld;
output  [31:0] dout1_0;
output   dout1_0_ap_vld;
output  [31:0] dout1_1;
output   dout1_1_ap_vld;
output  [31:0] dout1_2;
output   dout1_2_ap_vld;
output  [31:0] dout1_3;
output   dout1_3_ap_vld;
input   srst;
input   load;
input   en;
input  [2:0] select_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] dout0_0;
reg dout0_0_ap_vld;
reg[7:0] dout0_1;
reg dout0_1_ap_vld;
reg[7:0] dout0_2;
reg dout0_2_ap_vld;
reg[7:0] dout0_3;
reg dout0_3_ap_vld;
reg[7:0] dout0_4;
reg dout0_4_ap_vld;
reg[7:0] dout0_5;
reg dout0_5_ap_vld;
reg[7:0] dout0_6;
reg dout0_6_ap_vld;
reg[7:0] dout0_7;
reg dout0_7_ap_vld;
reg[7:0] dout0_8;
reg dout0_8_ap_vld;
reg[7:0] dout0_9;
reg dout0_9_ap_vld;
reg[7:0] dout0_10;
reg dout0_10_ap_vld;
reg[7:0] dout0_11;
reg dout0_11_ap_vld;
reg dout1_0_ap_vld;
reg dout1_1_ap_vld;
reg dout1_2_ap_vld;
reg dout1_3_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] select_V_read_read_fu_250_p2;
wire    grp_shift_reg_class_fu_470_ap_start;
wire    grp_shift_reg_class_fu_470_ap_done;
wire    grp_shift_reg_class_fu_470_ap_idle;
wire    grp_shift_reg_class_fu_470_ap_ready;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_0;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_1;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_2;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_3;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_4;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_5;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_6;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_7;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_8;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_9;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_10;
wire   [7:0] grp_shift_reg_class_fu_470_ap_return_11;
wire    grp_shift_reg_en_fu_522_ap_start;
wire    grp_shift_reg_en_fu_522_ap_done;
wire    grp_shift_reg_en_fu_522_ap_idle;
wire    grp_shift_reg_en_fu_522_ap_ready;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_0;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_1;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_2;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_3;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_4;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_5;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_6;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_7;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_8;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_9;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_10;
wire   [7:0] grp_shift_reg_en_fu_522_ap_return_11;
reg    call_ret4_shift_reg_load_fu_554_ap_start;
wire    call_ret4_shift_reg_load_fu_554_ap_done;
wire    call_ret4_shift_reg_load_fu_554_ap_idle;
wire    call_ret4_shift_reg_load_fu_554_ap_ready;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_0;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_1;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_2;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_3;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_4;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_5;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_6;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_7;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_8;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_9;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_10;
wire   [7:0] call_ret4_shift_reg_load_fu_554_ap_return_11;
reg    call_ret5_shift_reg_sreset_fu_598_ap_start;
wire    call_ret5_shift_reg_sreset_fu_598_ap_done;
wire    call_ret5_shift_reg_sreset_fu_598_ap_idle;
wire    call_ret5_shift_reg_sreset_fu_598_ap_ready;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_0;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_1;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_2;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_3;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_4;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_5;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_6;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_7;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_8;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_9;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_10;
wire   [7:0] call_ret5_shift_reg_sreset_fu_598_ap_return_11;
wire    grp_shift_reg_ip_fu_626_ap_start;
wire    grp_shift_reg_ip_fu_626_ap_done;
wire    grp_shift_reg_ip_fu_626_ap_idle;
wire    grp_shift_reg_ip_fu_626_ap_ready;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_0;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_1;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_2;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_3;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_4;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_5;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_6;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_7;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_8;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_9;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_10;
wire   [7:0] grp_shift_reg_ip_fu_626_ap_return_11;
reg    call_ret2_shift_reg_basic_fu_636_ap_start;
wire    call_ret2_shift_reg_basic_fu_636_ap_done;
wire    call_ret2_shift_reg_basic_fu_636_ap_idle;
wire    call_ret2_shift_reg_basic_fu_636_ap_ready;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_0;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_1;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_2;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_3;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_4;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_5;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_6;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_7;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_8;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_9;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_10;
wire   [7:0] call_ret2_shift_reg_basic_fu_636_ap_return_11;
reg    call_ret1_shift_reg_template_fu_663_ap_start;
wire    call_ret1_shift_reg_template_fu_663_ap_done;
wire    call_ret1_shift_reg_template_fu_663_ap_idle;
wire    call_ret1_shift_reg_template_fu_663_ap_ready;
wire   [7:0] call_ret1_shift_reg_template_fu_663_ap_return_0;
wire   [7:0] call_ret1_shift_reg_template_fu_663_ap_return_1;
wire   [7:0] call_ret1_shift_reg_template_fu_663_ap_return_2;
wire   [7:0] call_ret1_shift_reg_template_fu_663_ap_return_3;
wire   [7:0] call_ret1_shift_reg_template_fu_663_ap_return_4;
wire   [7:0] call_ret1_shift_reg_template_fu_663_ap_return_5;
wire   [7:0] call_ret1_shift_reg_template_fu_663_ap_return_6;
wire   [7:0] call_ret1_shift_reg_template_fu_663_ap_return_7;
wire   [31:0] call_ret1_shift_reg_template_fu_663_ap_return_8;
wire   [31:0] call_ret1_shift_reg_template_fu_663_ap_return_9;
wire   [31:0] call_ret1_shift_reg_template_fu_663_ap_return_10;
wire   [31:0] call_ret1_shift_reg_template_fu_663_ap_return_11;
reg    grp_shift_reg_class_fu_470_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    ap_block_state2_on_subcall_done;
reg    grp_shift_reg_en_fu_522_ap_start_reg;
reg    grp_shift_reg_ip_fu_626_ap_start_reg;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 grp_shift_reg_class_fu_470_ap_start_reg = 1'b0;
#0 grp_shift_reg_en_fu_522_ap_start_reg = 1'b0;
#0 grp_shift_reg_ip_fu_626_ap_start_reg = 1'b0;
end

shift_reg_class grp_shift_reg_class_fu_470(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_shift_reg_class_fu_470_ap_start),
    .ap_done(grp_shift_reg_class_fu_470_ap_done),
    .ap_idle(grp_shift_reg_class_fu_470_ap_idle),
    .ap_ready(grp_shift_reg_class_fu_470_ap_ready),
    .din(din0),
    .load_data_0_read(load_data_0),
    .load_data_1_read(load_data_1),
    .load_data_2_read(load_data_2),
    .load_data_3_read(load_data_3),
    .load_data_4_read(load_data_4),
    .load_data_5_read(load_data_5),
    .load_data_6_read(load_data_6),
    .load_data_7_read(load_data_7),
    .srst(srst),
    .load(load),
    .en(en),
    .ap_return_0(grp_shift_reg_class_fu_470_ap_return_0),
    .ap_return_1(grp_shift_reg_class_fu_470_ap_return_1),
    .ap_return_2(grp_shift_reg_class_fu_470_ap_return_2),
    .ap_return_3(grp_shift_reg_class_fu_470_ap_return_3),
    .ap_return_4(grp_shift_reg_class_fu_470_ap_return_4),
    .ap_return_5(grp_shift_reg_class_fu_470_ap_return_5),
    .ap_return_6(grp_shift_reg_class_fu_470_ap_return_6),
    .ap_return_7(grp_shift_reg_class_fu_470_ap_return_7),
    .ap_return_8(grp_shift_reg_class_fu_470_ap_return_8),
    .ap_return_9(grp_shift_reg_class_fu_470_ap_return_9),
    .ap_return_10(grp_shift_reg_class_fu_470_ap_return_10),
    .ap_return_11(grp_shift_reg_class_fu_470_ap_return_11)
);

shift_reg_en grp_shift_reg_en_fu_522(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_shift_reg_en_fu_522_ap_start),
    .ap_done(grp_shift_reg_en_fu_522_ap_done),
    .ap_idle(grp_shift_reg_en_fu_522_ap_idle),
    .ap_ready(grp_shift_reg_en_fu_522_ap_ready),
    .din(din0),
    .en(en),
    .ap_return_0(grp_shift_reg_en_fu_522_ap_return_0),
    .ap_return_1(grp_shift_reg_en_fu_522_ap_return_1),
    .ap_return_2(grp_shift_reg_en_fu_522_ap_return_2),
    .ap_return_3(grp_shift_reg_en_fu_522_ap_return_3),
    .ap_return_4(grp_shift_reg_en_fu_522_ap_return_4),
    .ap_return_5(grp_shift_reg_en_fu_522_ap_return_5),
    .ap_return_6(grp_shift_reg_en_fu_522_ap_return_6),
    .ap_return_7(grp_shift_reg_en_fu_522_ap_return_7),
    .ap_return_8(grp_shift_reg_en_fu_522_ap_return_8),
    .ap_return_9(grp_shift_reg_en_fu_522_ap_return_9),
    .ap_return_10(grp_shift_reg_en_fu_522_ap_return_10),
    .ap_return_11(grp_shift_reg_en_fu_522_ap_return_11)
);

shift_reg_load call_ret4_shift_reg_load_fu_554(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret4_shift_reg_load_fu_554_ap_start),
    .ap_done(call_ret4_shift_reg_load_fu_554_ap_done),
    .ap_idle(call_ret4_shift_reg_load_fu_554_ap_idle),
    .ap_ready(call_ret4_shift_reg_load_fu_554_ap_ready),
    .din(din0),
    .load_data_0_read(load_data_0),
    .load_data_1_read(load_data_1),
    .load_data_2_read(load_data_2),
    .load_data_3_read(load_data_3),
    .load_data_4_read(load_data_4),
    .load_data_5_read(load_data_5),
    .load_data_6_read(load_data_6),
    .load_data_7_read(load_data_7),
    .load_data_8_read(load_data_8),
    .load_data_9_read(load_data_9),
    .load_data_10_read(load_data_10),
    .load_data_11_read(load_data_11),
    .load(load),
    .ap_return_0(call_ret4_shift_reg_load_fu_554_ap_return_0),
    .ap_return_1(call_ret4_shift_reg_load_fu_554_ap_return_1),
    .ap_return_2(call_ret4_shift_reg_load_fu_554_ap_return_2),
    .ap_return_3(call_ret4_shift_reg_load_fu_554_ap_return_3),
    .ap_return_4(call_ret4_shift_reg_load_fu_554_ap_return_4),
    .ap_return_5(call_ret4_shift_reg_load_fu_554_ap_return_5),
    .ap_return_6(call_ret4_shift_reg_load_fu_554_ap_return_6),
    .ap_return_7(call_ret4_shift_reg_load_fu_554_ap_return_7),
    .ap_return_8(call_ret4_shift_reg_load_fu_554_ap_return_8),
    .ap_return_9(call_ret4_shift_reg_load_fu_554_ap_return_9),
    .ap_return_10(call_ret4_shift_reg_load_fu_554_ap_return_10),
    .ap_return_11(call_ret4_shift_reg_load_fu_554_ap_return_11)
);

shift_reg_sreset call_ret5_shift_reg_sreset_fu_598(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret5_shift_reg_sreset_fu_598_ap_start),
    .ap_done(call_ret5_shift_reg_sreset_fu_598_ap_done),
    .ap_idle(call_ret5_shift_reg_sreset_fu_598_ap_idle),
    .ap_ready(call_ret5_shift_reg_sreset_fu_598_ap_ready),
    .din(din0),
    .srst(srst),
    .ap_return_0(call_ret5_shift_reg_sreset_fu_598_ap_return_0),
    .ap_return_1(call_ret5_shift_reg_sreset_fu_598_ap_return_1),
    .ap_return_2(call_ret5_shift_reg_sreset_fu_598_ap_return_2),
    .ap_return_3(call_ret5_shift_reg_sreset_fu_598_ap_return_3),
    .ap_return_4(call_ret5_shift_reg_sreset_fu_598_ap_return_4),
    .ap_return_5(call_ret5_shift_reg_sreset_fu_598_ap_return_5),
    .ap_return_6(call_ret5_shift_reg_sreset_fu_598_ap_return_6),
    .ap_return_7(call_ret5_shift_reg_sreset_fu_598_ap_return_7),
    .ap_return_8(call_ret5_shift_reg_sreset_fu_598_ap_return_8),
    .ap_return_9(call_ret5_shift_reg_sreset_fu_598_ap_return_9),
    .ap_return_10(call_ret5_shift_reg_sreset_fu_598_ap_return_10),
    .ap_return_11(call_ret5_shift_reg_sreset_fu_598_ap_return_11)
);

shift_reg_ip grp_shift_reg_ip_fu_626(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_shift_reg_ip_fu_626_ap_start),
    .ap_done(grp_shift_reg_ip_fu_626_ap_done),
    .ap_idle(grp_shift_reg_ip_fu_626_ap_idle),
    .ap_ready(grp_shift_reg_ip_fu_626_ap_ready),
    .din(din0),
    .en(en),
    .ap_return_0(grp_shift_reg_ip_fu_626_ap_return_0),
    .ap_return_1(grp_shift_reg_ip_fu_626_ap_return_1),
    .ap_return_2(grp_shift_reg_ip_fu_626_ap_return_2),
    .ap_return_3(grp_shift_reg_ip_fu_626_ap_return_3),
    .ap_return_4(grp_shift_reg_ip_fu_626_ap_return_4),
    .ap_return_5(grp_shift_reg_ip_fu_626_ap_return_5),
    .ap_return_6(grp_shift_reg_ip_fu_626_ap_return_6),
    .ap_return_7(grp_shift_reg_ip_fu_626_ap_return_7),
    .ap_return_8(grp_shift_reg_ip_fu_626_ap_return_8),
    .ap_return_9(grp_shift_reg_ip_fu_626_ap_return_9),
    .ap_return_10(grp_shift_reg_ip_fu_626_ap_return_10),
    .ap_return_11(grp_shift_reg_ip_fu_626_ap_return_11)
);

shift_reg_basic call_ret2_shift_reg_basic_fu_636(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret2_shift_reg_basic_fu_636_ap_start),
    .ap_done(call_ret2_shift_reg_basic_fu_636_ap_done),
    .ap_idle(call_ret2_shift_reg_basic_fu_636_ap_idle),
    .ap_ready(call_ret2_shift_reg_basic_fu_636_ap_ready),
    .din(din0),
    .ap_return_0(call_ret2_shift_reg_basic_fu_636_ap_return_0),
    .ap_return_1(call_ret2_shift_reg_basic_fu_636_ap_return_1),
    .ap_return_2(call_ret2_shift_reg_basic_fu_636_ap_return_2),
    .ap_return_3(call_ret2_shift_reg_basic_fu_636_ap_return_3),
    .ap_return_4(call_ret2_shift_reg_basic_fu_636_ap_return_4),
    .ap_return_5(call_ret2_shift_reg_basic_fu_636_ap_return_5),
    .ap_return_6(call_ret2_shift_reg_basic_fu_636_ap_return_6),
    .ap_return_7(call_ret2_shift_reg_basic_fu_636_ap_return_7),
    .ap_return_8(call_ret2_shift_reg_basic_fu_636_ap_return_8),
    .ap_return_9(call_ret2_shift_reg_basic_fu_636_ap_return_9),
    .ap_return_10(call_ret2_shift_reg_basic_fu_636_ap_return_10),
    .ap_return_11(call_ret2_shift_reg_basic_fu_636_ap_return_11)
);

shift_reg_template call_ret1_shift_reg_template_fu_663(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret1_shift_reg_template_fu_663_ap_start),
    .ap_done(call_ret1_shift_reg_template_fu_663_ap_done),
    .ap_idle(call_ret1_shift_reg_template_fu_663_ap_idle),
    .ap_ready(call_ret1_shift_reg_template_fu_663_ap_ready),
    .din0(din0),
    .din1(din1),
    .ap_return_0(call_ret1_shift_reg_template_fu_663_ap_return_0),
    .ap_return_1(call_ret1_shift_reg_template_fu_663_ap_return_1),
    .ap_return_2(call_ret1_shift_reg_template_fu_663_ap_return_2),
    .ap_return_3(call_ret1_shift_reg_template_fu_663_ap_return_3),
    .ap_return_4(call_ret1_shift_reg_template_fu_663_ap_return_4),
    .ap_return_5(call_ret1_shift_reg_template_fu_663_ap_return_5),
    .ap_return_6(call_ret1_shift_reg_template_fu_663_ap_return_6),
    .ap_return_7(call_ret1_shift_reg_template_fu_663_ap_return_7),
    .ap_return_8(call_ret1_shift_reg_template_fu_663_ap_return_8),
    .ap_return_9(call_ret1_shift_reg_template_fu_663_ap_return_9),
    .ap_return_10(call_ret1_shift_reg_template_fu_663_ap_return_10),
    .ap_return_11(call_ret1_shift_reg_template_fu_663_ap_return_11)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_shift_reg_class_fu_470_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (select_V == 3'd4) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_shift_reg_class_fu_470_ap_start_reg <= 1'b1;
        end else if ((grp_shift_reg_class_fu_470_ap_ready == 1'b1)) begin
            grp_shift_reg_class_fu_470_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_shift_reg_en_fu_522_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (select_V == 3'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_shift_reg_en_fu_522_ap_start_reg <= 1'b1;
        end else if ((grp_shift_reg_en_fu_522_ap_ready == 1'b1)) begin
            grp_shift_reg_en_fu_522_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_shift_reg_ip_fu_626_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (select_V == 3'd5) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_shift_reg_ip_fu_626_ap_start_reg <= 1'b1;
        end else if ((grp_shift_reg_ip_fu_626_ap_ready == 1'b1)) begin
            grp_shift_reg_ip_fu_626_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7)))) begin
        call_ret1_shift_reg_template_fu_663_ap_start = 1'b1;
    end else begin
        call_ret1_shift_reg_template_fu_663_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        call_ret2_shift_reg_basic_fu_636_ap_start = 1'b1;
    end else begin
        call_ret2_shift_reg_basic_fu_636_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        call_ret4_shift_reg_load_fu_554_ap_start = 1'b1;
    end else begin
        call_ret4_shift_reg_load_fu_554_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        call_ret5_shift_reg_sreset_fu_598_ap_start = 1'b1;
    end else begin
        call_ret5_shift_reg_sreset_fu_598_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if (((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) begin
            dout0_0 = call_ret1_shift_reg_template_fu_663_ap_return_0;
        end else if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_0 = call_ret2_shift_reg_basic_fu_636_ap_return_0;
        end else if ((select_V == 3'd1)) begin
            dout0_0 = grp_shift_reg_en_fu_522_ap_return_0;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_0 = call_ret4_shift_reg_load_fu_554_ap_return_0;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_0 = call_ret5_shift_reg_sreset_fu_598_ap_return_0;
        end else if ((select_V == 3'd4)) begin
            dout0_0 = grp_shift_reg_class_fu_470_ap_return_0;
        end else if ((select_V == 3'd5)) begin
            dout0_0 = grp_shift_reg_ip_fu_626_ap_return_0;
        end else begin
            dout0_0 = 'bx;
        end
    end else begin
        dout0_0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) | ((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_0_ap_vld = 1'b1;
    end else begin
        dout0_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if (((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) begin
            dout0_1 = call_ret1_shift_reg_template_fu_663_ap_return_1;
        end else if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_1 = call_ret2_shift_reg_basic_fu_636_ap_return_1;
        end else if ((select_V == 3'd1)) begin
            dout0_1 = grp_shift_reg_en_fu_522_ap_return_1;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_1 = call_ret4_shift_reg_load_fu_554_ap_return_1;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_1 = call_ret5_shift_reg_sreset_fu_598_ap_return_1;
        end else if ((select_V == 3'd4)) begin
            dout0_1 = grp_shift_reg_class_fu_470_ap_return_1;
        end else if ((select_V == 3'd5)) begin
            dout0_1 = grp_shift_reg_ip_fu_626_ap_return_1;
        end else begin
            dout0_1 = 'bx;
        end
    end else begin
        dout0_1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_10 = call_ret2_shift_reg_basic_fu_636_ap_return_10;
        end else if ((select_V == 3'd1)) begin
            dout0_10 = grp_shift_reg_en_fu_522_ap_return_10;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_10 = call_ret4_shift_reg_load_fu_554_ap_return_10;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_10 = call_ret5_shift_reg_sreset_fu_598_ap_return_10;
        end else if ((select_V == 3'd4)) begin
            dout0_10 = grp_shift_reg_class_fu_470_ap_return_10;
        end else if ((select_V == 3'd5)) begin
            dout0_10 = grp_shift_reg_ip_fu_626_ap_return_10;
        end else begin
            dout0_10 = 'bx;
        end
    end else begin
        dout0_10 = 'bx;
    end
end

always @ (*) begin
    if ((((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_10_ap_vld = 1'b1;
    end else begin
        dout0_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_11 = call_ret2_shift_reg_basic_fu_636_ap_return_11;
        end else if ((select_V == 3'd1)) begin
            dout0_11 = grp_shift_reg_en_fu_522_ap_return_11;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_11 = call_ret4_shift_reg_load_fu_554_ap_return_11;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_11 = call_ret5_shift_reg_sreset_fu_598_ap_return_11;
        end else if ((select_V == 3'd4)) begin
            dout0_11 = grp_shift_reg_class_fu_470_ap_return_11;
        end else if ((select_V == 3'd5)) begin
            dout0_11 = grp_shift_reg_ip_fu_626_ap_return_11;
        end else begin
            dout0_11 = 'bx;
        end
    end else begin
        dout0_11 = 'bx;
    end
end

always @ (*) begin
    if ((((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_11_ap_vld = 1'b1;
    end else begin
        dout0_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) | ((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_1_ap_vld = 1'b1;
    end else begin
        dout0_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if (((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) begin
            dout0_2 = call_ret1_shift_reg_template_fu_663_ap_return_2;
        end else if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_2 = call_ret2_shift_reg_basic_fu_636_ap_return_2;
        end else if ((select_V == 3'd1)) begin
            dout0_2 = grp_shift_reg_en_fu_522_ap_return_2;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_2 = call_ret4_shift_reg_load_fu_554_ap_return_2;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_2 = call_ret5_shift_reg_sreset_fu_598_ap_return_2;
        end else if ((select_V == 3'd4)) begin
            dout0_2 = grp_shift_reg_class_fu_470_ap_return_2;
        end else if ((select_V == 3'd5)) begin
            dout0_2 = grp_shift_reg_ip_fu_626_ap_return_2;
        end else begin
            dout0_2 = 'bx;
        end
    end else begin
        dout0_2 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) | ((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_2_ap_vld = 1'b1;
    end else begin
        dout0_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if (((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) begin
            dout0_3 = call_ret1_shift_reg_template_fu_663_ap_return_3;
        end else if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_3 = call_ret2_shift_reg_basic_fu_636_ap_return_3;
        end else if ((select_V == 3'd1)) begin
            dout0_3 = grp_shift_reg_en_fu_522_ap_return_3;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_3 = call_ret4_shift_reg_load_fu_554_ap_return_3;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_3 = call_ret5_shift_reg_sreset_fu_598_ap_return_3;
        end else if ((select_V == 3'd4)) begin
            dout0_3 = grp_shift_reg_class_fu_470_ap_return_3;
        end else if ((select_V == 3'd5)) begin
            dout0_3 = grp_shift_reg_ip_fu_626_ap_return_3;
        end else begin
            dout0_3 = 'bx;
        end
    end else begin
        dout0_3 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) | ((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_3_ap_vld = 1'b1;
    end else begin
        dout0_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if (((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) begin
            dout0_4 = call_ret1_shift_reg_template_fu_663_ap_return_4;
        end else if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_4 = call_ret2_shift_reg_basic_fu_636_ap_return_4;
        end else if ((select_V == 3'd1)) begin
            dout0_4 = grp_shift_reg_en_fu_522_ap_return_4;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_4 = call_ret4_shift_reg_load_fu_554_ap_return_4;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_4 = call_ret5_shift_reg_sreset_fu_598_ap_return_4;
        end else if ((select_V == 3'd4)) begin
            dout0_4 = grp_shift_reg_class_fu_470_ap_return_4;
        end else if ((select_V == 3'd5)) begin
            dout0_4 = grp_shift_reg_ip_fu_626_ap_return_4;
        end else begin
            dout0_4 = 'bx;
        end
    end else begin
        dout0_4 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) | ((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_4_ap_vld = 1'b1;
    end else begin
        dout0_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if (((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) begin
            dout0_5 = call_ret1_shift_reg_template_fu_663_ap_return_5;
        end else if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_5 = call_ret2_shift_reg_basic_fu_636_ap_return_5;
        end else if ((select_V == 3'd1)) begin
            dout0_5 = grp_shift_reg_en_fu_522_ap_return_5;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_5 = call_ret4_shift_reg_load_fu_554_ap_return_5;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_5 = call_ret5_shift_reg_sreset_fu_598_ap_return_5;
        end else if ((select_V == 3'd4)) begin
            dout0_5 = grp_shift_reg_class_fu_470_ap_return_5;
        end else if ((select_V == 3'd5)) begin
            dout0_5 = grp_shift_reg_ip_fu_626_ap_return_5;
        end else begin
            dout0_5 = 'bx;
        end
    end else begin
        dout0_5 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) | ((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_5_ap_vld = 1'b1;
    end else begin
        dout0_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if (((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) begin
            dout0_6 = call_ret1_shift_reg_template_fu_663_ap_return_6;
        end else if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_6 = call_ret2_shift_reg_basic_fu_636_ap_return_6;
        end else if ((select_V == 3'd1)) begin
            dout0_6 = grp_shift_reg_en_fu_522_ap_return_6;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_6 = call_ret4_shift_reg_load_fu_554_ap_return_6;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_6 = call_ret5_shift_reg_sreset_fu_598_ap_return_6;
        end else if ((select_V == 3'd4)) begin
            dout0_6 = grp_shift_reg_class_fu_470_ap_return_6;
        end else if ((select_V == 3'd5)) begin
            dout0_6 = grp_shift_reg_ip_fu_626_ap_return_6;
        end else begin
            dout0_6 = 'bx;
        end
    end else begin
        dout0_6 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) | ((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_6_ap_vld = 1'b1;
    end else begin
        dout0_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if (((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) begin
            dout0_7 = call_ret1_shift_reg_template_fu_663_ap_return_7;
        end else if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_7 = call_ret2_shift_reg_basic_fu_636_ap_return_7;
        end else if ((select_V == 3'd1)) begin
            dout0_7 = grp_shift_reg_en_fu_522_ap_return_7;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_7 = call_ret4_shift_reg_load_fu_554_ap_return_7;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_7 = call_ret5_shift_reg_sreset_fu_598_ap_return_7;
        end else if ((select_V == 3'd4)) begin
            dout0_7 = grp_shift_reg_class_fu_470_ap_return_7;
        end else if ((select_V == 3'd5)) begin
            dout0_7 = grp_shift_reg_ip_fu_626_ap_return_7;
        end else begin
            dout0_7 = 'bx;
        end
    end else begin
        dout0_7 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7))) | ((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_7_ap_vld = 1'b1;
    end else begin
        dout0_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_8 = call_ret2_shift_reg_basic_fu_636_ap_return_8;
        end else if ((select_V == 3'd1)) begin
            dout0_8 = grp_shift_reg_en_fu_522_ap_return_8;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_8 = call_ret4_shift_reg_load_fu_554_ap_return_8;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_8 = call_ret5_shift_reg_sreset_fu_598_ap_return_8;
        end else if ((select_V == 3'd4)) begin
            dout0_8 = grp_shift_reg_class_fu_470_ap_return_8;
        end else if ((select_V == 3'd5)) begin
            dout0_8 = grp_shift_reg_ip_fu_626_ap_return_8;
        end else begin
            dout0_8 = 'bx;
        end
    end else begin
        dout0_8 = 'bx;
    end
end

always @ (*) begin
    if ((((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_8_ap_vld = 1'b1;
    end else begin
        dout0_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((select_V_read_read_fu_250_p2 == 3'd0)) begin
            dout0_9 = call_ret2_shift_reg_basic_fu_636_ap_return_9;
        end else if ((select_V == 3'd1)) begin
            dout0_9 = grp_shift_reg_en_fu_522_ap_return_9;
        end else if ((select_V_read_read_fu_250_p2 == 3'd2)) begin
            dout0_9 = call_ret4_shift_reg_load_fu_554_ap_return_9;
        end else if ((select_V_read_read_fu_250_p2 == 3'd3)) begin
            dout0_9 = call_ret5_shift_reg_sreset_fu_598_ap_return_9;
        end else if ((select_V == 3'd4)) begin
            dout0_9 = grp_shift_reg_class_fu_470_ap_return_9;
        end else if ((select_V == 3'd5)) begin
            dout0_9 = grp_shift_reg_ip_fu_626_ap_return_9;
        end else begin
            dout0_9 = 'bx;
        end
    end else begin
        dout0_9 = 'bx;
    end
end

always @ (*) begin
    if ((((select_V_read_read_fu_250_p2 == 3'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd3) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V_read_read_fu_250_p2 == 3'd2) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd5) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)) | ((select_V == 3'd4) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2)))) begin
        dout0_9_ap_vld = 1'b1;
    end else begin
        dout0_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7)))) begin
        dout1_0_ap_vld = 1'b1;
    end else begin
        dout1_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7)))) begin
        dout1_1_ap_vld = 1'b1;
    end else begin
        dout1_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7)))) begin
        dout1_2_ap_vld = 1'b1;
    end else begin
        dout1_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((select_V_read_read_fu_250_p2 == 3'd6) | (select_V_read_read_fu_250_p2 == 3'd7)))) begin
        dout1_3_ap_vld = 1'b1;
    end else begin
        dout1_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state2_on_subcall_done = (((select_V == 3'd1) & (grp_shift_reg_en_fu_522_ap_done == 1'b0)) | ((select_V == 3'd5) & (grp_shift_reg_ip_fu_626_ap_done == 1'b0)) | ((select_V == 3'd4) & (grp_shift_reg_class_fu_470_ap_done == 1'b0)));
end

assign dout1_0 = call_ret1_shift_reg_template_fu_663_ap_return_8;

assign dout1_1 = call_ret1_shift_reg_template_fu_663_ap_return_9;

assign dout1_2 = call_ret1_shift_reg_template_fu_663_ap_return_10;

assign dout1_3 = call_ret1_shift_reg_template_fu_663_ap_return_11;

assign grp_shift_reg_class_fu_470_ap_start = grp_shift_reg_class_fu_470_ap_start_reg;

assign grp_shift_reg_en_fu_522_ap_start = grp_shift_reg_en_fu_522_ap_start_reg;

assign grp_shift_reg_ip_fu_626_ap_start = grp_shift_reg_ip_fu_626_ap_start_reg;

assign select_V_read_read_fu_250_p2 = select_V;

endmodule //shift_reg
