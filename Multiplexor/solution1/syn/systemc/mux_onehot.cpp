// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mux_onehot.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mux_onehot::ap_const_logic_1 = sc_dt::Log_1;
const bool mux_onehot::ap_const_boolean_1 = true;
const sc_lv<8> mux_onehot::ap_const_lv8_80 = "10000000";
const sc_lv<8> mux_onehot::ap_const_lv8_40 = "1000000";
const sc_lv<8> mux_onehot::ap_const_lv8_20 = "100000";
const sc_lv<8> mux_onehot::ap_const_lv8_10 = "10000";
const sc_lv<8> mux_onehot::ap_const_lv8_8 = "1000";
const sc_lv<8> mux_onehot::ap_const_lv8_4 = "100";
const sc_lv<8> mux_onehot::ap_const_lv8_2 = "10";
const sc_lv<8> mux_onehot::ap_const_lv8_1 = "1";
const sc_lv<8> mux_onehot::ap_const_lv8_0 = "00000000";
const sc_logic mux_onehot::ap_const_logic_0 = sc_dt::Log_0;

mux_onehot::mux_onehot(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( or_ln7_6_fu_232_p2 );
    sensitive << ( select_ln7_6_fu_224_p3 );

    SC_METHOD(thread_icmp_ln7_1_fu_98_p2);
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln7_2_fu_104_p2);
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln7_3_fu_110_p2);
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln7_4_fu_116_p2);
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln7_5_fu_122_p2);
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln7_6_fu_128_p2);
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln7_7_fu_134_p2);
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln7_fu_92_p2);
    sensitive << ( sel_V );

    SC_METHOD(thread_or_ln7_1_fu_162_p2);
    sensitive << ( icmp_ln7_5_fu_122_p2 );
    sensitive << ( icmp_ln7_4_fu_116_p2 );

    SC_METHOD(thread_or_ln7_2_fu_176_p2);
    sensitive << ( icmp_ln7_3_fu_110_p2 );
    sensitive << ( icmp_ln7_2_fu_104_p2 );

    SC_METHOD(thread_or_ln7_3_fu_190_p2);
    sensitive << ( icmp_ln7_1_fu_98_p2 );
    sensitive << ( icmp_ln7_fu_92_p2 );

    SC_METHOD(thread_or_ln7_4_fu_204_p2);
    sensitive << ( or_ln7_fu_148_p2 );
    sensitive << ( or_ln7_1_fu_162_p2 );

    SC_METHOD(thread_or_ln7_5_fu_218_p2);
    sensitive << ( or_ln7_2_fu_176_p2 );
    sensitive << ( or_ln7_3_fu_190_p2 );

    SC_METHOD(thread_or_ln7_6_fu_232_p2);
    sensitive << ( or_ln7_4_fu_204_p2 );
    sensitive << ( or_ln7_5_fu_218_p2 );

    SC_METHOD(thread_or_ln7_fu_148_p2);
    sensitive << ( icmp_ln7_7_fu_134_p2 );
    sensitive << ( icmp_ln7_6_fu_128_p2 );

    SC_METHOD(thread_select_ln7_1_fu_154_p3);
    sensitive << ( din_2_V_read );
    sensitive << ( din_3_V_read );
    sensitive << ( icmp_ln7_5_fu_122_p2 );

    SC_METHOD(thread_select_ln7_2_fu_168_p3);
    sensitive << ( din_4_V_read );
    sensitive << ( din_5_V_read );
    sensitive << ( icmp_ln7_3_fu_110_p2 );

    SC_METHOD(thread_select_ln7_3_fu_182_p3);
    sensitive << ( din_6_V_read );
    sensitive << ( din_7_V_read );
    sensitive << ( icmp_ln7_1_fu_98_p2 );

    SC_METHOD(thread_select_ln7_4_fu_196_p3);
    sensitive << ( or_ln7_fu_148_p2 );
    sensitive << ( select_ln7_fu_140_p3 );
    sensitive << ( select_ln7_1_fu_154_p3 );

    SC_METHOD(thread_select_ln7_5_fu_210_p3);
    sensitive << ( or_ln7_2_fu_176_p2 );
    sensitive << ( select_ln7_2_fu_168_p3 );
    sensitive << ( select_ln7_3_fu_182_p3 );

    SC_METHOD(thread_select_ln7_6_fu_224_p3);
    sensitive << ( or_ln7_4_fu_204_p2 );
    sensitive << ( select_ln7_4_fu_196_p3 );
    sensitive << ( select_ln7_5_fu_210_p3 );

    SC_METHOD(thread_select_ln7_fu_140_p3);
    sensitive << ( din_0_V_read );
    sensitive << ( din_1_V_read );
    sensitive << ( icmp_ln7_7_fu_134_p2 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mux_onehot_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, din_0_V_read, "(port)din_0_V_read");
    sc_trace(mVcdFile, din_1_V_read, "(port)din_1_V_read");
    sc_trace(mVcdFile, din_2_V_read, "(port)din_2_V_read");
    sc_trace(mVcdFile, din_3_V_read, "(port)din_3_V_read");
    sc_trace(mVcdFile, din_4_V_read, "(port)din_4_V_read");
    sc_trace(mVcdFile, din_5_V_read, "(port)din_5_V_read");
    sc_trace(mVcdFile, din_6_V_read, "(port)din_6_V_read");
    sc_trace(mVcdFile, din_7_V_read, "(port)din_7_V_read");
    sc_trace(mVcdFile, sel_V, "(port)sel_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, icmp_ln7_7_fu_134_p2, "icmp_ln7_7_fu_134_p2");
    sc_trace(mVcdFile, icmp_ln7_6_fu_128_p2, "icmp_ln7_6_fu_128_p2");
    sc_trace(mVcdFile, icmp_ln7_5_fu_122_p2, "icmp_ln7_5_fu_122_p2");
    sc_trace(mVcdFile, icmp_ln7_4_fu_116_p2, "icmp_ln7_4_fu_116_p2");
    sc_trace(mVcdFile, icmp_ln7_3_fu_110_p2, "icmp_ln7_3_fu_110_p2");
    sc_trace(mVcdFile, icmp_ln7_2_fu_104_p2, "icmp_ln7_2_fu_104_p2");
    sc_trace(mVcdFile, icmp_ln7_1_fu_98_p2, "icmp_ln7_1_fu_98_p2");
    sc_trace(mVcdFile, icmp_ln7_fu_92_p2, "icmp_ln7_fu_92_p2");
    sc_trace(mVcdFile, or_ln7_fu_148_p2, "or_ln7_fu_148_p2");
    sc_trace(mVcdFile, select_ln7_fu_140_p3, "select_ln7_fu_140_p3");
    sc_trace(mVcdFile, select_ln7_1_fu_154_p3, "select_ln7_1_fu_154_p3");
    sc_trace(mVcdFile, or_ln7_1_fu_162_p2, "or_ln7_1_fu_162_p2");
    sc_trace(mVcdFile, or_ln7_2_fu_176_p2, "or_ln7_2_fu_176_p2");
    sc_trace(mVcdFile, select_ln7_2_fu_168_p3, "select_ln7_2_fu_168_p3");
    sc_trace(mVcdFile, select_ln7_3_fu_182_p3, "select_ln7_3_fu_182_p3");
    sc_trace(mVcdFile, or_ln7_3_fu_190_p2, "or_ln7_3_fu_190_p2");
    sc_trace(mVcdFile, or_ln7_4_fu_204_p2, "or_ln7_4_fu_204_p2");
    sc_trace(mVcdFile, select_ln7_4_fu_196_p3, "select_ln7_4_fu_196_p3");
    sc_trace(mVcdFile, select_ln7_5_fu_210_p3, "select_ln7_5_fu_210_p3");
    sc_trace(mVcdFile, or_ln7_5_fu_218_p2, "or_ln7_5_fu_218_p2");
    sc_trace(mVcdFile, or_ln7_6_fu_232_p2, "or_ln7_6_fu_232_p2");
    sc_trace(mVcdFile, select_ln7_6_fu_224_p3, "select_ln7_6_fu_224_p3");
#endif

    }
}

mux_onehot::~mux_onehot() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void mux_onehot::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void mux_onehot::thread_ap_return() {
    ap_return = (!or_ln7_6_fu_232_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln7_6_fu_232_p2.read()[0].to_bool())? select_ln7_6_fu_224_p3.read(): ap_const_lv8_0);
}

void mux_onehot::thread_icmp_ln7_1_fu_98_p2() {
    icmp_ln7_1_fu_98_p2 = (!sel_V.read().is_01() || !ap_const_lv8_40.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_40);
}

void mux_onehot::thread_icmp_ln7_2_fu_104_p2() {
    icmp_ln7_2_fu_104_p2 = (!sel_V.read().is_01() || !ap_const_lv8_20.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_20);
}

void mux_onehot::thread_icmp_ln7_3_fu_110_p2() {
    icmp_ln7_3_fu_110_p2 = (!sel_V.read().is_01() || !ap_const_lv8_10.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_10);
}

void mux_onehot::thread_icmp_ln7_4_fu_116_p2() {
    icmp_ln7_4_fu_116_p2 = (!sel_V.read().is_01() || !ap_const_lv8_8.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_8);
}

void mux_onehot::thread_icmp_ln7_5_fu_122_p2() {
    icmp_ln7_5_fu_122_p2 = (!sel_V.read().is_01() || !ap_const_lv8_4.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_4);
}

void mux_onehot::thread_icmp_ln7_6_fu_128_p2() {
    icmp_ln7_6_fu_128_p2 = (!sel_V.read().is_01() || !ap_const_lv8_2.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_2);
}

void mux_onehot::thread_icmp_ln7_7_fu_134_p2() {
    icmp_ln7_7_fu_134_p2 = (!sel_V.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_1);
}

void mux_onehot::thread_icmp_ln7_fu_92_p2() {
    icmp_ln7_fu_92_p2 = (!sel_V.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_80);
}

void mux_onehot::thread_or_ln7_1_fu_162_p2() {
    or_ln7_1_fu_162_p2 = (icmp_ln7_5_fu_122_p2.read() | icmp_ln7_4_fu_116_p2.read());
}

void mux_onehot::thread_or_ln7_2_fu_176_p2() {
    or_ln7_2_fu_176_p2 = (icmp_ln7_3_fu_110_p2.read() | icmp_ln7_2_fu_104_p2.read());
}

void mux_onehot::thread_or_ln7_3_fu_190_p2() {
    or_ln7_3_fu_190_p2 = (icmp_ln7_1_fu_98_p2.read() | icmp_ln7_fu_92_p2.read());
}

void mux_onehot::thread_or_ln7_4_fu_204_p2() {
    or_ln7_4_fu_204_p2 = (or_ln7_fu_148_p2.read() | or_ln7_1_fu_162_p2.read());
}

void mux_onehot::thread_or_ln7_5_fu_218_p2() {
    or_ln7_5_fu_218_p2 = (or_ln7_2_fu_176_p2.read() | or_ln7_3_fu_190_p2.read());
}

void mux_onehot::thread_or_ln7_6_fu_232_p2() {
    or_ln7_6_fu_232_p2 = (or_ln7_4_fu_204_p2.read() | or_ln7_5_fu_218_p2.read());
}

void mux_onehot::thread_or_ln7_fu_148_p2() {
    or_ln7_fu_148_p2 = (icmp_ln7_7_fu_134_p2.read() | icmp_ln7_6_fu_128_p2.read());
}

void mux_onehot::thread_select_ln7_1_fu_154_p3() {
    select_ln7_1_fu_154_p3 = (!icmp_ln7_5_fu_122_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln7_5_fu_122_p2.read()[0].to_bool())? din_2_V_read.read(): din_3_V_read.read());
}

void mux_onehot::thread_select_ln7_2_fu_168_p3() {
    select_ln7_2_fu_168_p3 = (!icmp_ln7_3_fu_110_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln7_3_fu_110_p2.read()[0].to_bool())? din_4_V_read.read(): din_5_V_read.read());
}

void mux_onehot::thread_select_ln7_3_fu_182_p3() {
    select_ln7_3_fu_182_p3 = (!icmp_ln7_1_fu_98_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln7_1_fu_98_p2.read()[0].to_bool())? din_6_V_read.read(): din_7_V_read.read());
}

void mux_onehot::thread_select_ln7_4_fu_196_p3() {
    select_ln7_4_fu_196_p3 = (!or_ln7_fu_148_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln7_fu_148_p2.read()[0].to_bool())? select_ln7_fu_140_p3.read(): select_ln7_1_fu_154_p3.read());
}

void mux_onehot::thread_select_ln7_5_fu_210_p3() {
    select_ln7_5_fu_210_p3 = (!or_ln7_2_fu_176_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln7_2_fu_176_p2.read()[0].to_bool())? select_ln7_2_fu_168_p3.read(): select_ln7_3_fu_182_p3.read());
}

void mux_onehot::thread_select_ln7_6_fu_224_p3() {
    select_ln7_6_fu_224_p3 = (!or_ln7_4_fu_204_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln7_4_fu_204_p2.read()[0].to_bool())? select_ln7_4_fu_196_p3.read(): select_ln7_5_fu_210_p3.read());
}

void mux_onehot::thread_select_ln7_fu_140_p3() {
    select_ln7_fu_140_p3 = (!icmp_ln7_7_fu_134_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln7_7_fu_134_p2.read()[0].to_bool())? din_0_V_read.read(): din_1_V_read.read());
}

}

