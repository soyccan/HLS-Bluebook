// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _leading_ones_log2_HH_
#define _leading_ones_log2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct leading_ones_log2 : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > din_V;
    sc_out< sc_lv<1> > ap_return_0;
    sc_out< sc_lv<5> > ap_return_1;


    // Module declarations
    leading_ones_log2(sc_module_name name);
    SC_HAS_PROCESS(leading_ones_log2);

    ~leading_ones_log2();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > flag_fu_66_p2;
    sc_signal< sc_lv<1> > flag_reg_281;
    sc_signal< sc_lv<1> > icmp_ln883_fu_86_p2;
    sc_signal< sc_lv<1> > icmp_ln883_reg_286;
    sc_signal< sc_lv<1> > icmp_ln883_1_fu_114_p2;
    sc_signal< sc_lv<1> > icmp_ln883_1_reg_292;
    sc_signal< sc_lv<4> > trunc_ln25_1_fu_128_p1;
    sc_signal< sc_lv<4> > trunc_ln25_1_reg_297;
    sc_signal< sc_lv<4> > trunc_ln1503_1_reg_302;
    sc_signal< sc_lv<16> > trunc_ln_fu_72_p4;
    sc_signal< sc_lv<16> > trunc_ln1355_fu_82_p1;
    sc_signal< sc_lv<16> > select_ln25_fu_92_p3;
    sc_signal< sc_lv<8> > trunc_ln2_fu_104_p4;
    sc_signal< sc_lv<8> > trunc_ln25_fu_100_p1;
    sc_signal< sc_lv<8> > select_ln25_2_fu_120_p3;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > select_ln25_1_fu_142_p3;
    sc_signal< sc_lv<5> > select_ln26_fu_149_p3;
    sc_signal< sc_lv<1> > icmp_ln883_2_fu_163_p2;
    sc_signal< sc_lv<5> > select_ln25_3_fu_156_p3;
    sc_signal< sc_lv<5> > or_ln25_fu_174_p2;
    sc_signal< sc_lv<4> > select_ln25_4_fu_168_p3;
    sc_signal< sc_lv<2> > trunc_ln1503_2_fu_188_p4;
    sc_signal< sc_lv<5> > select_ln25_5_fu_180_p3;
    sc_signal< sc_lv<1> > icmp_ln883_3_fu_198_p2;
    sc_signal< sc_lv<5> > or_ln25_1_fu_204_p2;
    sc_signal< sc_lv<1> > tmp_fu_218_p3;
    sc_signal< sc_lv<1> > tmp_1_fu_226_p3;
    sc_signal< sc_lv<5> > select_ln25_6_fu_210_p3;
    sc_signal< sc_lv<1> > trunc_ln25_2_fu_242_p1;
    sc_signal< sc_lv<1> > select_ln25_7_fu_234_p3;
    sc_signal< sc_lv<4> > tmp_2_fu_252_p4;
    sc_signal< sc_lv<1> > or_ln25_2_fu_246_p2;
    sc_signal< sc_lv<5> > ssdm_int_V_write_ass_fu_262_p3;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_flag_fu_66_p2();
    void thread_icmp_ln883_1_fu_114_p2();
    void thread_icmp_ln883_2_fu_163_p2();
    void thread_icmp_ln883_3_fu_198_p2();
    void thread_icmp_ln883_fu_86_p2();
    void thread_or_ln25_1_fu_204_p2();
    void thread_or_ln25_2_fu_246_p2();
    void thread_or_ln25_fu_174_p2();
    void thread_select_ln25_1_fu_142_p3();
    void thread_select_ln25_2_fu_120_p3();
    void thread_select_ln25_3_fu_156_p3();
    void thread_select_ln25_4_fu_168_p3();
    void thread_select_ln25_5_fu_180_p3();
    void thread_select_ln25_6_fu_210_p3();
    void thread_select_ln25_7_fu_234_p3();
    void thread_select_ln25_fu_92_p3();
    void thread_select_ln26_fu_149_p3();
    void thread_ssdm_int_V_write_ass_fu_262_p3();
    void thread_tmp_1_fu_226_p3();
    void thread_tmp_2_fu_252_p4();
    void thread_tmp_fu_218_p3();
    void thread_trunc_ln1355_fu_82_p1();
    void thread_trunc_ln1503_2_fu_188_p4();
    void thread_trunc_ln25_1_fu_128_p1();
    void thread_trunc_ln25_2_fu_242_p1();
    void thread_trunc_ln25_fu_100_p1();
    void thread_trunc_ln2_fu_104_p4();
    void thread_trunc_ln_fu_72_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
