// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _leading_ones_templat_HH_
#define _leading_ones_templat_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "leading_ones_32_s.h"

namespace ap_rtl {

struct leading_ones_templat : public sc_module {
    // Port declarations 4
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > din_V_read;
    sc_out< sc_lv<1> > ap_return_0;
    sc_out< sc_lv<5> > ap_return_1;


    // Module declarations
    leading_ones_templat(sc_module_name name);
    SC_HAS_PROCESS(leading_ones_templat);

    ~leading_ones_templat();

    sc_trace_file* mVcdFile;

    leading_ones_32_s* call_ret_leading_ones_32_s_fu_12;
    sc_signal< sc_logic > call_ret_leading_ones_32_s_fu_12_ap_ready;
    sc_signal< sc_lv<1> > call_ret_leading_ones_32_s_fu_12_ap_return_0;
    sc_signal< sc_lv<5> > call_ret_leading_ones_32_s_fu_12_ap_return_1;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
};

}

using namespace ap_rtl;

#endif
