// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _leading_ones_brutefo_HH_
#define _leading_ones_brutefo_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct leading_ones_brutefo : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > din_V;
    sc_out< sc_lv<1> > ap_return_0;
    sc_out< sc_lv<5> > ap_return_1;


    // Module declarations
    leading_ones_brutefo(sc_module_name name);
    SC_HAS_PROCESS(leading_ones_brutefo);

    ~leading_ones_brutefo();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > tmp_17_fu_495_p3;
    sc_signal< sc_lv<1> > tmp_fu_375_p3;
    sc_signal< sc_lv<1> > tmp_3_fu_383_p3;
    sc_signal< sc_lv<1> > tmp_4_fu_391_p3;
    sc_signal< sc_lv<1> > tmp_5_fu_399_p3;
    sc_signal< sc_lv<1> > tmp_6_fu_407_p3;
    sc_signal< sc_lv<1> > tmp_7_fu_415_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_423_p3;
    sc_signal< sc_lv<1> > tmp_9_fu_431_p3;
    sc_signal< sc_lv<1> > tmp_10_fu_439_p3;
    sc_signal< sc_lv<1> > tmp_11_fu_447_p3;
    sc_signal< sc_lv<1> > tmp_12_fu_455_p3;
    sc_signal< sc_lv<1> > tmp_13_fu_463_p3;
    sc_signal< sc_lv<1> > tmp_14_fu_471_p3;
    sc_signal< sc_lv<1> > tmp_15_fu_479_p3;
    sc_signal< sc_lv<1> > tmp_16_fu_487_p3;
    sc_signal< sc_lv<5> > select_ln13_fu_503_p3;
    sc_signal< sc_lv<4> > zext_ln20_fu_619_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_18_fu_511_p3;
    sc_signal< sc_lv<1> > tmp_19_fu_518_p3;
    sc_signal< sc_lv<1> > tmp_20_fu_525_p3;
    sc_signal< sc_lv<1> > tmp_21_fu_532_p3;
    sc_signal< sc_lv<1> > tmp_22_fu_539_p3;
    sc_signal< sc_lv<1> > tmp_23_fu_546_p3;
    sc_signal< sc_lv<1> > tmp_24_fu_553_p3;
    sc_signal< sc_lv<1> > tmp_25_fu_560_p3;
    sc_signal< sc_lv<1> > tmp_26_fu_567_p3;
    sc_signal< sc_lv<1> > tmp_27_fu_574_p3;
    sc_signal< sc_lv<1> > tmp_28_fu_581_p3;
    sc_signal< sc_lv<1> > tmp_29_fu_588_p3;
    sc_signal< sc_lv<1> > tmp_30_fu_595_p3;
    sc_signal< sc_lv<1> > tmp_31_fu_602_p3;
    sc_signal< sc_lv<1> > or_ln20_fu_623_p2;
    sc_signal< sc_lv<5> > phi_ln25_reg_140;
    sc_signal< sc_lv<1> > flagu_0_reg_208;
    sc_signal< sc_lv<4> > phi_ln25_1_reg_262;
    sc_signal< sc_lv<1> > flagl_0_reg_325;
    sc_signal< sc_lv<1> > tmp_32_fu_609_p3;
    sc_signal< sc_lv<1> > trunc_ln791_fu_616_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > zext_ln25_fu_629_p1;
    sc_signal< sc_lv<1> > or_ln26_fu_641_p2;
    sc_signal< sc_lv<5> > select_ln25_fu_633_p3;
    sc_signal< sc_lv<1> > ap_return_0_preg;
    sc_signal< sc_lv<5> > ap_return_1_preg;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< bool > ap_condition_221;
    sc_signal< bool > ap_condition_225;
    sc_signal< bool > ap_condition_229;
    sc_signal< bool > ap_condition_233;
    sc_signal< bool > ap_condition_237;
    sc_signal< bool > ap_condition_241;
    sc_signal< bool > ap_condition_245;
    sc_signal< bool > ap_condition_249;
    sc_signal< bool > ap_condition_253;
    sc_signal< bool > ap_condition_257;
    sc_signal< bool > ap_condition_261;
    sc_signal< bool > ap_condition_265;
    sc_signal< bool > ap_condition_128;
    sc_signal< bool > ap_condition_144;
    sc_signal< bool > ap_condition_148;
    sc_signal< bool > ap_condition_152;
    sc_signal< bool > ap_condition_156;
    sc_signal< bool > ap_condition_160;
    sc_signal< bool > ap_condition_164;
    sc_signal< bool > ap_condition_168;
    sc_signal< bool > ap_condition_172;
    sc_signal< bool > ap_condition_176;
    sc_signal< bool > ap_condition_180;
    sc_signal< bool > ap_condition_184;
    sc_signal< bool > ap_condition_188;
    sc_signal< bool > ap_condition_192;
    sc_signal< bool > ap_condition_77;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1D;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1B;
    static const sc_lv<5> ap_const_lv5_1A;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_16;
    static const sc_lv<5> ap_const_lv5_15;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<5> ap_const_lv5_13;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_condition_128();
    void thread_ap_condition_144();
    void thread_ap_condition_148();
    void thread_ap_condition_152();
    void thread_ap_condition_156();
    void thread_ap_condition_160();
    void thread_ap_condition_164();
    void thread_ap_condition_168();
    void thread_ap_condition_172();
    void thread_ap_condition_176();
    void thread_ap_condition_180();
    void thread_ap_condition_184();
    void thread_ap_condition_188();
    void thread_ap_condition_192();
    void thread_ap_condition_221();
    void thread_ap_condition_225();
    void thread_ap_condition_229();
    void thread_ap_condition_233();
    void thread_ap_condition_237();
    void thread_ap_condition_241();
    void thread_ap_condition_245();
    void thread_ap_condition_249();
    void thread_ap_condition_253();
    void thread_ap_condition_257();
    void thread_ap_condition_261();
    void thread_ap_condition_265();
    void thread_ap_condition_77();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_or_ln20_fu_623_p2();
    void thread_or_ln26_fu_641_p2();
    void thread_select_ln13_fu_503_p3();
    void thread_select_ln25_fu_633_p3();
    void thread_tmp_10_fu_439_p3();
    void thread_tmp_11_fu_447_p3();
    void thread_tmp_12_fu_455_p3();
    void thread_tmp_13_fu_463_p3();
    void thread_tmp_14_fu_471_p3();
    void thread_tmp_15_fu_479_p3();
    void thread_tmp_16_fu_487_p3();
    void thread_tmp_17_fu_495_p3();
    void thread_tmp_18_fu_511_p3();
    void thread_tmp_19_fu_518_p3();
    void thread_tmp_20_fu_525_p3();
    void thread_tmp_21_fu_532_p3();
    void thread_tmp_22_fu_539_p3();
    void thread_tmp_23_fu_546_p3();
    void thread_tmp_24_fu_553_p3();
    void thread_tmp_25_fu_560_p3();
    void thread_tmp_26_fu_567_p3();
    void thread_tmp_27_fu_574_p3();
    void thread_tmp_28_fu_581_p3();
    void thread_tmp_29_fu_588_p3();
    void thread_tmp_30_fu_595_p3();
    void thread_tmp_31_fu_602_p3();
    void thread_tmp_32_fu_609_p3();
    void thread_tmp_3_fu_383_p3();
    void thread_tmp_4_fu_391_p3();
    void thread_tmp_5_fu_399_p3();
    void thread_tmp_6_fu_407_p3();
    void thread_tmp_7_fu_415_p3();
    void thread_tmp_8_fu_423_p3();
    void thread_tmp_9_fu_431_p3();
    void thread_tmp_fu_375_p3();
    void thread_trunc_ln791_fu_616_p1();
    void thread_zext_ln20_fu_619_p1();
    void thread_zext_ln25_fu_629_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
