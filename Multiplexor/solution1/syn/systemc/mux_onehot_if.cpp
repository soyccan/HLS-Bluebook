// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mux_onehot_if.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mux_onehot_if::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mux_onehot_if::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> mux_onehot_if::ap_ST_fsm_state1 = "1";
const sc_lv<2> mux_onehot_if::ap_ST_fsm_state2 = "10";
const sc_lv<32> mux_onehot_if::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> mux_onehot_if::ap_const_lv32_1 = "1";
const sc_lv<8> mux_onehot_if::ap_const_lv8_1 = "1";
const sc_lv<8> mux_onehot_if::ap_const_lv8_2 = "10";
const sc_lv<8> mux_onehot_if::ap_const_lv8_4 = "100";
const sc_lv<8> mux_onehot_if::ap_const_lv8_8 = "1000";
const sc_lv<8> mux_onehot_if::ap_const_lv8_10 = "10000";
const sc_lv<8> mux_onehot_if::ap_const_lv8_20 = "100000";
const sc_lv<8> mux_onehot_if::ap_const_lv8_40 = "1000000";
const sc_lv<8> mux_onehot_if::ap_const_lv8_80 = "10000000";
const sc_lv<1> mux_onehot_if::ap_const_lv1_1 = "1";
const sc_lv<8> mux_onehot_if::ap_const_lv8_0 = "00000000";
const bool mux_onehot_if::ap_const_boolean_1 = true;

mux_onehot_if::mux_onehot_if(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln879_1_fu_154_p2);
    sensitive << ( icmp_ln879_2_fu_106_p2 );
    sensitive << ( xor_ln879_1_fu_148_p2 );

    SC_METHOD(thread_and_ln879_2_fu_172_p2);
    sensitive << ( icmp_ln879_3_fu_112_p2 );
    sensitive << ( xor_ln879_2_fu_166_p2 );

    SC_METHOD(thread_and_ln879_3_fu_190_p2);
    sensitive << ( icmp_ln879_4_fu_118_p2 );
    sensitive << ( xor_ln879_3_fu_184_p2 );

    SC_METHOD(thread_and_ln879_4_fu_208_p2);
    sensitive << ( icmp_ln879_5_fu_124_p2 );
    sensitive << ( xor_ln879_4_fu_202_p2 );

    SC_METHOD(thread_and_ln879_5_fu_226_p2);
    sensitive << ( icmp_ln879_6_fu_130_p2 );
    sensitive << ( xor_ln879_5_fu_220_p2 );

    SC_METHOD(thread_and_ln879_fu_255_p2);
    sensitive << ( icmp_ln879_1_reg_345 );
    sensitive << ( xor_ln879_fu_250_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( select_ln879_7_fu_330_p3 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_icmp_ln879_1_fu_100_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln879_2_fu_106_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln879_3_fu_112_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln879_4_fu_118_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln879_5_fu_124_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln879_6_fu_130_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln879_7_fu_136_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sel_V );

    SC_METHOD(thread_icmp_ln879_fu_94_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( sel_V );

    SC_METHOD(thread_or_ln879_10_fu_312_p2);
    sensitive << ( or_ln879_7_fu_281_p2 );
    sensitive << ( or_ln879_8_fu_293_p2 );

    SC_METHOD(thread_or_ln879_11_fu_325_p2);
    sensitive << ( or_ln879_9_reg_376 );
    sensitive << ( or_ln879_10_fu_312_p2 );

    SC_METHOD(thread_or_ln879_1_fu_160_p2);
    sensitive << ( or_ln879_fu_142_p2 );
    sensitive << ( icmp_ln879_2_fu_106_p2 );

    SC_METHOD(thread_or_ln879_2_fu_178_p2);
    sensitive << ( or_ln879_1_fu_160_p2 );
    sensitive << ( icmp_ln879_3_fu_112_p2 );

    SC_METHOD(thread_or_ln879_3_fu_196_p2);
    sensitive << ( or_ln879_2_fu_178_p2 );
    sensitive << ( icmp_ln879_4_fu_118_p2 );

    SC_METHOD(thread_or_ln879_4_fu_214_p2);
    sensitive << ( or_ln879_3_fu_196_p2 );
    sensitive << ( icmp_ln879_5_fu_124_p2 );

    SC_METHOD(thread_or_ln879_5_fu_232_p2);
    sensitive << ( and_ln879_5_fu_226_p2 );
    sensitive << ( and_ln879_4_fu_208_p2 );

    SC_METHOD(thread_or_ln879_6_fu_238_p2);
    sensitive << ( and_ln879_3_fu_190_p2 );
    sensitive << ( and_ln879_2_fu_172_p2 );

    SC_METHOD(thread_or_ln879_7_fu_281_p2);
    sensitive << ( and_ln879_1_reg_355 );
    sensitive << ( and_ln879_fu_255_p2 );

    SC_METHOD(thread_or_ln879_8_fu_293_p2);
    sensitive << ( icmp_ln879_reg_338 );
    sensitive << ( icmp_ln879_7_reg_350 );

    SC_METHOD(thread_or_ln879_9_fu_244_p2);
    sensitive << ( or_ln879_5_fu_232_p2 );
    sensitive << ( or_ln879_6_fu_238_p2 );

    SC_METHOD(thread_or_ln879_fu_142_p2);
    sensitive << ( icmp_ln879_fu_94_p2 );
    sensitive << ( icmp_ln879_1_fu_100_p2 );

    SC_METHOD(thread_select_ln879_1_fu_267_p3);
    sensitive << ( din_3_V_read );
    sensitive << ( din_4_V_read );
    sensitive << ( and_ln879_3_reg_361 );

    SC_METHOD(thread_select_ln879_2_fu_274_p3);
    sensitive << ( din_1_V_read );
    sensitive << ( din_2_V_read );
    sensitive << ( and_ln879_1_reg_355 );

    SC_METHOD(thread_select_ln879_3_fu_286_p3);
    sensitive << ( din_0_V_read );
    sensitive << ( din_7_V_read );
    sensitive << ( icmp_ln879_reg_338 );

    SC_METHOD(thread_select_ln879_4_fu_297_p3);
    sensitive << ( or_ln879_5_reg_371 );
    sensitive << ( select_ln879_fu_260_p3 );
    sensitive << ( select_ln879_1_fu_267_p3 );

    SC_METHOD(thread_select_ln879_5_fu_304_p3);
    sensitive << ( or_ln879_7_fu_281_p2 );
    sensitive << ( select_ln879_2_fu_274_p3 );
    sensitive << ( select_ln879_3_fu_286_p3 );

    SC_METHOD(thread_select_ln879_6_fu_318_p3);
    sensitive << ( or_ln879_9_reg_376 );
    sensitive << ( select_ln879_4_fu_297_p3 );
    sensitive << ( select_ln879_5_fu_304_p3 );

    SC_METHOD(thread_select_ln879_7_fu_330_p3);
    sensitive << ( or_ln879_11_fu_325_p2 );
    sensitive << ( select_ln879_6_fu_318_p3 );

    SC_METHOD(thread_select_ln879_fu_260_p3);
    sensitive << ( din_5_V_read );
    sensitive << ( din_6_V_read );
    sensitive << ( and_ln879_5_reg_366 );

    SC_METHOD(thread_xor_ln879_1_fu_148_p2);
    sensitive << ( or_ln879_fu_142_p2 );

    SC_METHOD(thread_xor_ln879_2_fu_166_p2);
    sensitive << ( or_ln879_1_fu_160_p2 );

    SC_METHOD(thread_xor_ln879_3_fu_184_p2);
    sensitive << ( or_ln879_2_fu_178_p2 );

    SC_METHOD(thread_xor_ln879_4_fu_202_p2);
    sensitive << ( or_ln879_3_fu_196_p2 );

    SC_METHOD(thread_xor_ln879_5_fu_220_p2);
    sensitive << ( or_ln879_4_fu_214_p2 );

    SC_METHOD(thread_xor_ln879_fu_250_p2);
    sensitive << ( icmp_ln879_reg_338 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    ap_CS_fsm = "01";
    ap_return_preg = "00000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mux_onehot_if_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, din_0_V_read, "(port)din_0_V_read");
    sc_trace(mVcdFile, din_1_V_read, "(port)din_1_V_read");
    sc_trace(mVcdFile, din_2_V_read, "(port)din_2_V_read");
    sc_trace(mVcdFile, din_3_V_read, "(port)din_3_V_read");
    sc_trace(mVcdFile, din_4_V_read, "(port)din_4_V_read");
    sc_trace(mVcdFile, din_5_V_read, "(port)din_5_V_read");
    sc_trace(mVcdFile, din_6_V_read, "(port)din_6_V_read");
    sc_trace(mVcdFile, din_7_V_read, "(port)din_7_V_read");
    sc_trace(mVcdFile, sel_V, "(port)sel_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, icmp_ln879_fu_94_p2, "icmp_ln879_fu_94_p2");
    sc_trace(mVcdFile, icmp_ln879_reg_338, "icmp_ln879_reg_338");
    sc_trace(mVcdFile, icmp_ln879_1_fu_100_p2, "icmp_ln879_1_fu_100_p2");
    sc_trace(mVcdFile, icmp_ln879_1_reg_345, "icmp_ln879_1_reg_345");
    sc_trace(mVcdFile, icmp_ln879_7_fu_136_p2, "icmp_ln879_7_fu_136_p2");
    sc_trace(mVcdFile, icmp_ln879_7_reg_350, "icmp_ln879_7_reg_350");
    sc_trace(mVcdFile, and_ln879_1_fu_154_p2, "and_ln879_1_fu_154_p2");
    sc_trace(mVcdFile, and_ln879_1_reg_355, "and_ln879_1_reg_355");
    sc_trace(mVcdFile, and_ln879_3_fu_190_p2, "and_ln879_3_fu_190_p2");
    sc_trace(mVcdFile, and_ln879_3_reg_361, "and_ln879_3_reg_361");
    sc_trace(mVcdFile, and_ln879_5_fu_226_p2, "and_ln879_5_fu_226_p2");
    sc_trace(mVcdFile, and_ln879_5_reg_366, "and_ln879_5_reg_366");
    sc_trace(mVcdFile, or_ln879_5_fu_232_p2, "or_ln879_5_fu_232_p2");
    sc_trace(mVcdFile, or_ln879_5_reg_371, "or_ln879_5_reg_371");
    sc_trace(mVcdFile, or_ln879_9_fu_244_p2, "or_ln879_9_fu_244_p2");
    sc_trace(mVcdFile, or_ln879_9_reg_376, "or_ln879_9_reg_376");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, or_ln879_fu_142_p2, "or_ln879_fu_142_p2");
    sc_trace(mVcdFile, icmp_ln879_2_fu_106_p2, "icmp_ln879_2_fu_106_p2");
    sc_trace(mVcdFile, xor_ln879_1_fu_148_p2, "xor_ln879_1_fu_148_p2");
    sc_trace(mVcdFile, or_ln879_1_fu_160_p2, "or_ln879_1_fu_160_p2");
    sc_trace(mVcdFile, icmp_ln879_3_fu_112_p2, "icmp_ln879_3_fu_112_p2");
    sc_trace(mVcdFile, xor_ln879_2_fu_166_p2, "xor_ln879_2_fu_166_p2");
    sc_trace(mVcdFile, or_ln879_2_fu_178_p2, "or_ln879_2_fu_178_p2");
    sc_trace(mVcdFile, icmp_ln879_4_fu_118_p2, "icmp_ln879_4_fu_118_p2");
    sc_trace(mVcdFile, xor_ln879_3_fu_184_p2, "xor_ln879_3_fu_184_p2");
    sc_trace(mVcdFile, or_ln879_3_fu_196_p2, "or_ln879_3_fu_196_p2");
    sc_trace(mVcdFile, icmp_ln879_5_fu_124_p2, "icmp_ln879_5_fu_124_p2");
    sc_trace(mVcdFile, xor_ln879_4_fu_202_p2, "xor_ln879_4_fu_202_p2");
    sc_trace(mVcdFile, or_ln879_4_fu_214_p2, "or_ln879_4_fu_214_p2");
    sc_trace(mVcdFile, icmp_ln879_6_fu_130_p2, "icmp_ln879_6_fu_130_p2");
    sc_trace(mVcdFile, xor_ln879_5_fu_220_p2, "xor_ln879_5_fu_220_p2");
    sc_trace(mVcdFile, and_ln879_4_fu_208_p2, "and_ln879_4_fu_208_p2");
    sc_trace(mVcdFile, and_ln879_2_fu_172_p2, "and_ln879_2_fu_172_p2");
    sc_trace(mVcdFile, or_ln879_6_fu_238_p2, "or_ln879_6_fu_238_p2");
    sc_trace(mVcdFile, xor_ln879_fu_250_p2, "xor_ln879_fu_250_p2");
    sc_trace(mVcdFile, and_ln879_fu_255_p2, "and_ln879_fu_255_p2");
    sc_trace(mVcdFile, select_ln879_fu_260_p3, "select_ln879_fu_260_p3");
    sc_trace(mVcdFile, select_ln879_1_fu_267_p3, "select_ln879_1_fu_267_p3");
    sc_trace(mVcdFile, or_ln879_7_fu_281_p2, "or_ln879_7_fu_281_p2");
    sc_trace(mVcdFile, select_ln879_2_fu_274_p3, "select_ln879_2_fu_274_p3");
    sc_trace(mVcdFile, select_ln879_3_fu_286_p3, "select_ln879_3_fu_286_p3");
    sc_trace(mVcdFile, or_ln879_8_fu_293_p2, "or_ln879_8_fu_293_p2");
    sc_trace(mVcdFile, select_ln879_4_fu_297_p3, "select_ln879_4_fu_297_p3");
    sc_trace(mVcdFile, select_ln879_5_fu_304_p3, "select_ln879_5_fu_304_p3");
    sc_trace(mVcdFile, or_ln879_10_fu_312_p2, "or_ln879_10_fu_312_p2");
    sc_trace(mVcdFile, or_ln879_11_fu_325_p2, "or_ln879_11_fu_325_p2");
    sc_trace(mVcdFile, select_ln879_6_fu_318_p3, "select_ln879_6_fu_318_p3");
    sc_trace(mVcdFile, select_ln879_7_fu_330_p3, "select_ln879_7_fu_330_p3");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

mux_onehot_if::~mux_onehot_if() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void mux_onehot_if::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_return_preg = select_ln879_7_fu_330_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        and_ln879_1_reg_355 = and_ln879_1_fu_154_p2.read();
        and_ln879_3_reg_361 = and_ln879_3_fu_190_p2.read();
        and_ln879_5_reg_366 = and_ln879_5_fu_226_p2.read();
        icmp_ln879_1_reg_345 = icmp_ln879_1_fu_100_p2.read();
        icmp_ln879_7_reg_350 = icmp_ln879_7_fu_136_p2.read();
        icmp_ln879_reg_338 = icmp_ln879_fu_94_p2.read();
        or_ln879_5_reg_371 = or_ln879_5_fu_232_p2.read();
        or_ln879_9_reg_376 = or_ln879_9_fu_244_p2.read();
    }
}

void mux_onehot_if::thread_and_ln879_1_fu_154_p2() {
    and_ln879_1_fu_154_p2 = (icmp_ln879_2_fu_106_p2.read() & xor_ln879_1_fu_148_p2.read());
}

void mux_onehot_if::thread_and_ln879_2_fu_172_p2() {
    and_ln879_2_fu_172_p2 = (icmp_ln879_3_fu_112_p2.read() & xor_ln879_2_fu_166_p2.read());
}

void mux_onehot_if::thread_and_ln879_3_fu_190_p2() {
    and_ln879_3_fu_190_p2 = (icmp_ln879_4_fu_118_p2.read() & xor_ln879_3_fu_184_p2.read());
}

void mux_onehot_if::thread_and_ln879_4_fu_208_p2() {
    and_ln879_4_fu_208_p2 = (icmp_ln879_5_fu_124_p2.read() & xor_ln879_4_fu_202_p2.read());
}

void mux_onehot_if::thread_and_ln879_5_fu_226_p2() {
    and_ln879_5_fu_226_p2 = (icmp_ln879_6_fu_130_p2.read() & xor_ln879_5_fu_220_p2.read());
}

void mux_onehot_if::thread_and_ln879_fu_255_p2() {
    and_ln879_fu_255_p2 = (icmp_ln879_1_reg_345.read() & xor_ln879_fu_250_p2.read());
}

void mux_onehot_if::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mux_onehot_if::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mux_onehot_if::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mux_onehot_if::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mux_onehot_if::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mux_onehot_if::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_return = select_ln879_7_fu_330_p3.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void mux_onehot_if::thread_icmp_ln879_1_fu_100_p2() {
    icmp_ln879_1_fu_100_p2 = (!sel_V.read().is_01() || !ap_const_lv8_2.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_2);
}

void mux_onehot_if::thread_icmp_ln879_2_fu_106_p2() {
    icmp_ln879_2_fu_106_p2 = (!sel_V.read().is_01() || !ap_const_lv8_4.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_4);
}

void mux_onehot_if::thread_icmp_ln879_3_fu_112_p2() {
    icmp_ln879_3_fu_112_p2 = (!sel_V.read().is_01() || !ap_const_lv8_8.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_8);
}

void mux_onehot_if::thread_icmp_ln879_4_fu_118_p2() {
    icmp_ln879_4_fu_118_p2 = (!sel_V.read().is_01() || !ap_const_lv8_10.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_10);
}

void mux_onehot_if::thread_icmp_ln879_5_fu_124_p2() {
    icmp_ln879_5_fu_124_p2 = (!sel_V.read().is_01() || !ap_const_lv8_20.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_20);
}

void mux_onehot_if::thread_icmp_ln879_6_fu_130_p2() {
    icmp_ln879_6_fu_130_p2 = (!sel_V.read().is_01() || !ap_const_lv8_40.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_40);
}

void mux_onehot_if::thread_icmp_ln879_7_fu_136_p2() {
    icmp_ln879_7_fu_136_p2 = (!sel_V.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_80);
}

void mux_onehot_if::thread_icmp_ln879_fu_94_p2() {
    icmp_ln879_fu_94_p2 = (!sel_V.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<1>(): sc_lv<1>(sel_V.read() == ap_const_lv8_1);
}

void mux_onehot_if::thread_or_ln879_10_fu_312_p2() {
    or_ln879_10_fu_312_p2 = (or_ln879_7_fu_281_p2.read() | or_ln879_8_fu_293_p2.read());
}

void mux_onehot_if::thread_or_ln879_11_fu_325_p2() {
    or_ln879_11_fu_325_p2 = (or_ln879_9_reg_376.read() | or_ln879_10_fu_312_p2.read());
}

void mux_onehot_if::thread_or_ln879_1_fu_160_p2() {
    or_ln879_1_fu_160_p2 = (or_ln879_fu_142_p2.read() | icmp_ln879_2_fu_106_p2.read());
}

void mux_onehot_if::thread_or_ln879_2_fu_178_p2() {
    or_ln879_2_fu_178_p2 = (or_ln879_1_fu_160_p2.read() | icmp_ln879_3_fu_112_p2.read());
}

void mux_onehot_if::thread_or_ln879_3_fu_196_p2() {
    or_ln879_3_fu_196_p2 = (or_ln879_2_fu_178_p2.read() | icmp_ln879_4_fu_118_p2.read());
}

void mux_onehot_if::thread_or_ln879_4_fu_214_p2() {
    or_ln879_4_fu_214_p2 = (or_ln879_3_fu_196_p2.read() | icmp_ln879_5_fu_124_p2.read());
}

void mux_onehot_if::thread_or_ln879_5_fu_232_p2() {
    or_ln879_5_fu_232_p2 = (and_ln879_5_fu_226_p2.read() | and_ln879_4_fu_208_p2.read());
}

void mux_onehot_if::thread_or_ln879_6_fu_238_p2() {
    or_ln879_6_fu_238_p2 = (and_ln879_3_fu_190_p2.read() | and_ln879_2_fu_172_p2.read());
}

void mux_onehot_if::thread_or_ln879_7_fu_281_p2() {
    or_ln879_7_fu_281_p2 = (and_ln879_1_reg_355.read() | and_ln879_fu_255_p2.read());
}

void mux_onehot_if::thread_or_ln879_8_fu_293_p2() {
    or_ln879_8_fu_293_p2 = (icmp_ln879_reg_338.read() | icmp_ln879_7_reg_350.read());
}

void mux_onehot_if::thread_or_ln879_9_fu_244_p2() {
    or_ln879_9_fu_244_p2 = (or_ln879_5_fu_232_p2.read() | or_ln879_6_fu_238_p2.read());
}

void mux_onehot_if::thread_or_ln879_fu_142_p2() {
    or_ln879_fu_142_p2 = (icmp_ln879_fu_94_p2.read() | icmp_ln879_1_fu_100_p2.read());
}

void mux_onehot_if::thread_select_ln879_1_fu_267_p3() {
    select_ln879_1_fu_267_p3 = (!and_ln879_3_reg_361.read()[0].is_01())? sc_lv<8>(): ((and_ln879_3_reg_361.read()[0].to_bool())? din_4_V_read.read(): din_3_V_read.read());
}

void mux_onehot_if::thread_select_ln879_2_fu_274_p3() {
    select_ln879_2_fu_274_p3 = (!and_ln879_1_reg_355.read()[0].is_01())? sc_lv<8>(): ((and_ln879_1_reg_355.read()[0].to_bool())? din_2_V_read.read(): din_1_V_read.read());
}

void mux_onehot_if::thread_select_ln879_3_fu_286_p3() {
    select_ln879_3_fu_286_p3 = (!icmp_ln879_reg_338.read()[0].is_01())? sc_lv<8>(): ((icmp_ln879_reg_338.read()[0].to_bool())? din_0_V_read.read(): din_7_V_read.read());
}

void mux_onehot_if::thread_select_ln879_4_fu_297_p3() {
    select_ln879_4_fu_297_p3 = (!or_ln879_5_reg_371.read()[0].is_01())? sc_lv<8>(): ((or_ln879_5_reg_371.read()[0].to_bool())? select_ln879_fu_260_p3.read(): select_ln879_1_fu_267_p3.read());
}

void mux_onehot_if::thread_select_ln879_5_fu_304_p3() {
    select_ln879_5_fu_304_p3 = (!or_ln879_7_fu_281_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln879_7_fu_281_p2.read()[0].to_bool())? select_ln879_2_fu_274_p3.read(): select_ln879_3_fu_286_p3.read());
}

void mux_onehot_if::thread_select_ln879_6_fu_318_p3() {
    select_ln879_6_fu_318_p3 = (!or_ln879_9_reg_376.read()[0].is_01())? sc_lv<8>(): ((or_ln879_9_reg_376.read()[0].to_bool())? select_ln879_4_fu_297_p3.read(): select_ln879_5_fu_304_p3.read());
}

void mux_onehot_if::thread_select_ln879_7_fu_330_p3() {
    select_ln879_7_fu_330_p3 = (!or_ln879_11_fu_325_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln879_11_fu_325_p2.read()[0].to_bool())? select_ln879_6_fu_318_p3.read(): ap_const_lv8_0);
}

void mux_onehot_if::thread_select_ln879_fu_260_p3() {
    select_ln879_fu_260_p3 = (!and_ln879_5_reg_366.read()[0].is_01())? sc_lv<8>(): ((and_ln879_5_reg_366.read()[0].to_bool())? din_6_V_read.read(): din_5_V_read.read());
}

void mux_onehot_if::thread_xor_ln879_1_fu_148_p2() {
    xor_ln879_1_fu_148_p2 = (or_ln879_fu_142_p2.read() ^ ap_const_lv1_1);
}

void mux_onehot_if::thread_xor_ln879_2_fu_166_p2() {
    xor_ln879_2_fu_166_p2 = (or_ln879_1_fu_160_p2.read() ^ ap_const_lv1_1);
}

void mux_onehot_if::thread_xor_ln879_3_fu_184_p2() {
    xor_ln879_3_fu_184_p2 = (or_ln879_2_fu_178_p2.read() ^ ap_const_lv1_1);
}

void mux_onehot_if::thread_xor_ln879_4_fu_202_p2() {
    xor_ln879_4_fu_202_p2 = (or_ln879_3_fu_196_p2.read() ^ ap_const_lv1_1);
}

void mux_onehot_if::thread_xor_ln879_5_fu_220_p2() {
    xor_ln879_5_fu_220_p2 = (or_ln879_4_fu_214_p2.read() ^ ap_const_lv1_1);
}

void mux_onehot_if::thread_xor_ln879_fu_250_p2() {
    xor_ln879_fu_250_p2 = (icmp_ln879_reg_338.read() ^ ap_const_lv1_1);
}

void mux_onehot_if::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}

