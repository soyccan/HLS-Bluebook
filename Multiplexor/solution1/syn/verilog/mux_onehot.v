// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mux_onehot (
        ap_ready,
        din_0_V_read,
        din_1_V_read,
        din_2_V_read,
        din_3_V_read,
        din_4_V_read,
        din_5_V_read,
        din_6_V_read,
        din_7_V_read,
        sel_V,
        ap_return
);


output   ap_ready;
input  [7:0] din_0_V_read;
input  [7:0] din_1_V_read;
input  [7:0] din_2_V_read;
input  [7:0] din_3_V_read;
input  [7:0] din_4_V_read;
input  [7:0] din_5_V_read;
input  [7:0] din_6_V_read;
input  [7:0] din_7_V_read;
input  [7:0] sel_V;
output  [7:0] ap_return;

wire   [0:0] icmp_ln7_7_fu_134_p2;
wire   [0:0] icmp_ln7_6_fu_128_p2;
wire   [0:0] icmp_ln7_5_fu_122_p2;
wire   [0:0] icmp_ln7_4_fu_116_p2;
wire   [0:0] icmp_ln7_3_fu_110_p2;
wire   [0:0] icmp_ln7_2_fu_104_p2;
wire   [0:0] icmp_ln7_1_fu_98_p2;
wire   [0:0] icmp_ln7_fu_92_p2;
wire   [0:0] or_ln7_fu_148_p2;
wire   [7:0] select_ln7_fu_140_p3;
wire   [7:0] select_ln7_1_fu_154_p3;
wire   [0:0] or_ln7_1_fu_162_p2;
wire   [0:0] or_ln7_2_fu_176_p2;
wire   [7:0] select_ln7_2_fu_168_p3;
wire   [7:0] select_ln7_3_fu_182_p3;
wire   [0:0] or_ln7_3_fu_190_p2;
wire   [0:0] or_ln7_4_fu_204_p2;
wire   [7:0] select_ln7_4_fu_196_p3;
wire   [7:0] select_ln7_5_fu_210_p3;
wire   [0:0] or_ln7_5_fu_218_p2;
wire   [0:0] or_ln7_6_fu_232_p2;
wire   [7:0] select_ln7_6_fu_224_p3;

assign ap_ready = 1'b1;

assign ap_return = ((or_ln7_6_fu_232_p2[0:0] === 1'b1) ? select_ln7_6_fu_224_p3 : 8'd0);

assign icmp_ln7_1_fu_98_p2 = ((sel_V == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln7_2_fu_104_p2 = ((sel_V == 8'd32) ? 1'b1 : 1'b0);

assign icmp_ln7_3_fu_110_p2 = ((sel_V == 8'd16) ? 1'b1 : 1'b0);

assign icmp_ln7_4_fu_116_p2 = ((sel_V == 8'd8) ? 1'b1 : 1'b0);

assign icmp_ln7_5_fu_122_p2 = ((sel_V == 8'd4) ? 1'b1 : 1'b0);

assign icmp_ln7_6_fu_128_p2 = ((sel_V == 8'd2) ? 1'b1 : 1'b0);

assign icmp_ln7_7_fu_134_p2 = ((sel_V == 8'd1) ? 1'b1 : 1'b0);

assign icmp_ln7_fu_92_p2 = ((sel_V == 8'd128) ? 1'b1 : 1'b0);

assign or_ln7_1_fu_162_p2 = (icmp_ln7_5_fu_122_p2 | icmp_ln7_4_fu_116_p2);

assign or_ln7_2_fu_176_p2 = (icmp_ln7_3_fu_110_p2 | icmp_ln7_2_fu_104_p2);

assign or_ln7_3_fu_190_p2 = (icmp_ln7_fu_92_p2 | icmp_ln7_1_fu_98_p2);

assign or_ln7_4_fu_204_p2 = (or_ln7_fu_148_p2 | or_ln7_1_fu_162_p2);

assign or_ln7_5_fu_218_p2 = (or_ln7_3_fu_190_p2 | or_ln7_2_fu_176_p2);

assign or_ln7_6_fu_232_p2 = (or_ln7_5_fu_218_p2 | or_ln7_4_fu_204_p2);

assign or_ln7_fu_148_p2 = (icmp_ln7_7_fu_134_p2 | icmp_ln7_6_fu_128_p2);

assign select_ln7_1_fu_154_p3 = ((icmp_ln7_5_fu_122_p2[0:0] === 1'b1) ? din_2_V_read : din_3_V_read);

assign select_ln7_2_fu_168_p3 = ((icmp_ln7_3_fu_110_p2[0:0] === 1'b1) ? din_4_V_read : din_5_V_read);

assign select_ln7_3_fu_182_p3 = ((icmp_ln7_1_fu_98_p2[0:0] === 1'b1) ? din_6_V_read : din_7_V_read);

assign select_ln7_4_fu_196_p3 = ((or_ln7_fu_148_p2[0:0] === 1'b1) ? select_ln7_fu_140_p3 : select_ln7_1_fu_154_p3);

assign select_ln7_5_fu_210_p3 = ((or_ln7_2_fu_176_p2[0:0] === 1'b1) ? select_ln7_2_fu_168_p3 : select_ln7_3_fu_182_p3);

assign select_ln7_6_fu_224_p3 = ((or_ln7_4_fu_204_p2[0:0] === 1'b1) ? select_ln7_4_fu_196_p3 : select_ln7_5_fu_210_p3);

assign select_ln7_fu_140_p3 = ((icmp_ln7_7_fu_134_p2[0:0] === 1'b1) ? din_0_V_read : din_1_V_read);

endmodule //mux_onehot
