-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mux_onehot is
port (
    ap_ready : OUT STD_LOGIC;
    din_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    sel_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of mux_onehot is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal icmp_ln7_7_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_6_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_5_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_4_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_3_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_2_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_1_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln7_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln7_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln7_fu_140_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln7_1_fu_154_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln7_1_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln7_2_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln7_2_fu_168_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln7_3_fu_182_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln7_3_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln7_4_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln7_4_fu_196_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln7_5_fu_210_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln7_5_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln7_6_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln7_6_fu_224_p3 : STD_LOGIC_VECTOR (7 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= 
        select_ln7_6_fu_224_p3 when (or_ln7_6_fu_232_p2(0) = '1') else 
        ap_const_lv8_0;
    icmp_ln7_1_fu_98_p2 <= "1" when (sel_V = ap_const_lv8_40) else "0";
    icmp_ln7_2_fu_104_p2 <= "1" when (sel_V = ap_const_lv8_20) else "0";
    icmp_ln7_3_fu_110_p2 <= "1" when (sel_V = ap_const_lv8_10) else "0";
    icmp_ln7_4_fu_116_p2 <= "1" when (sel_V = ap_const_lv8_8) else "0";
    icmp_ln7_5_fu_122_p2 <= "1" when (sel_V = ap_const_lv8_4) else "0";
    icmp_ln7_6_fu_128_p2 <= "1" when (sel_V = ap_const_lv8_2) else "0";
    icmp_ln7_7_fu_134_p2 <= "1" when (sel_V = ap_const_lv8_1) else "0";
    icmp_ln7_fu_92_p2 <= "1" when (sel_V = ap_const_lv8_80) else "0";
    or_ln7_1_fu_162_p2 <= (icmp_ln7_5_fu_122_p2 or icmp_ln7_4_fu_116_p2);
    or_ln7_2_fu_176_p2 <= (icmp_ln7_3_fu_110_p2 or icmp_ln7_2_fu_104_p2);
    or_ln7_3_fu_190_p2 <= (icmp_ln7_fu_92_p2 or icmp_ln7_1_fu_98_p2);
    or_ln7_4_fu_204_p2 <= (or_ln7_fu_148_p2 or or_ln7_1_fu_162_p2);
    or_ln7_5_fu_218_p2 <= (or_ln7_3_fu_190_p2 or or_ln7_2_fu_176_p2);
    or_ln7_6_fu_232_p2 <= (or_ln7_5_fu_218_p2 or or_ln7_4_fu_204_p2);
    or_ln7_fu_148_p2 <= (icmp_ln7_7_fu_134_p2 or icmp_ln7_6_fu_128_p2);
    select_ln7_1_fu_154_p3 <= 
        din_2_V_read when (icmp_ln7_5_fu_122_p2(0) = '1') else 
        din_3_V_read;
    select_ln7_2_fu_168_p3 <= 
        din_4_V_read when (icmp_ln7_3_fu_110_p2(0) = '1') else 
        din_5_V_read;
    select_ln7_3_fu_182_p3 <= 
        din_6_V_read when (icmp_ln7_1_fu_98_p2(0) = '1') else 
        din_7_V_read;
    select_ln7_4_fu_196_p3 <= 
        select_ln7_fu_140_p3 when (or_ln7_fu_148_p2(0) = '1') else 
        select_ln7_1_fu_154_p3;
    select_ln7_5_fu_210_p3 <= 
        select_ln7_2_fu_168_p3 when (or_ln7_2_fu_176_p2(0) = '1') else 
        select_ln7_3_fu_182_p3;
    select_ln7_6_fu_224_p3 <= 
        select_ln7_4_fu_196_p3 when (or_ln7_4_fu_204_p2(0) = '1') else 
        select_ln7_5_fu_210_p3;
    select_ln7_fu_140_p3 <= 
        din_0_V_read when (icmp_ln7_7_fu_134_p2(0) = '1') else 
        din_1_V_read;
end behav;
