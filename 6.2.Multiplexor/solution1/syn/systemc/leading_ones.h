// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _leading_ones_HH_
#define _leading_ones_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct leading_ones : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > din_V;
    sc_out< sc_lv<1> > ap_return_0;
    sc_out< sc_lv<5> > ap_return_1;


    // Module declarations
    leading_ones(sc_module_name name);
    SC_HAS_PROCESS(leading_ones);

    ~leading_ones();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > zext_ln11_fu_615_p1;
    sc_signal< sc_lv<1> > tmp_fu_363_p3;
    sc_signal< sc_lv<1> > tmp_33_fu_371_p3;
    sc_signal< sc_lv<1> > tmp_34_fu_379_p3;
    sc_signal< sc_lv<1> > tmp_35_fu_387_p3;
    sc_signal< sc_lv<1> > tmp_36_fu_395_p3;
    sc_signal< sc_lv<1> > tmp_37_fu_403_p3;
    sc_signal< sc_lv<1> > tmp_38_fu_411_p3;
    sc_signal< sc_lv<1> > tmp_39_fu_419_p3;
    sc_signal< sc_lv<1> > tmp_40_fu_427_p3;
    sc_signal< sc_lv<1> > tmp_41_fu_435_p3;
    sc_signal< sc_lv<1> > tmp_42_fu_443_p3;
    sc_signal< sc_lv<1> > tmp_43_fu_451_p3;
    sc_signal< sc_lv<1> > tmp_44_fu_459_p3;
    sc_signal< sc_lv<1> > tmp_45_fu_467_p3;
    sc_signal< sc_lv<1> > tmp_46_fu_475_p3;
    sc_signal< sc_lv<1> > tmp_47_fu_483_p3;
    sc_signal< sc_lv<1> > tmp_48_fu_491_p3;
    sc_signal< sc_lv<1> > tmp_49_fu_499_p3;
    sc_signal< sc_lv<1> > tmp_50_fu_507_p3;
    sc_signal< sc_lv<1> > tmp_51_fu_515_p3;
    sc_signal< sc_lv<1> > tmp_52_fu_523_p3;
    sc_signal< sc_lv<1> > tmp_53_fu_531_p3;
    sc_signal< sc_lv<1> > tmp_54_fu_539_p3;
    sc_signal< sc_lv<1> > tmp_55_fu_547_p3;
    sc_signal< sc_lv<1> > tmp_56_fu_555_p3;
    sc_signal< sc_lv<1> > tmp_57_fu_563_p3;
    sc_signal< sc_lv<1> > tmp_58_fu_571_p3;
    sc_signal< sc_lv<1> > tmp_59_fu_579_p3;
    sc_signal< sc_lv<1> > tmp_60_fu_587_p3;
    sc_signal< sc_lv<1> > tmp_61_fu_595_p3;
    sc_signal< sc_lv<1> > or_ln11_fu_619_p2;
    sc_signal< sc_lv<5> > phi_ln301_reg_138;
    sc_signal< sc_lv<1> > flag_0_reg_265;
    sc_signal< sc_lv<1> > tmp_62_fu_603_p3;
    sc_signal< sc_lv<1> > trunc_ln791_fu_611_p1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > ap_return_0_preg;
    sc_signal< sc_lv<5> > ap_return_1_preg;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< bool > ap_condition_135;
    sc_signal< bool > ap_condition_139;
    sc_signal< bool > ap_condition_143;
    sc_signal< bool > ap_condition_147;
    sc_signal< bool > ap_condition_151;
    sc_signal< bool > ap_condition_155;
    sc_signal< bool > ap_condition_159;
    sc_signal< bool > ap_condition_163;
    sc_signal< bool > ap_condition_167;
    sc_signal< bool > ap_condition_171;
    sc_signal< bool > ap_condition_175;
    sc_signal< bool > ap_condition_179;
    sc_signal< bool > ap_condition_183;
    sc_signal< bool > ap_condition_187;
    sc_signal< bool > ap_condition_191;
    sc_signal< bool > ap_condition_195;
    sc_signal< bool > ap_condition_199;
    sc_signal< bool > ap_condition_203;
    sc_signal< bool > ap_condition_207;
    sc_signal< bool > ap_condition_211;
    sc_signal< bool > ap_condition_215;
    sc_signal< bool > ap_condition_219;
    sc_signal< bool > ap_condition_223;
    sc_signal< bool > ap_condition_227;
    sc_signal< bool > ap_condition_231;
    sc_signal< bool > ap_condition_235;
    sc_signal< bool > ap_condition_239;
    sc_signal< bool > ap_condition_243;
    sc_signal< bool > ap_condition_119;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1D;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1B;
    static const sc_lv<5> ap_const_lv5_1A;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_16;
    static const sc_lv<5> ap_const_lv5_15;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<5> ap_const_lv5_13;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_condition_119();
    void thread_ap_condition_135();
    void thread_ap_condition_139();
    void thread_ap_condition_143();
    void thread_ap_condition_147();
    void thread_ap_condition_151();
    void thread_ap_condition_155();
    void thread_ap_condition_159();
    void thread_ap_condition_163();
    void thread_ap_condition_167();
    void thread_ap_condition_171();
    void thread_ap_condition_175();
    void thread_ap_condition_179();
    void thread_ap_condition_183();
    void thread_ap_condition_187();
    void thread_ap_condition_191();
    void thread_ap_condition_195();
    void thread_ap_condition_199();
    void thread_ap_condition_203();
    void thread_ap_condition_207();
    void thread_ap_condition_211();
    void thread_ap_condition_215();
    void thread_ap_condition_219();
    void thread_ap_condition_223();
    void thread_ap_condition_227();
    void thread_ap_condition_231();
    void thread_ap_condition_235();
    void thread_ap_condition_239();
    void thread_ap_condition_243();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_or_ln11_fu_619_p2();
    void thread_tmp_33_fu_371_p3();
    void thread_tmp_34_fu_379_p3();
    void thread_tmp_35_fu_387_p3();
    void thread_tmp_36_fu_395_p3();
    void thread_tmp_37_fu_403_p3();
    void thread_tmp_38_fu_411_p3();
    void thread_tmp_39_fu_419_p3();
    void thread_tmp_40_fu_427_p3();
    void thread_tmp_41_fu_435_p3();
    void thread_tmp_42_fu_443_p3();
    void thread_tmp_43_fu_451_p3();
    void thread_tmp_44_fu_459_p3();
    void thread_tmp_45_fu_467_p3();
    void thread_tmp_46_fu_475_p3();
    void thread_tmp_47_fu_483_p3();
    void thread_tmp_48_fu_491_p3();
    void thread_tmp_49_fu_499_p3();
    void thread_tmp_50_fu_507_p3();
    void thread_tmp_51_fu_515_p3();
    void thread_tmp_52_fu_523_p3();
    void thread_tmp_53_fu_531_p3();
    void thread_tmp_54_fu_539_p3();
    void thread_tmp_55_fu_547_p3();
    void thread_tmp_56_fu_555_p3();
    void thread_tmp_57_fu_563_p3();
    void thread_tmp_58_fu_571_p3();
    void thread_tmp_59_fu_579_p3();
    void thread_tmp_60_fu_587_p3();
    void thread_tmp_61_fu_595_p3();
    void thread_tmp_62_fu_603_p3();
    void thread_tmp_fu_363_p3();
    void thread_trunc_ln791_fu_611_p1();
    void thread_zext_ln11_fu_615_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
