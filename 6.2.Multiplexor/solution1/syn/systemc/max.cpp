// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "max.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic max::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic max::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> max::ap_ST_fsm_state1 = "1";
const sc_lv<2> max::ap_ST_fsm_state2 = "10";
const sc_lv<32> max::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> max::ap_const_lv32_1 = "1";
const bool max::ap_const_boolean_1 = true;

max::max(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( m0_1_reg_160 );
    sensitive << ( m1_2_reg_166 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln8_6_fu_150_p2 );

    SC_METHOD(thread_icmp_ln8_1_fu_80_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( din_2_read );
    sensitive << ( din_3_read );

    SC_METHOD(thread_icmp_ln8_2_fu_94_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m0_fu_72_p3 );
    sensitive << ( m1_fu_86_p3 );

    SC_METHOD(thread_icmp_ln8_3_fu_108_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( din_4_read );
    sensitive << ( din_5_read );

    SC_METHOD(thread_icmp_ln8_4_fu_122_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( din_6_read );
    sensitive << ( din_7_read );

    SC_METHOD(thread_icmp_ln8_5_fu_136_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m0_2_fu_114_p3 );
    sensitive << ( m1_1_fu_128_p3 );

    SC_METHOD(thread_icmp_ln8_6_fu_150_p2);
    sensitive << ( m0_1_reg_160 );
    sensitive << ( m1_2_reg_166 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_icmp_ln8_fu_66_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( din_0_read );
    sensitive << ( din_1_read );

    SC_METHOD(thread_m0_1_fu_100_p3);
    sensitive << ( m0_fu_72_p3 );
    sensitive << ( m1_fu_86_p3 );
    sensitive << ( icmp_ln8_2_fu_94_p2 );

    SC_METHOD(thread_m0_2_fu_114_p3);
    sensitive << ( din_4_read );
    sensitive << ( din_5_read );
    sensitive << ( icmp_ln8_3_fu_108_p2 );

    SC_METHOD(thread_m0_fu_72_p3);
    sensitive << ( din_0_read );
    sensitive << ( din_1_read );
    sensitive << ( icmp_ln8_fu_66_p2 );

    SC_METHOD(thread_m1_1_fu_128_p3);
    sensitive << ( din_6_read );
    sensitive << ( din_7_read );
    sensitive << ( icmp_ln8_4_fu_122_p2 );

    SC_METHOD(thread_m1_2_fu_142_p3);
    sensitive << ( m0_2_fu_114_p3 );
    sensitive << ( m1_1_fu_128_p3 );
    sensitive << ( icmp_ln8_5_fu_136_p2 );

    SC_METHOD(thread_m1_fu_86_p3);
    sensitive << ( din_2_read );
    sensitive << ( din_3_read );
    sensitive << ( icmp_ln8_1_fu_80_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    ap_CS_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "max_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, din_0_read, "(port)din_0_read");
    sc_trace(mVcdFile, din_1_read, "(port)din_1_read");
    sc_trace(mVcdFile, din_2_read, "(port)din_2_read");
    sc_trace(mVcdFile, din_3_read, "(port)din_3_read");
    sc_trace(mVcdFile, din_4_read, "(port)din_4_read");
    sc_trace(mVcdFile, din_5_read, "(port)din_5_read");
    sc_trace(mVcdFile, din_6_read, "(port)din_6_read");
    sc_trace(mVcdFile, din_7_read, "(port)din_7_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, m0_1_fu_100_p3, "m0_1_fu_100_p3");
    sc_trace(mVcdFile, m0_1_reg_160, "m0_1_reg_160");
    sc_trace(mVcdFile, m1_2_fu_142_p3, "m1_2_fu_142_p3");
    sc_trace(mVcdFile, m1_2_reg_166, "m1_2_reg_166");
    sc_trace(mVcdFile, icmp_ln8_fu_66_p2, "icmp_ln8_fu_66_p2");
    sc_trace(mVcdFile, icmp_ln8_1_fu_80_p2, "icmp_ln8_1_fu_80_p2");
    sc_trace(mVcdFile, m0_fu_72_p3, "m0_fu_72_p3");
    sc_trace(mVcdFile, m1_fu_86_p3, "m1_fu_86_p3");
    sc_trace(mVcdFile, icmp_ln8_2_fu_94_p2, "icmp_ln8_2_fu_94_p2");
    sc_trace(mVcdFile, icmp_ln8_3_fu_108_p2, "icmp_ln8_3_fu_108_p2");
    sc_trace(mVcdFile, icmp_ln8_4_fu_122_p2, "icmp_ln8_4_fu_122_p2");
    sc_trace(mVcdFile, m0_2_fu_114_p3, "m0_2_fu_114_p3");
    sc_trace(mVcdFile, m1_1_fu_128_p3, "m1_1_fu_128_p3");
    sc_trace(mVcdFile, icmp_ln8_5_fu_136_p2, "icmp_ln8_5_fu_136_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln8_6_fu_150_p2, "icmp_ln8_6_fu_150_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

max::~max() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void max::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        m0_1_reg_160 = m0_1_fu_100_p3.read();
        m1_2_reg_166 = m1_2_fu_142_p3.read();
    }
}

void max::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void max::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void max::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void max::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void max::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void max::thread_ap_return() {
    ap_return = (!icmp_ln8_6_fu_150_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln8_6_fu_150_p2.read()[0].to_bool())? m0_1_reg_160.read(): m1_2_reg_166.read());
}

void max::thread_icmp_ln8_1_fu_80_p2() {
    icmp_ln8_1_fu_80_p2 = (!din_2_read.read().is_01() || !din_3_read.read().is_01())? sc_lv<1>(): (sc_bigint<32>(din_2_read.read()) > sc_bigint<32>(din_3_read.read()));
}

void max::thread_icmp_ln8_2_fu_94_p2() {
    icmp_ln8_2_fu_94_p2 = (!m0_fu_72_p3.read().is_01() || !m1_fu_86_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(m0_fu_72_p3.read()) > sc_bigint<32>(m1_fu_86_p3.read()));
}

void max::thread_icmp_ln8_3_fu_108_p2() {
    icmp_ln8_3_fu_108_p2 = (!din_4_read.read().is_01() || !din_5_read.read().is_01())? sc_lv<1>(): (sc_bigint<32>(din_4_read.read()) > sc_bigint<32>(din_5_read.read()));
}

void max::thread_icmp_ln8_4_fu_122_p2() {
    icmp_ln8_4_fu_122_p2 = (!din_6_read.read().is_01() || !din_7_read.read().is_01())? sc_lv<1>(): (sc_bigint<32>(din_6_read.read()) > sc_bigint<32>(din_7_read.read()));
}

void max::thread_icmp_ln8_5_fu_136_p2() {
    icmp_ln8_5_fu_136_p2 = (!m0_2_fu_114_p3.read().is_01() || !m1_1_fu_128_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(m0_2_fu_114_p3.read()) > sc_bigint<32>(m1_1_fu_128_p3.read()));
}

void max::thread_icmp_ln8_6_fu_150_p2() {
    icmp_ln8_6_fu_150_p2 = (!m0_1_reg_160.read().is_01() || !m1_2_reg_166.read().is_01())? sc_lv<1>(): (sc_bigint<32>(m0_1_reg_160.read()) > sc_bigint<32>(m1_2_reg_166.read()));
}

void max::thread_icmp_ln8_fu_66_p2() {
    icmp_ln8_fu_66_p2 = (!din_0_read.read().is_01() || !din_1_read.read().is_01())? sc_lv<1>(): (sc_bigint<32>(din_0_read.read()) > sc_bigint<32>(din_1_read.read()));
}

void max::thread_m0_1_fu_100_p3() {
    m0_1_fu_100_p3 = (!icmp_ln8_2_fu_94_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln8_2_fu_94_p2.read()[0].to_bool())? m0_fu_72_p3.read(): m1_fu_86_p3.read());
}

void max::thread_m0_2_fu_114_p3() {
    m0_2_fu_114_p3 = (!icmp_ln8_3_fu_108_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln8_3_fu_108_p2.read()[0].to_bool())? din_4_read.read(): din_5_read.read());
}

void max::thread_m0_fu_72_p3() {
    m0_fu_72_p3 = (!icmp_ln8_fu_66_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln8_fu_66_p2.read()[0].to_bool())? din_0_read.read(): din_1_read.read());
}

void max::thread_m1_1_fu_128_p3() {
    m1_1_fu_128_p3 = (!icmp_ln8_4_fu_122_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln8_4_fu_122_p2.read()[0].to_bool())? din_6_read.read(): din_7_read.read());
}

void max::thread_m1_2_fu_142_p3() {
    m1_2_fu_142_p3 = (!icmp_ln8_5_fu_136_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln8_5_fu_136_p2.read()[0].to_bool())? m0_2_fu_114_p3.read(): m1_1_fu_128_p3.read());
}

void max::thread_m1_fu_86_p3() {
    m1_fu_86_p3 = (!icmp_ln8_1_fu_80_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln8_1_fu_80_p2.read()[0].to_bool())? din_2_read.read(): din_3_read.read());
}

void max::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}

