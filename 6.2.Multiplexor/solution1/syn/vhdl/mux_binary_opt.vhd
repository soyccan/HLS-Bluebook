-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mux_binary_opt is
port (
    ap_ready : OUT STD_LOGIC;
    din_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    din_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    sel0_V : IN STD_LOGIC_VECTOR (2 downto 0);
    sel1_V : IN STD_LOGIC_VECTOR (2 downto 0);
    s : IN STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of mux_binary_opt is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal select_ln9_fu_96_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_104_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_104_p10 : STD_LOGIC_VECTOR (7 downto 0);

    component top_mux_83_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    top_mux_83_8_1_1_U9 : component top_mux_83_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => din_0_V_read,
        din1 => din_1_V_read,
        din2 => din_2_V_read,
        din3 => din_3_V_read,
        din4 => din_4_V_read,
        din5 => din_5_V_read,
        din6 => din_6_V_read,
        din7 => din_7_V_read,
        din8 => tmp_fu_104_p9,
        dout => tmp_fu_104_p10);




    ap_ready <= ap_const_logic_1;
    ap_return <= tmp_fu_104_p10;
    select_ln9_fu_96_p0 <= (0=>s, others=>'-');
    tmp_fu_104_p9 <= 
        sel0_V when (select_ln9_fu_96_p0(0) = '1') else 
        sel1_V;
end behav;
