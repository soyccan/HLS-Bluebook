

================================================================
== Vivado HLS Report for 'mux_onehot_if'
================================================================
* Date:           Thu Apr  8 05:49:59 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        Multiplexor
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.397 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1| 10.000 ns | 10.000 ns |    1|    1|   none  |
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.39>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%sel_V_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %sel_V)" [Multiplexor/mux_onehot_if.cpp:3]   --->   Operation 3 'read' 'sel_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (1.55ns)   --->   "%icmp_ln879 = icmp eq i8 %sel_V_read, 1" [Multiplexor/mux_onehot_if.cpp:7]   --->   Operation 4 'icmp' 'icmp_ln879' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 5 [1/1] (1.55ns)   --->   "%icmp_ln879_1 = icmp eq i8 %sel_V_read, 2" [Multiplexor/mux_onehot_if.cpp:9]   --->   Operation 5 'icmp' 'icmp_ln879_1' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 6 [1/1] (1.55ns)   --->   "%icmp_ln879_2 = icmp eq i8 %sel_V_read, 4" [Multiplexor/mux_onehot_if.cpp:11]   --->   Operation 6 'icmp' 'icmp_ln879_2' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 7 [1/1] (1.55ns)   --->   "%icmp_ln879_3 = icmp eq i8 %sel_V_read, 8" [Multiplexor/mux_onehot_if.cpp:13]   --->   Operation 7 'icmp' 'icmp_ln879_3' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 8 [1/1] (1.55ns)   --->   "%icmp_ln879_4 = icmp eq i8 %sel_V_read, 16" [Multiplexor/mux_onehot_if.cpp:15]   --->   Operation 8 'icmp' 'icmp_ln879_4' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (1.55ns)   --->   "%icmp_ln879_5 = icmp eq i8 %sel_V_read, 32" [Multiplexor/mux_onehot_if.cpp:17]   --->   Operation 9 'icmp' 'icmp_ln879_5' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (1.55ns)   --->   "%icmp_ln879_6 = icmp eq i8 %sel_V_read, 64" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 10 'icmp' 'icmp_ln879_6' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (1.55ns)   --->   "%icmp_ln879_7 = icmp eq i8 %sel_V_read, -128" [Multiplexor/mux_onehot_if.cpp:21]   --->   Operation 11 'icmp' 'icmp_ln879_7' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.97ns)   --->   "%or_ln879 = or i1 %icmp_ln879, %icmp_ln879_1" [Multiplexor/mux_onehot_if.cpp:9]   --->   Operation 12 'or' 'or_ln879' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns) (grouped into LUT with out node and_ln879_1)   --->   "%xor_ln879_1 = xor i1 %or_ln879, true" [Multiplexor/mux_onehot_if.cpp:9]   --->   Operation 13 'xor' 'xor_ln879_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln879_1 = and i1 %icmp_ln879_2, %xor_ln879_1" [Multiplexor/mux_onehot_if.cpp:11]   --->   Operation 14 'and' 'and_ln879_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.97ns)   --->   "%or_ln879_1 = or i1 %or_ln879, %icmp_ln879_2" [Multiplexor/mux_onehot_if.cpp:11]   --->   Operation 15 'or' 'or_ln879_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns) (grouped into LUT with out node or_ln879_9)   --->   "%xor_ln879_2 = xor i1 %or_ln879_1, true" [Multiplexor/mux_onehot_if.cpp:11]   --->   Operation 16 'xor' 'xor_ln879_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns) (grouped into LUT with out node or_ln879_9)   --->   "%and_ln879_2 = and i1 %icmp_ln879_3, %xor_ln879_2" [Multiplexor/mux_onehot_if.cpp:13]   --->   Operation 17 'and' 'and_ln879_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.97ns)   --->   "%or_ln879_2 = or i1 %or_ln879_1, %icmp_ln879_3" [Multiplexor/mux_onehot_if.cpp:13]   --->   Operation 18 'or' 'or_ln879_2' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns) (grouped into LUT with out node and_ln879_3)   --->   "%xor_ln879_3 = xor i1 %or_ln879_2, true" [Multiplexor/mux_onehot_if.cpp:13]   --->   Operation 19 'xor' 'xor_ln879_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln879_3 = and i1 %icmp_ln879_4, %xor_ln879_3" [Multiplexor/mux_onehot_if.cpp:15]   --->   Operation 20 'and' 'and_ln879_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.97ns)   --->   "%or_ln879_3 = or i1 %or_ln879_2, %icmp_ln879_4" [Multiplexor/mux_onehot_if.cpp:15]   --->   Operation 21 'or' 'or_ln879_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node or_ln879_5)   --->   "%xor_ln879_4 = xor i1 %or_ln879_3, true" [Multiplexor/mux_onehot_if.cpp:15]   --->   Operation 22 'xor' 'xor_ln879_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node or_ln879_5)   --->   "%and_ln879_4 = and i1 %icmp_ln879_5, %xor_ln879_4" [Multiplexor/mux_onehot_if.cpp:17]   --->   Operation 23 'and' 'and_ln879_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node and_ln879_5)   --->   "%or_ln879_4 = or i1 %or_ln879_3, %icmp_ln879_5" [Multiplexor/mux_onehot_if.cpp:17]   --->   Operation 24 'or' 'or_ln879_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node and_ln879_5)   --->   "%xor_ln879_5 = xor i1 %or_ln879_4, true" [Multiplexor/mux_onehot_if.cpp:17]   --->   Operation 25 'xor' 'xor_ln879_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln879_5 = and i1 %icmp_ln879_6, %xor_ln879_5" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 26 'and' 'and_ln879_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln879_5 = or i1 %and_ln879_5, %and_ln879_4" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 27 'or' 'or_ln879_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node or_ln879_9)   --->   "%or_ln879_6 = or i1 %and_ln879_3, %and_ln879_2" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 28 'or' 'or_ln879_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln879_9 = or i1 %or_ln879_5, %or_ln879_6" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 29 'or' 'or_ln879_9' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 4.99>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%din_7_V_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %din_7_V_read)" [Multiplexor/mux_onehot_if.cpp:3]   --->   Operation 30 'read' 'din_7_V_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%din_6_V_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %din_6_V_read)" [Multiplexor/mux_onehot_if.cpp:3]   --->   Operation 31 'read' 'din_6_V_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%din_5_V_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %din_5_V_read)" [Multiplexor/mux_onehot_if.cpp:3]   --->   Operation 32 'read' 'din_5_V_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%din_4_V_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %din_4_V_read)" [Multiplexor/mux_onehot_if.cpp:3]   --->   Operation 33 'read' 'din_4_V_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%din_3_V_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %din_3_V_read)" [Multiplexor/mux_onehot_if.cpp:3]   --->   Operation 34 'read' 'din_3_V_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%din_2_V_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %din_2_V_read)" [Multiplexor/mux_onehot_if.cpp:3]   --->   Operation 35 'read' 'din_2_V_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%din_1_V_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %din_1_V_read)" [Multiplexor/mux_onehot_if.cpp:3]   --->   Operation 36 'read' 'din_1_V_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%din_0_V_read_1 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %din_0_V_read)" [Multiplexor/mux_onehot_if.cpp:3]   --->   Operation 37 'read' 'din_0_V_read_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node or_ln879_7)   --->   "%xor_ln879 = xor i1 %icmp_ln879, true" [Multiplexor/mux_onehot_if.cpp:7]   --->   Operation 38 'xor' 'xor_ln879' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node or_ln879_7)   --->   "%and_ln879 = and i1 %icmp_ln879_1, %xor_ln879" [Multiplexor/mux_onehot_if.cpp:9]   --->   Operation 39 'and' 'and_ln879' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node select_ln879_4)   --->   "%select_ln879 = select i1 %and_ln879_5, i8 %din_6_V_read_1, i8 %din_5_V_read_1" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 40 'select' 'select_ln879' <Predicate = (or_ln879_5 & or_ln879_9)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln879_1 = select i1 %and_ln879_3, i8 %din_4_V_read_1, i8 %din_3_V_read_1" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 41 'select' 'select_ln879_1' <Predicate = (!or_ln879_5 & or_ln879_9)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node select_ln879_5)   --->   "%select_ln879_2 = select i1 %and_ln879_1, i8 %din_2_V_read_1, i8 %din_1_V_read_1" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 42 'select' 'select_ln879_2' <Predicate = (!or_ln879_9)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln879_7 = or i1 %and_ln879_1, %and_ln879" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 43 'or' 'or_ln879_7' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln879_3 = select i1 %icmp_ln879, i8 %din_0_V_read_1, i8 %din_7_V_read_1" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 44 'select' 'select_ln879_3' <Predicate = (!or_ln879_9)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node select_ln879_7)   --->   "%or_ln879_8 = or i1 %icmp_ln879, %icmp_ln879_7" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 45 'or' 'or_ln879_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln879_4 = select i1 %or_ln879_5, i8 %select_ln879, i8 %select_ln879_1" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 46 'select' 'select_ln879_4' <Predicate = (or_ln879_9)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln879_5 = select i1 %or_ln879_7, i8 %select_ln879_2, i8 %select_ln879_3" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 47 'select' 'select_ln879_5' <Predicate = (!or_ln879_9)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node select_ln879_7)   --->   "%or_ln879_10 = or i1 %or_ln879_7, %or_ln879_8" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 48 'or' 'or_ln879_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln879_6 = select i1 %or_ln879_9, i8 %select_ln879_4, i8 %select_ln879_5" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 49 'select' 'select_ln879_6' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node select_ln879_7)   --->   "%or_ln879_11 = or i1 %or_ln879_9, %or_ln879_10" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 50 'or' 'or_ln879_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.24ns) (out node of the LUT)   --->   "%select_ln879_7 = select i1 %or_ln879_11, i8 %select_ln879_6, i8 0" [Multiplexor/mux_onehot_if.cpp:19]   --->   Operation 51 'select' 'select_ln879_7' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "ret i8 %select_ln879_7" [Multiplexor/mux_onehot_if.cpp:25]   --->   Operation 52 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ din_0_V_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ din_1_V_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ din_2_V_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ din_3_V_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ din_4_V_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ din_5_V_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ din_6_V_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ din_7_V_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ sel_V]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
sel_V_read     (read  ) [ 000]
icmp_ln879     (icmp  ) [ 001]
icmp_ln879_1   (icmp  ) [ 001]
icmp_ln879_2   (icmp  ) [ 000]
icmp_ln879_3   (icmp  ) [ 000]
icmp_ln879_4   (icmp  ) [ 000]
icmp_ln879_5   (icmp  ) [ 000]
icmp_ln879_6   (icmp  ) [ 000]
icmp_ln879_7   (icmp  ) [ 001]
or_ln879       (or    ) [ 000]
xor_ln879_1    (xor   ) [ 000]
and_ln879_1    (and   ) [ 001]
or_ln879_1     (or    ) [ 000]
xor_ln879_2    (xor   ) [ 000]
and_ln879_2    (and   ) [ 000]
or_ln879_2     (or    ) [ 000]
xor_ln879_3    (xor   ) [ 000]
and_ln879_3    (and   ) [ 001]
or_ln879_3     (or    ) [ 000]
xor_ln879_4    (xor   ) [ 000]
and_ln879_4    (and   ) [ 000]
or_ln879_4     (or    ) [ 000]
xor_ln879_5    (xor   ) [ 000]
and_ln879_5    (and   ) [ 001]
or_ln879_5     (or    ) [ 001]
or_ln879_6     (or    ) [ 000]
or_ln879_9     (or    ) [ 001]
din_7_V_read_1 (read  ) [ 000]
din_6_V_read_1 (read  ) [ 000]
din_5_V_read_1 (read  ) [ 000]
din_4_V_read_1 (read  ) [ 000]
din_3_V_read_1 (read  ) [ 000]
din_2_V_read_1 (read  ) [ 000]
din_1_V_read_1 (read  ) [ 000]
din_0_V_read_1 (read  ) [ 000]
xor_ln879      (xor   ) [ 000]
and_ln879      (and   ) [ 000]
select_ln879   (select) [ 000]
select_ln879_1 (select) [ 000]
select_ln879_2 (select) [ 000]
or_ln879_7     (or    ) [ 000]
select_ln879_3 (select) [ 000]
or_ln879_8     (or    ) [ 000]
select_ln879_4 (select) [ 000]
select_ln879_5 (select) [ 000]
or_ln879_10    (or    ) [ 000]
select_ln879_6 (select) [ 000]
or_ln879_11    (or    ) [ 000]
select_ln879_7 (select) [ 000]
ret_ln25       (ret   ) [ 000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="din_0_V_read">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="din_0_V_read"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="din_1_V_read">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="din_1_V_read"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="din_2_V_read">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="din_2_V_read"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="din_3_V_read">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="din_3_V_read"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="din_4_V_read">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="din_4_V_read"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="din_5_V_read">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="din_5_V_read"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="din_6_V_read">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="din_6_V_read"/></StgValue>
</bind>
</comp>

<comp id="14" class="1000" name="din_7_V_read">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="din_7_V_read"/></StgValue>
</bind>
</comp>

<comp id="16" class="1000" name="sel_V">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="sel_V"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i8"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1004" name="sel_V_read_read_fu_40">
<pin_list>
<pin id="41" dir="0" index="0" bw="8" slack="0"/>
<pin id="42" dir="0" index="1" bw="8" slack="0"/>
<pin id="43" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="sel_V_read/1 "/>
</bind>
</comp>

<comp id="46" class="1004" name="din_7_V_read_1_read_fu_46">
<pin_list>
<pin id="47" dir="0" index="0" bw="8" slack="0"/>
<pin id="48" dir="0" index="1" bw="8" slack="0"/>
<pin id="49" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="din_7_V_read_1/2 "/>
</bind>
</comp>

<comp id="52" class="1004" name="din_6_V_read_1_read_fu_52">
<pin_list>
<pin id="53" dir="0" index="0" bw="8" slack="0"/>
<pin id="54" dir="0" index="1" bw="8" slack="0"/>
<pin id="55" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="din_6_V_read_1/2 "/>
</bind>
</comp>

<comp id="58" class="1004" name="din_5_V_read_1_read_fu_58">
<pin_list>
<pin id="59" dir="0" index="0" bw="8" slack="0"/>
<pin id="60" dir="0" index="1" bw="8" slack="0"/>
<pin id="61" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="din_5_V_read_1/2 "/>
</bind>
</comp>

<comp id="64" class="1004" name="din_4_V_read_1_read_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="8" slack="0"/>
<pin id="66" dir="0" index="1" bw="8" slack="0"/>
<pin id="67" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="din_4_V_read_1/2 "/>
</bind>
</comp>

<comp id="70" class="1004" name="din_3_V_read_1_read_fu_70">
<pin_list>
<pin id="71" dir="0" index="0" bw="8" slack="0"/>
<pin id="72" dir="0" index="1" bw="8" slack="0"/>
<pin id="73" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="din_3_V_read_1/2 "/>
</bind>
</comp>

<comp id="76" class="1004" name="din_2_V_read_1_read_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="8" slack="0"/>
<pin id="78" dir="0" index="1" bw="8" slack="0"/>
<pin id="79" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="din_2_V_read_1/2 "/>
</bind>
</comp>

<comp id="82" class="1004" name="din_1_V_read_1_read_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="8" slack="0"/>
<pin id="84" dir="0" index="1" bw="8" slack="0"/>
<pin id="85" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="din_1_V_read_1/2 "/>
</bind>
</comp>

<comp id="88" class="1004" name="din_0_V_read_1_read_fu_88">
<pin_list>
<pin id="89" dir="0" index="0" bw="8" slack="0"/>
<pin id="90" dir="0" index="1" bw="8" slack="0"/>
<pin id="91" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="din_0_V_read_1/2 "/>
</bind>
</comp>

<comp id="94" class="1004" name="icmp_ln879_fu_94">
<pin_list>
<pin id="95" dir="0" index="0" bw="8" slack="0"/>
<pin id="96" dir="0" index="1" bw="1" slack="0"/>
<pin id="97" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln879/1 "/>
</bind>
</comp>

<comp id="100" class="1004" name="icmp_ln879_1_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="8" slack="0"/>
<pin id="102" dir="0" index="1" bw="3" slack="0"/>
<pin id="103" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln879_1/1 "/>
</bind>
</comp>

<comp id="106" class="1004" name="icmp_ln879_2_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="8" slack="0"/>
<pin id="108" dir="0" index="1" bw="4" slack="0"/>
<pin id="109" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln879_2/1 "/>
</bind>
</comp>

<comp id="112" class="1004" name="icmp_ln879_3_fu_112">
<pin_list>
<pin id="113" dir="0" index="0" bw="8" slack="0"/>
<pin id="114" dir="0" index="1" bw="5" slack="0"/>
<pin id="115" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln879_3/1 "/>
</bind>
</comp>

<comp id="118" class="1004" name="icmp_ln879_4_fu_118">
<pin_list>
<pin id="119" dir="0" index="0" bw="8" slack="0"/>
<pin id="120" dir="0" index="1" bw="6" slack="0"/>
<pin id="121" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln879_4/1 "/>
</bind>
</comp>

<comp id="124" class="1004" name="icmp_ln879_5_fu_124">
<pin_list>
<pin id="125" dir="0" index="0" bw="8" slack="0"/>
<pin id="126" dir="0" index="1" bw="7" slack="0"/>
<pin id="127" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln879_5/1 "/>
</bind>
</comp>

<comp id="130" class="1004" name="icmp_ln879_6_fu_130">
<pin_list>
<pin id="131" dir="0" index="0" bw="8" slack="0"/>
<pin id="132" dir="0" index="1" bw="8" slack="0"/>
<pin id="133" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln879_6/1 "/>
</bind>
</comp>

<comp id="136" class="1004" name="icmp_ln879_7_fu_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="8" slack="0"/>
<pin id="138" dir="0" index="1" bw="8" slack="0"/>
<pin id="139" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln879_7/1 "/>
</bind>
</comp>

<comp id="142" class="1004" name="or_ln879_fu_142">
<pin_list>
<pin id="143" dir="0" index="0" bw="1" slack="0"/>
<pin id="144" dir="0" index="1" bw="1" slack="0"/>
<pin id="145" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879/1 "/>
</bind>
</comp>

<comp id="148" class="1004" name="xor_ln879_1_fu_148">
<pin_list>
<pin id="149" dir="0" index="0" bw="1" slack="0"/>
<pin id="150" dir="0" index="1" bw="1" slack="0"/>
<pin id="151" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln879_1/1 "/>
</bind>
</comp>

<comp id="154" class="1004" name="and_ln879_1_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="1" slack="0"/>
<pin id="156" dir="0" index="1" bw="1" slack="0"/>
<pin id="157" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln879_1/1 "/>
</bind>
</comp>

<comp id="160" class="1004" name="or_ln879_1_fu_160">
<pin_list>
<pin id="161" dir="0" index="0" bw="1" slack="0"/>
<pin id="162" dir="0" index="1" bw="1" slack="0"/>
<pin id="163" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_1/1 "/>
</bind>
</comp>

<comp id="166" class="1004" name="xor_ln879_2_fu_166">
<pin_list>
<pin id="167" dir="0" index="0" bw="1" slack="0"/>
<pin id="168" dir="0" index="1" bw="1" slack="0"/>
<pin id="169" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln879_2/1 "/>
</bind>
</comp>

<comp id="172" class="1004" name="and_ln879_2_fu_172">
<pin_list>
<pin id="173" dir="0" index="0" bw="1" slack="0"/>
<pin id="174" dir="0" index="1" bw="1" slack="0"/>
<pin id="175" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln879_2/1 "/>
</bind>
</comp>

<comp id="178" class="1004" name="or_ln879_2_fu_178">
<pin_list>
<pin id="179" dir="0" index="0" bw="1" slack="0"/>
<pin id="180" dir="0" index="1" bw="1" slack="0"/>
<pin id="181" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_2/1 "/>
</bind>
</comp>

<comp id="184" class="1004" name="xor_ln879_3_fu_184">
<pin_list>
<pin id="185" dir="0" index="0" bw="1" slack="0"/>
<pin id="186" dir="0" index="1" bw="1" slack="0"/>
<pin id="187" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln879_3/1 "/>
</bind>
</comp>

<comp id="190" class="1004" name="and_ln879_3_fu_190">
<pin_list>
<pin id="191" dir="0" index="0" bw="1" slack="0"/>
<pin id="192" dir="0" index="1" bw="1" slack="0"/>
<pin id="193" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln879_3/1 "/>
</bind>
</comp>

<comp id="196" class="1004" name="or_ln879_3_fu_196">
<pin_list>
<pin id="197" dir="0" index="0" bw="1" slack="0"/>
<pin id="198" dir="0" index="1" bw="1" slack="0"/>
<pin id="199" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_3/1 "/>
</bind>
</comp>

<comp id="202" class="1004" name="xor_ln879_4_fu_202">
<pin_list>
<pin id="203" dir="0" index="0" bw="1" slack="0"/>
<pin id="204" dir="0" index="1" bw="1" slack="0"/>
<pin id="205" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln879_4/1 "/>
</bind>
</comp>

<comp id="208" class="1004" name="and_ln879_4_fu_208">
<pin_list>
<pin id="209" dir="0" index="0" bw="1" slack="0"/>
<pin id="210" dir="0" index="1" bw="1" slack="0"/>
<pin id="211" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln879_4/1 "/>
</bind>
</comp>

<comp id="214" class="1004" name="or_ln879_4_fu_214">
<pin_list>
<pin id="215" dir="0" index="0" bw="1" slack="0"/>
<pin id="216" dir="0" index="1" bw="1" slack="0"/>
<pin id="217" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_4/1 "/>
</bind>
</comp>

<comp id="220" class="1004" name="xor_ln879_5_fu_220">
<pin_list>
<pin id="221" dir="0" index="0" bw="1" slack="0"/>
<pin id="222" dir="0" index="1" bw="1" slack="0"/>
<pin id="223" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln879_5/1 "/>
</bind>
</comp>

<comp id="226" class="1004" name="and_ln879_5_fu_226">
<pin_list>
<pin id="227" dir="0" index="0" bw="1" slack="0"/>
<pin id="228" dir="0" index="1" bw="1" slack="0"/>
<pin id="229" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln879_5/1 "/>
</bind>
</comp>

<comp id="232" class="1004" name="or_ln879_5_fu_232">
<pin_list>
<pin id="233" dir="0" index="0" bw="1" slack="0"/>
<pin id="234" dir="0" index="1" bw="1" slack="0"/>
<pin id="235" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_5/1 "/>
</bind>
</comp>

<comp id="238" class="1004" name="or_ln879_6_fu_238">
<pin_list>
<pin id="239" dir="0" index="0" bw="1" slack="0"/>
<pin id="240" dir="0" index="1" bw="1" slack="0"/>
<pin id="241" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_6/1 "/>
</bind>
</comp>

<comp id="244" class="1004" name="or_ln879_9_fu_244">
<pin_list>
<pin id="245" dir="0" index="0" bw="1" slack="0"/>
<pin id="246" dir="0" index="1" bw="1" slack="0"/>
<pin id="247" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_9/1 "/>
</bind>
</comp>

<comp id="250" class="1004" name="xor_ln879_fu_250">
<pin_list>
<pin id="251" dir="0" index="0" bw="1" slack="1"/>
<pin id="252" dir="0" index="1" bw="1" slack="0"/>
<pin id="253" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln879/2 "/>
</bind>
</comp>

<comp id="255" class="1004" name="and_ln879_fu_255">
<pin_list>
<pin id="256" dir="0" index="0" bw="1" slack="1"/>
<pin id="257" dir="0" index="1" bw="1" slack="0"/>
<pin id="258" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln879/2 "/>
</bind>
</comp>

<comp id="260" class="1004" name="select_ln879_fu_260">
<pin_list>
<pin id="261" dir="0" index="0" bw="1" slack="1"/>
<pin id="262" dir="0" index="1" bw="8" slack="0"/>
<pin id="263" dir="0" index="2" bw="8" slack="0"/>
<pin id="264" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln879/2 "/>
</bind>
</comp>

<comp id="267" class="1004" name="select_ln879_1_fu_267">
<pin_list>
<pin id="268" dir="0" index="0" bw="1" slack="1"/>
<pin id="269" dir="0" index="1" bw="8" slack="0"/>
<pin id="270" dir="0" index="2" bw="8" slack="0"/>
<pin id="271" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln879_1/2 "/>
</bind>
</comp>

<comp id="274" class="1004" name="select_ln879_2_fu_274">
<pin_list>
<pin id="275" dir="0" index="0" bw="1" slack="1"/>
<pin id="276" dir="0" index="1" bw="8" slack="0"/>
<pin id="277" dir="0" index="2" bw="8" slack="0"/>
<pin id="278" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln879_2/2 "/>
</bind>
</comp>

<comp id="281" class="1004" name="or_ln879_7_fu_281">
<pin_list>
<pin id="282" dir="0" index="0" bw="1" slack="1"/>
<pin id="283" dir="0" index="1" bw="1" slack="0"/>
<pin id="284" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_7/2 "/>
</bind>
</comp>

<comp id="286" class="1004" name="select_ln879_3_fu_286">
<pin_list>
<pin id="287" dir="0" index="0" bw="1" slack="1"/>
<pin id="288" dir="0" index="1" bw="8" slack="0"/>
<pin id="289" dir="0" index="2" bw="8" slack="0"/>
<pin id="290" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln879_3/2 "/>
</bind>
</comp>

<comp id="293" class="1004" name="or_ln879_8_fu_293">
<pin_list>
<pin id="294" dir="0" index="0" bw="1" slack="1"/>
<pin id="295" dir="0" index="1" bw="1" slack="1"/>
<pin id="296" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_8/2 "/>
</bind>
</comp>

<comp id="297" class="1004" name="select_ln879_4_fu_297">
<pin_list>
<pin id="298" dir="0" index="0" bw="1" slack="1"/>
<pin id="299" dir="0" index="1" bw="8" slack="0"/>
<pin id="300" dir="0" index="2" bw="8" slack="0"/>
<pin id="301" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln879_4/2 "/>
</bind>
</comp>

<comp id="304" class="1004" name="select_ln879_5_fu_304">
<pin_list>
<pin id="305" dir="0" index="0" bw="1" slack="0"/>
<pin id="306" dir="0" index="1" bw="8" slack="0"/>
<pin id="307" dir="0" index="2" bw="8" slack="0"/>
<pin id="308" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln879_5/2 "/>
</bind>
</comp>

<comp id="312" class="1004" name="or_ln879_10_fu_312">
<pin_list>
<pin id="313" dir="0" index="0" bw="1" slack="0"/>
<pin id="314" dir="0" index="1" bw="1" slack="0"/>
<pin id="315" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_10/2 "/>
</bind>
</comp>

<comp id="318" class="1004" name="select_ln879_6_fu_318">
<pin_list>
<pin id="319" dir="0" index="0" bw="1" slack="1"/>
<pin id="320" dir="0" index="1" bw="8" slack="0"/>
<pin id="321" dir="0" index="2" bw="8" slack="0"/>
<pin id="322" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln879_6/2 "/>
</bind>
</comp>

<comp id="325" class="1004" name="or_ln879_11_fu_325">
<pin_list>
<pin id="326" dir="0" index="0" bw="1" slack="1"/>
<pin id="327" dir="0" index="1" bw="1" slack="0"/>
<pin id="328" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln879_11/2 "/>
</bind>
</comp>

<comp id="330" class="1004" name="select_ln879_7_fu_330">
<pin_list>
<pin id="331" dir="0" index="0" bw="1" slack="0"/>
<pin id="332" dir="0" index="1" bw="8" slack="0"/>
<pin id="333" dir="0" index="2" bw="1" slack="0"/>
<pin id="334" dir="1" index="3" bw="8" slack="2147483647"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln879_7/2 "/>
</bind>
</comp>

<comp id="338" class="1005" name="icmp_ln879_reg_338">
<pin_list>
<pin id="339" dir="0" index="0" bw="1" slack="1"/>
<pin id="340" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="icmp_ln879 "/>
</bind>
</comp>

<comp id="345" class="1005" name="icmp_ln879_1_reg_345">
<pin_list>
<pin id="346" dir="0" index="0" bw="1" slack="1"/>
<pin id="347" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="icmp_ln879_1 "/>
</bind>
</comp>

<comp id="350" class="1005" name="icmp_ln879_7_reg_350">
<pin_list>
<pin id="351" dir="0" index="0" bw="1" slack="1"/>
<pin id="352" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="icmp_ln879_7 "/>
</bind>
</comp>

<comp id="355" class="1005" name="and_ln879_1_reg_355">
<pin_list>
<pin id="356" dir="0" index="0" bw="1" slack="1"/>
<pin id="357" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="and_ln879_1 "/>
</bind>
</comp>

<comp id="361" class="1005" name="and_ln879_3_reg_361">
<pin_list>
<pin id="362" dir="0" index="0" bw="1" slack="1"/>
<pin id="363" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="and_ln879_3 "/>
</bind>
</comp>

<comp id="366" class="1005" name="and_ln879_5_reg_366">
<pin_list>
<pin id="367" dir="0" index="0" bw="1" slack="1"/>
<pin id="368" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="and_ln879_5 "/>
</bind>
</comp>

<comp id="371" class="1005" name="or_ln879_5_reg_371">
<pin_list>
<pin id="372" dir="0" index="0" bw="1" slack="1"/>
<pin id="373" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="or_ln879_5 "/>
</bind>
</comp>

<comp id="376" class="1005" name="or_ln879_9_reg_376">
<pin_list>
<pin id="377" dir="0" index="0" bw="1" slack="1"/>
<pin id="378" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="or_ln879_9 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="44"><net_src comp="18" pin="0"/><net_sink comp="40" pin=0"/></net>

<net id="45"><net_src comp="16" pin="0"/><net_sink comp="40" pin=1"/></net>

<net id="50"><net_src comp="18" pin="0"/><net_sink comp="46" pin=0"/></net>

<net id="51"><net_src comp="14" pin="0"/><net_sink comp="46" pin=1"/></net>

<net id="56"><net_src comp="18" pin="0"/><net_sink comp="52" pin=0"/></net>

<net id="57"><net_src comp="12" pin="0"/><net_sink comp="52" pin=1"/></net>

<net id="62"><net_src comp="18" pin="0"/><net_sink comp="58" pin=0"/></net>

<net id="63"><net_src comp="10" pin="0"/><net_sink comp="58" pin=1"/></net>

<net id="68"><net_src comp="18" pin="0"/><net_sink comp="64" pin=0"/></net>

<net id="69"><net_src comp="8" pin="0"/><net_sink comp="64" pin=1"/></net>

<net id="74"><net_src comp="18" pin="0"/><net_sink comp="70" pin=0"/></net>

<net id="75"><net_src comp="6" pin="0"/><net_sink comp="70" pin=1"/></net>

<net id="80"><net_src comp="18" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="81"><net_src comp="4" pin="0"/><net_sink comp="76" pin=1"/></net>

<net id="86"><net_src comp="18" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="87"><net_src comp="2" pin="0"/><net_sink comp="82" pin=1"/></net>

<net id="92"><net_src comp="18" pin="0"/><net_sink comp="88" pin=0"/></net>

<net id="93"><net_src comp="0" pin="0"/><net_sink comp="88" pin=1"/></net>

<net id="98"><net_src comp="40" pin="2"/><net_sink comp="94" pin=0"/></net>

<net id="99"><net_src comp="20" pin="0"/><net_sink comp="94" pin=1"/></net>

<net id="104"><net_src comp="40" pin="2"/><net_sink comp="100" pin=0"/></net>

<net id="105"><net_src comp="22" pin="0"/><net_sink comp="100" pin=1"/></net>

<net id="110"><net_src comp="40" pin="2"/><net_sink comp="106" pin=0"/></net>

<net id="111"><net_src comp="24" pin="0"/><net_sink comp="106" pin=1"/></net>

<net id="116"><net_src comp="40" pin="2"/><net_sink comp="112" pin=0"/></net>

<net id="117"><net_src comp="26" pin="0"/><net_sink comp="112" pin=1"/></net>

<net id="122"><net_src comp="40" pin="2"/><net_sink comp="118" pin=0"/></net>

<net id="123"><net_src comp="28" pin="0"/><net_sink comp="118" pin=1"/></net>

<net id="128"><net_src comp="40" pin="2"/><net_sink comp="124" pin=0"/></net>

<net id="129"><net_src comp="30" pin="0"/><net_sink comp="124" pin=1"/></net>

<net id="134"><net_src comp="40" pin="2"/><net_sink comp="130" pin=0"/></net>

<net id="135"><net_src comp="32" pin="0"/><net_sink comp="130" pin=1"/></net>

<net id="140"><net_src comp="40" pin="2"/><net_sink comp="136" pin=0"/></net>

<net id="141"><net_src comp="34" pin="0"/><net_sink comp="136" pin=1"/></net>

<net id="146"><net_src comp="94" pin="2"/><net_sink comp="142" pin=0"/></net>

<net id="147"><net_src comp="100" pin="2"/><net_sink comp="142" pin=1"/></net>

<net id="152"><net_src comp="142" pin="2"/><net_sink comp="148" pin=0"/></net>

<net id="153"><net_src comp="36" pin="0"/><net_sink comp="148" pin=1"/></net>

<net id="158"><net_src comp="106" pin="2"/><net_sink comp="154" pin=0"/></net>

<net id="159"><net_src comp="148" pin="2"/><net_sink comp="154" pin=1"/></net>

<net id="164"><net_src comp="142" pin="2"/><net_sink comp="160" pin=0"/></net>

<net id="165"><net_src comp="106" pin="2"/><net_sink comp="160" pin=1"/></net>

<net id="170"><net_src comp="160" pin="2"/><net_sink comp="166" pin=0"/></net>

<net id="171"><net_src comp="36" pin="0"/><net_sink comp="166" pin=1"/></net>

<net id="176"><net_src comp="112" pin="2"/><net_sink comp="172" pin=0"/></net>

<net id="177"><net_src comp="166" pin="2"/><net_sink comp="172" pin=1"/></net>

<net id="182"><net_src comp="160" pin="2"/><net_sink comp="178" pin=0"/></net>

<net id="183"><net_src comp="112" pin="2"/><net_sink comp="178" pin=1"/></net>

<net id="188"><net_src comp="178" pin="2"/><net_sink comp="184" pin=0"/></net>

<net id="189"><net_src comp="36" pin="0"/><net_sink comp="184" pin=1"/></net>

<net id="194"><net_src comp="118" pin="2"/><net_sink comp="190" pin=0"/></net>

<net id="195"><net_src comp="184" pin="2"/><net_sink comp="190" pin=1"/></net>

<net id="200"><net_src comp="178" pin="2"/><net_sink comp="196" pin=0"/></net>

<net id="201"><net_src comp="118" pin="2"/><net_sink comp="196" pin=1"/></net>

<net id="206"><net_src comp="196" pin="2"/><net_sink comp="202" pin=0"/></net>

<net id="207"><net_src comp="36" pin="0"/><net_sink comp="202" pin=1"/></net>

<net id="212"><net_src comp="124" pin="2"/><net_sink comp="208" pin=0"/></net>

<net id="213"><net_src comp="202" pin="2"/><net_sink comp="208" pin=1"/></net>

<net id="218"><net_src comp="196" pin="2"/><net_sink comp="214" pin=0"/></net>

<net id="219"><net_src comp="124" pin="2"/><net_sink comp="214" pin=1"/></net>

<net id="224"><net_src comp="214" pin="2"/><net_sink comp="220" pin=0"/></net>

<net id="225"><net_src comp="36" pin="0"/><net_sink comp="220" pin=1"/></net>

<net id="230"><net_src comp="130" pin="2"/><net_sink comp="226" pin=0"/></net>

<net id="231"><net_src comp="220" pin="2"/><net_sink comp="226" pin=1"/></net>

<net id="236"><net_src comp="226" pin="2"/><net_sink comp="232" pin=0"/></net>

<net id="237"><net_src comp="208" pin="2"/><net_sink comp="232" pin=1"/></net>

<net id="242"><net_src comp="190" pin="2"/><net_sink comp="238" pin=0"/></net>

<net id="243"><net_src comp="172" pin="2"/><net_sink comp="238" pin=1"/></net>

<net id="248"><net_src comp="232" pin="2"/><net_sink comp="244" pin=0"/></net>

<net id="249"><net_src comp="238" pin="2"/><net_sink comp="244" pin=1"/></net>

<net id="254"><net_src comp="36" pin="0"/><net_sink comp="250" pin=1"/></net>

<net id="259"><net_src comp="250" pin="2"/><net_sink comp="255" pin=1"/></net>

<net id="265"><net_src comp="52" pin="2"/><net_sink comp="260" pin=1"/></net>

<net id="266"><net_src comp="58" pin="2"/><net_sink comp="260" pin=2"/></net>

<net id="272"><net_src comp="64" pin="2"/><net_sink comp="267" pin=1"/></net>

<net id="273"><net_src comp="70" pin="2"/><net_sink comp="267" pin=2"/></net>

<net id="279"><net_src comp="76" pin="2"/><net_sink comp="274" pin=1"/></net>

<net id="280"><net_src comp="82" pin="2"/><net_sink comp="274" pin=2"/></net>

<net id="285"><net_src comp="255" pin="2"/><net_sink comp="281" pin=1"/></net>

<net id="291"><net_src comp="88" pin="2"/><net_sink comp="286" pin=1"/></net>

<net id="292"><net_src comp="46" pin="2"/><net_sink comp="286" pin=2"/></net>

<net id="302"><net_src comp="260" pin="3"/><net_sink comp="297" pin=1"/></net>

<net id="303"><net_src comp="267" pin="3"/><net_sink comp="297" pin=2"/></net>

<net id="309"><net_src comp="281" pin="2"/><net_sink comp="304" pin=0"/></net>

<net id="310"><net_src comp="274" pin="3"/><net_sink comp="304" pin=1"/></net>

<net id="311"><net_src comp="286" pin="3"/><net_sink comp="304" pin=2"/></net>

<net id="316"><net_src comp="281" pin="2"/><net_sink comp="312" pin=0"/></net>

<net id="317"><net_src comp="293" pin="2"/><net_sink comp="312" pin=1"/></net>

<net id="323"><net_src comp="297" pin="3"/><net_sink comp="318" pin=1"/></net>

<net id="324"><net_src comp="304" pin="3"/><net_sink comp="318" pin=2"/></net>

<net id="329"><net_src comp="312" pin="2"/><net_sink comp="325" pin=1"/></net>

<net id="335"><net_src comp="325" pin="2"/><net_sink comp="330" pin=0"/></net>

<net id="336"><net_src comp="318" pin="3"/><net_sink comp="330" pin=1"/></net>

<net id="337"><net_src comp="38" pin="0"/><net_sink comp="330" pin=2"/></net>

<net id="341"><net_src comp="94" pin="2"/><net_sink comp="338" pin=0"/></net>

<net id="342"><net_src comp="338" pin="1"/><net_sink comp="250" pin=0"/></net>

<net id="343"><net_src comp="338" pin="1"/><net_sink comp="286" pin=0"/></net>

<net id="344"><net_src comp="338" pin="1"/><net_sink comp="293" pin=0"/></net>

<net id="348"><net_src comp="100" pin="2"/><net_sink comp="345" pin=0"/></net>

<net id="349"><net_src comp="345" pin="1"/><net_sink comp="255" pin=0"/></net>

<net id="353"><net_src comp="136" pin="2"/><net_sink comp="350" pin=0"/></net>

<net id="354"><net_src comp="350" pin="1"/><net_sink comp="293" pin=1"/></net>

<net id="358"><net_src comp="154" pin="2"/><net_sink comp="355" pin=0"/></net>

<net id="359"><net_src comp="355" pin="1"/><net_sink comp="274" pin=0"/></net>

<net id="360"><net_src comp="355" pin="1"/><net_sink comp="281" pin=0"/></net>

<net id="364"><net_src comp="190" pin="2"/><net_sink comp="361" pin=0"/></net>

<net id="365"><net_src comp="361" pin="1"/><net_sink comp="267" pin=0"/></net>

<net id="369"><net_src comp="226" pin="2"/><net_sink comp="366" pin=0"/></net>

<net id="370"><net_src comp="366" pin="1"/><net_sink comp="260" pin=0"/></net>

<net id="374"><net_src comp="232" pin="2"/><net_sink comp="371" pin=0"/></net>

<net id="375"><net_src comp="371" pin="1"/><net_sink comp="297" pin=0"/></net>

<net id="379"><net_src comp="244" pin="2"/><net_sink comp="376" pin=0"/></net>

<net id="380"><net_src comp="376" pin="1"/><net_sink comp="318" pin=0"/></net>

<net id="381"><net_src comp="376" pin="1"/><net_sink comp="325" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: mux_onehot_if : din_0_V_read | {2 }
	Port: mux_onehot_if : din_1_V_read | {2 }
	Port: mux_onehot_if : din_2_V_read | {2 }
	Port: mux_onehot_if : din_3_V_read | {2 }
	Port: mux_onehot_if : din_4_V_read | {2 }
	Port: mux_onehot_if : din_5_V_read | {2 }
	Port: mux_onehot_if : din_6_V_read | {2 }
	Port: mux_onehot_if : din_7_V_read | {2 }
	Port: mux_onehot_if : sel_V | {1 }
  - Chain level:
	State 1
		or_ln879 : 1
		xor_ln879_1 : 1
		and_ln879_1 : 1
		or_ln879_1 : 1
		xor_ln879_2 : 1
		and_ln879_2 : 1
		or_ln879_2 : 1
		xor_ln879_3 : 1
		and_ln879_3 : 1
		or_ln879_3 : 1
		xor_ln879_4 : 1
		and_ln879_4 : 1
		or_ln879_4 : 1
		xor_ln879_5 : 1
		and_ln879_5 : 1
		or_ln879_5 : 1
		or_ln879_6 : 1
		or_ln879_9 : 1
	State 2
		select_ln879_4 : 1
		select_ln879_6 : 1
		ret_ln25 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------------|---------|---------|
| Operation|      Functional Unit      |    FF   |   LUT   |
|----------|---------------------------|---------|---------|
|          |      icmp_ln879_fu_94     |    0    |    11   |
|          |    icmp_ln879_1_fu_100    |    0    |    11   |
|          |    icmp_ln879_2_fu_106    |    0    |    11   |
|   icmp   |    icmp_ln879_3_fu_112    |    0    |    11   |
|          |    icmp_ln879_4_fu_118    |    0    |    11   |
|          |    icmp_ln879_5_fu_124    |    0    |    11   |
|          |    icmp_ln879_6_fu_130    |    0    |    11   |
|          |    icmp_ln879_7_fu_136    |    0    |    11   |
|----------|---------------------------|---------|---------|
|          |    select_ln879_fu_260    |    0    |    8    |
|          |   select_ln879_1_fu_267   |    0    |    8    |
|          |   select_ln879_2_fu_274   |    0    |    8    |
|  select  |   select_ln879_3_fu_286   |    0    |    8    |
|          |   select_ln879_4_fu_297   |    0    |    8    |
|          |   select_ln879_5_fu_304   |    0    |    8    |
|          |   select_ln879_6_fu_318   |    0    |    8    |
|          |   select_ln879_7_fu_330   |    0    |    8    |
|----------|---------------------------|---------|---------|
|          |      or_ln879_fu_142      |    0    |    2    |
|          |     or_ln879_1_fu_160     |    0    |    2    |
|          |     or_ln879_2_fu_178     |    0    |    2    |
|          |     or_ln879_3_fu_196     |    0    |    2    |
|          |     or_ln879_4_fu_214     |    0    |    2    |
|    or    |     or_ln879_5_fu_232     |    0    |    2    |
|          |     or_ln879_6_fu_238     |    0    |    2    |
|          |     or_ln879_9_fu_244     |    0    |    2    |
|          |     or_ln879_7_fu_281     |    0    |    2    |
|          |     or_ln879_8_fu_293     |    0    |    2    |
|          |     or_ln879_10_fu_312    |    0    |    2    |
|          |     or_ln879_11_fu_325    |    0    |    2    |
|----------|---------------------------|---------|---------|
|          |     xor_ln879_1_fu_148    |    0    |    2    |
|          |     xor_ln879_2_fu_166    |    0    |    2    |
|    xor   |     xor_ln879_3_fu_184    |    0    |    2    |
|          |     xor_ln879_4_fu_202    |    0    |    2    |
|          |     xor_ln879_5_fu_220    |    0    |    2    |
|          |      xor_ln879_fu_250     |    0    |    2    |
|----------|---------------------------|---------|---------|
|          |     and_ln879_1_fu_154    |    0    |    2    |
|          |     and_ln879_2_fu_172    |    0    |    2    |
|    and   |     and_ln879_3_fu_190    |    0    |    2    |
|          |     and_ln879_4_fu_208    |    0    |    2    |
|          |     and_ln879_5_fu_226    |    0    |    2    |
|          |      and_ln879_fu_255     |    0    |    2    |
|----------|---------------------------|---------|---------|
|          |   sel_V_read_read_fu_40   |    0    |    0    |
|          | din_7_V_read_1_read_fu_46 |    0    |    0    |
|          | din_6_V_read_1_read_fu_52 |    0    |    0    |
|          | din_5_V_read_1_read_fu_58 |    0    |    0    |
|   read   | din_4_V_read_1_read_fu_64 |    0    |    0    |
|          | din_3_V_read_1_read_fu_70 |    0    |    0    |
|          | din_2_V_read_1_read_fu_76 |    0    |    0    |
|          | din_1_V_read_1_read_fu_82 |    0    |    0    |
|          | din_0_V_read_1_read_fu_88 |    0    |    0    |
|----------|---------------------------|---------|---------|
|   Total  |                           |    0    |   200   |
|----------|---------------------------|---------|---------|

Memories:
N/A

* Register list:
+--------------------+--------+
|                    |   FF   |
+--------------------+--------+
| and_ln879_1_reg_355|    1   |
| and_ln879_3_reg_361|    1   |
| and_ln879_5_reg_366|    1   |
|icmp_ln879_1_reg_345|    1   |
|icmp_ln879_7_reg_350|    1   |
| icmp_ln879_reg_338 |    1   |
| or_ln879_5_reg_371 |    1   |
| or_ln879_9_reg_376 |    1   |
+--------------------+--------+
|        Total       |    8   |
+--------------------+--------+

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   200  |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    8   |    -   |
+-----------+--------+--------+
|   Total   |    8   |   200  |
+-----------+--------+--------+
